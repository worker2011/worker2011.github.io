<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leo2011的博客</title>
  
  <subtitle>一个蒟蒻的OI日记</subtitle>
  <link href="https://www.leo2011.eu.org/atom.xml" rel="self"/>
  
  <link href="https://www.leo2011.eu.org/"/>
  <updated>2025-05-10T14:16:36.625Z</updated>
  <id>https://www.leo2011.eu.org/</id>
  
  <author>
    <name>Leo2011</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>题解：P1001 A+B Problem</title>
    <link href="https://www.leo2011.eu.org/2025/05/10/ti-jie-p1001-a-b-problem/"/>
    <id>https://www.leo2011.eu.org/2025/05/10/ti-jie-p1001-a-b-problem/</id>
    <published>2025-05-10T13:30:41.000Z</published>
    <updated>2025-05-10T14:16:36.625Z</updated>
    
    <content type="html"><![CDATA[<p>核弹打蚊子题。</p><h1 id="正解">正解</h1><p>人口普查代码，直接公布如下了：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; a + b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="整活">整活</h1><p>声明：本文灵感来源于此文：<a class="link" href="https://mp.weixin.qq.com/s/FRL2bKNbWWBpuTfuMpmGDg">文章公众号链接<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>首先，我们要请出一个预编译指令：<code>define</code></p><details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>什么是预编译指令？ </summary>              <div class="content">              <p>首先，我们需要知道编译的流程。第一步就是这个预编译，这些指令一般以<code>#</code> 开头，比如常见的 <code>#include</code>就是，它的处理方法就是递归把被 <code>#include</code>的东西塞到文件上去。</p><p>而这个 <code>define</code>的作用类似于查找并替换（全字匹配），会被替换掉，之后不影响编译。同时注释也会在这个流程中被隐去。</p><p>接着就是编译和汇编，分别是把你的代码转换为汇编代码，然后才是机器码。然后会进行一种叫 “链接” 的操作，此时才算完毕。</p>              </div>            </details><p>比如说，想开 <code>long long</code>了，你是不是写过：<code>#define int long long</code>？（srds，根据 <a class="link" href="https://blog.baoshuo.ren/post/say-no-to-define-int-long-long/">宝硕大佬的文章和相关标准<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，这个操作并不好）</p><p>然后，我们就可以写出酱紫的代码：</p><figure><img lazyload="" src="/images/loading.svg" data-src="/images/WestLife.png" alt="如图所示"><figcaption aria-hidden="true">如图所示</figcaption></figure><p>啊 bushi，是这个：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> So <span class="keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I iostream</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Say using</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> A namespace</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> little std</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> prayer int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> my int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dreams main</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> will cin</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> take And</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> me hope</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> there cout</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> where And</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> the hope</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> skys endl</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> are return</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> blue 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">// 注意到预编译指令的周围都有非空格符号，不满足“全字匹配”的定义，因此不得不放弃这么搞。</span></span><br><span class="line"><span class="comment">// 在小 L 本地上，中文似乎会 CE，因此选了一首英文歌</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// So I</span></span><br><span class="line"></span><br><span class="line">Say A little;</span><br><span class="line"></span><br><span class="line">prayer And, hope;</span><br><span class="line"></span><br><span class="line"><span class="function">my <span class="title">dreams</span><span class="params">()</span> </span>{</span><br><span class="line">will &gt;&gt; take &gt;&gt; me;</span><br><span class="line">there &lt;&lt; where + the &lt;&lt; skys;</span><br><span class="line">are blue;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/216721996">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;核弹打蚊子题。&lt;/p&gt;
&lt;h1 id=&quot;正解&quot;&gt;正解&lt;/h1&gt;
&lt;p&gt;人口普查代码，直接公布如下了：&lt;/p&gt;
&lt;div class=&quot;code-container&quot; data-rel=&quot;Cpp&quot;&gt;&lt;figure class=&quot;iseeu highlight cpp&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>复出的第一篇文章 &amp; 两场 ACM 竞赛的混合游记</title>
    <link href="https://www.leo2011.eu.org/2025/05/01/fu-chu-de-di-yi-pian-wen-zhang-liang-chang-acm-jing-sai-de-hun-he-you-ji/"/>
    <id>https://www.leo2011.eu.org/2025/05/01/fu-chu-de-di-yi-pian-wen-zhang-liang-chang-acm-jing-sai-de-hun-he-you-ji/</id>
    <published>2025-05-01T02:24:47.000Z</published>
    <updated>2025-05-10T15:12:57.011Z</updated>
    
    <content type="html"><![CDATA[<p>小 L <del>残血</del>复活啦！最近在研究 whk，OI也比较废，姑且就写写游记水一水吧。</p><p>由于电脑比较烂删了很多必要的组件，加上之前一段时间写的都是长文（当然，都没写完），因此拖更了很长时间，不好意思哈！</p><p>本次依然按照时间顺序～</p><h1 id="day--infty">Day <span class="math inline">−∞</span></h1><p>N 多 years ago，老师找了个 CUHK (SZ) 的比赛名额，小 L作为这一届<del>前</del>最强的选手自然也要来参加！</p><p>然鹅，期中考逝就要到了，小 L 只好把 whk 时间提高到了 <span class="math inline">900%</span>（别问我为啥这么离谱）</p><p>后面又多了个去 SZTU 的比赛。</p><p>笑点解析：小 L 从 PS 干到 GM （小 L 所在的浅圳市的两个区）才上的5231（指现在这个学校，这是小 L 字丑闹出来的笑话awa），本想着可以近一点，结果比赛的时候又给我干回 PS 去了……</p><h1 id="day-1">Day 1</h1><p>本次比赛为 CUHK (SZ)。官方名称叫什么 “国际编程大赛”。学校在离 PS 很近的LG（不是你谷啦）区。让我比较惊喜的是可以带纸质资料哎！<del>虽然实践表明没啥大用</del></p><h2 id="上午热身赛">上午热身赛</h2><p>本来到的比较早的了（总部那些人上午的热身赛干脆不打了），但是到了地方还是人巨多。而且我竟然不知道自己是那个赛道的（有A、B、C 三个，后续得知 A 是内部的，B 是小 L这种 <del>xxs</del> 中小学生的，C 打得好可以保博）</p><p>经过不懈的 —— 排队，拿到了参赛证，进入机房，结果机子死活登不上去。后面改了三五回密码，终于进去了（密码的！）</p><p>这里只能用 Dev-C++ <del>这种老古董</del>，VSCode没配置（考场机器老毛病了），鉴于是 ACM 赛制就不用了。</p><p>上午 Track B 参赛 48 人，小 L 以做出一题的成绩位列第 17名（一共四道题）。</p><p>笑点解析：比赛提供中英双语题面，中文在 B 题的链接里，点了 A题链接看到题目就开始做的小 L 愣是仗着自己英语好看了半天的英文题面。</p><h2 id="中午">中午</h2><p>先是打了 GDCIE的一场弱智比赛。从上周延期到这天的，理由竟是服务器炸了？还 TM只有选判，若只啊…… 这还是那个敢对战 CCF 的 CIE吗？校内信号还贼差（只允许访问内部 OJ），我 *****</p><p>更逆天的是妈妈九点多点的外卖十一点了还没送到…… 店就在校内啊…… 相距只有 1 公里多啊…… 这要十几分钟？骑手的电驴比我跑的都慢啊…… 干脆取消订单去食堂了。</p><p>不过食堂很干净也很香，比去年集训去的某双非强多了……</p><p>遂发朋友圈，结果得到了老师的关注，不要哇……</p><h2 id="下午">下午</h2><h3 id="正式比赛">正式比赛</h3><p>开题。然后第一题：</p><blockquote><p>我是奶龙！我才是奶龙！</p></blockquote><p>啊，不是戈门，您这玩意儿它对吗？</p><p>不过 A 题就是个字符串处理的水题，7min 拿到气球（真的有哎！）。</p><p>后续 B 题是个约瑟夫模板，小 L愣是写了莫名其妙的半个多小时然后莫名其妙的用了双向循环链表才过的。不过好歹莫名其妙的没吃上罚时，而且莫名其妙跑的不算慢。</p><p>C 题因为没看题<del>（逃</del> 挂了一发，但是比 B 题写的快。</p><p>后面的比赛全程死磕 D 一道中模拟，最后交了 <span class="math inline">8</span>发愣是没过。然后比赛结束了。不过比隔壁高中了但是爆炸的（奶龙题都没过！）的大哥强。</p><h3 id="讲评">讲评</h3><p>ABCD 都是水题，D 题我想对了，应该还是细节吧。</p><p>后面的题解拍照就好了。</p><p>集团一共 6 人获奖，我排第 7……</p><p>笑点解析： 1. 学校运动会，我班 <span class="math inline">4</span>支队伍，<span class="math inline">3</span> 支位列年级前 <span class="math inline">3</span>，我们队全班第 <span class="math inline">4</span>…… 2. 期中考逝，小 L上学期两次年级第一的实力不出前 <span class="math inline">2</span>就死不了，结果一对分数，第 <span class="math inline">3</span>……（幸好不让公布排名否则就真去世了……）</p><p>总结：老是差一名。</p><p>不过虽然没拿到奖品，但是白嫖两瓶水和一支铅笔。</p><h1 id="day-2">Day 2</h1><p>期中考逝，结果除了地理 (<span class="math inline">49/50</span>)之外全部玩儿脱了…… 第一次掉出前二……</p><p>比如说，之前 <span class="math inline">49/50</span>（期中）、<span class="math inline">40/45</span>（期末，全区第一 <span class="math inline">41</span>）的生物，选择挂了 <span class="math inline">4</span> 个，只有 <span class="math inline">45</span> 了……</p><p>比如说，之前只扣 <span class="math inline">0.5</span>分的英语作文（<span class="math inline">14.5/15</span>），如今只剩 <span class="math inline">13</span> 了……</p><p>错，错，错。</p><p>哭点解析：班长当了一个半学期的年级第三（稳定的离谱），被我给干退步了……</p><h3 id="day-3">Day 3</h3><p>跑到 PS 考 SZTU。</p><h4 id="入场前">入场前</h4><p><del>百里迢迢</del> 来到现场比赛，然后发现车找不到停车场和考场：)</p><p>不过和教练以及本部的二位大佬会合了，然后莫名其妙（我怎么莫名其妙的是个这么莫名其妙的人？）的成了敲代码的。教练<del>检验</del>了一下whk，竟然过关了（他本来要求年级前 <span class="math inline">100</span>，但我们整个初中部就我们一个年级，一共才<span class="math inline">119</span>个人…… 还有一个国家一级运动员下午不上课、考试看随机的dalao，真・把答题卡丢地上踩两脚就行）</p><h4 id="场内">场内</h4><p>正式了很多，但是气球组明显效率不高。</p><p>由于考试有 <span class="math inline">5</span>个小时，所以要自备干粮，然后我们的被隔壁组抢了（</p><p>不过这次的 VSCode 配置好了哎！就是不知道为什么一份代码它和 Dev的结果不一样（UB？）</p><hr><p>先做的 A啦，语言入门题。但是莫名其妙（又莫名其妙！）的在线处理会很慢，<del>经隔壁队的提醒</del>离线就过了。</p><p>在 A 题莫名其妙的过程中，小 L 突然发现 G题只有输出，然后队友飞速把它秒了。</p><p>接着做完 A 之后，小 L 开始拼F，但是样例一直没过（莫名其妙的每个答案都大 <span class="math inline">2</span>），考后得知叫什么斯坦纳树，我就说我 Floyd过不了嘛（</p><p>他们考试找 E 题（数学题）的规律和想 J，但是 J 写完之后一直没过，E一直没想出来。后续小 L接手，一顿提交之后用队列滑动窗口极限过掉了此题（此时距比赛结束还剩不到半个小时），摆脱了队伍成为倒一的厄运，同时得到了隔壁组的紧急<del>抄袭</del>，队友直呼自己是躺赢狗（A题中的梗）</p><p>与此同时，队友们找到了首 A E题的队伍（也是我们集团的），和隔壁队伍等一起沟通后交给小 L 找规律，小 L最终极限（距比赛结束还剩6min）时将规律全部找出，但是没空写了。和预期一样，首 A队伍的代码很短。</p><p>由于小 L 回家需要横跨整个市，教练就让小 L先回去了，最后奖项：“成功参赛”？</p><p>结束了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小 L &lt;del&gt;残血&lt;/del&gt;复活啦！最近在研究 whk，OI
也比较废，姑且就写写游记水一水吧。&lt;/p&gt;
&lt;p&gt;由于电脑比较烂删了很多必要的组件，加上之前一段时间写的都是长文（当然，都没写完），因此拖更了很长时间，不好意思哈！&lt;/p&gt;
&lt;p&gt;本次依然按照时间顺序～&lt;/</summary>
      
    
    
    
    <category term="游寄" scheme="https://www.leo2011.eu.org/categories/%E6%B8%B8%E5%AF%84/"/>
    
    
  </entry>
  
  <entry>
    <title>GESP 202412 七 &amp; 八级全解</title>
    <link href="https://www.leo2011.eu.org/2025/03/16/gesp-202412-qi-ba-ji-quan-jie/"/>
    <id>https://www.leo2011.eu.org/2025/03/16/gesp-202412-qi-ba-ji-quan-jie/</id>
    <published>2025-03-16T13:23:00.000Z</published>
    <updated>2025-03-16T14:32:32.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="七级">七级</h1><p>TODO。</p><h1 id="八级">八级</h1><p>题目来源：官方公众号 <a class="link" href="https://mp.weixin.qq.com/s/eQS4bqPm4tGKziFe0b2QMg">https://mp.weixin.qq.com/s/eQS4bqPm4tGKziFe0b2QMg<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。</p><h2 id="选择题">选择题</h2><h3 id="t1">T1</h3><h4 id="题面">题面</h4><p>小杨家响应国家 “以旧换新” 政策，将自家的汽油车置换为新能源汽车，正在准备自编车牌。自编车牌包括<span class="math inline">5</span> 位数字或英文字母，要求第 <span class="math inline">5</span> 位必须是数字，前 <span class="math inline">4</span> 位中可以有最多 <span class="math inline">1</span> 位英文字母。英文字母必须是大写，而且不能是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> 或 <span class="math inline">I</span>（因为容易与数字 <span class="math inline">0</span> 或 <span class="math inline">1</span>混淆）。请问自编车牌共有多少种可能性？（ ）。</p><h4 id="选项">选项</h4><p>A. <span class="math inline">100, 000</span></p><p>B. <span class="math inline">1, 060, 000</span></p><p>C. <span class="math inline">1, 360, 000</span></p><p>D. <span class="math inline">1, 460, 000</span></p><h4 id="解析">解析</h4><p><del>说句闲话：这不是蓝牌燃油车的操作方法吗？</del></p><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="111.356ex" height="2.583ex" role="img" focusable="false" viewBox="0 -891.7 49219.3 1141.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(1500,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">英</text></g><g data-mml-node="mi" transform="translate(2500,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">文</text></g><g data-mml-node="mo" transform="translate(3777.8,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="msup" transform="translate(4333.6,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mo" transform="translate(5770.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6159.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(7159.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(7548.1,0)"></g><g data-mml-node="mn" transform="translate(7548.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(8048.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(9048.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">英</text></g><g data-mml-node="mi" transform="translate(10048.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">文</text></g><g data-mml-node="mo" transform="translate(11325.9,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mn" transform="translate(11881.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(13103.9,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(14104.1,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(15762.9,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(16763.1,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mspace" transform="translate(17263.1,0)"></g><g data-mml-node="mo" transform="translate(17540.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(18596.7,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(19818.9,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(20819.1,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mspace" transform="translate(22255.7,0)"></g><g data-mml-node="mo" transform="translate(22533.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(23589.2,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(25089.4,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(26089.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mo" transform="translate(27526.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(27915.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(28915.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(29304.2,0)"></g><g data-mml-node="mspace" transform="translate(29304.2,0)"></g><g data-mml-node="mn" transform="translate(29304.2,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(30804.4,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(31804.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mo" transform="translate(33463.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(34463.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mspace" transform="translate(35900.2,0)"></g><g data-mml-node="mo" transform="translate(36178,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(37233.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(1000,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(39234,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(40234.2,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mspace" transform="translate(41670.8,0)"></g><g data-mml-node="mo" transform="translate(41948.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(43004.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(45004.5,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(46004.8,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mn" transform="translate(1033,413) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g></g><g data-mml-node="mo" transform="translate(47441.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(47830.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(48830.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span></p><p>故选 <span class="math inline">B</span>。</p><h3 id="t2">T2</h3><h4 id="题面-1">题面</h4><p>新年到，四家人在一起聚会。其中两家有三口人，另外两家有两口人。现在要安排大家在一张十人圆桌坐下，要求一家人必须相邻就座。由于有 “主座” 的习俗，每个座位都被认为是不同的。请问共有多少种就座方案？（）。</p><h4 id="选项-1">选项</h4><p><span class="math inline">A.8640</span></p><p><span class="math inline">B.6912</span></p><p><span class="math inline">C.144</span></p><p><span class="math inline">D.60</span></p><h4 id="解析-1">解析</h4><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.607ex;" xmlns="http://www.w3.org/2000/svg" width="489.461ex" height="2.607ex" role="img" focusable="false" viewBox="0 -883.9 216341.5 1152.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">先</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">下</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="mn" transform="translate(5000,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(5722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(6722.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(7444.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8444.9,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(9167.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(10167.3,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mspace" transform="translate(10667.3,0)"></g><g data-mml-node="mo" transform="translate(10945.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(12000.9,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(12723.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(13723.3,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mspace" transform="translate(14223.3,0)"></g><g data-mml-node="mo" transform="translate(14501.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(15556.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(16556.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(17556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">人</text></g><g data-mml-node="mi" transform="translate(18556.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(19556.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(20556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">说</text></g><g data-mml-node="mi" transform="translate(21556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">明</text></g><g data-mml-node="mi" transform="translate(22556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">刚</text></g><g data-mml-node="mi" transform="translate(23556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">好</text></g><g data-mml-node="mi" transform="translate(24556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">坐</text></g><g data-mml-node="mi" transform="translate(25556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">满</text></g><g data-mml-node="mspace" transform="translate(26556.9,0)"></g><g data-mml-node="mi" transform="translate(26556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">由</text></g><g data-mml-node="mi" transform="translate(27556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(28556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">圆</text></g><g data-mml-node="mi" transform="translate(29556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">桌</text></g><g data-mml-node="mi" transform="translate(30556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text></g><g data-mml-node="mi" transform="translate(31556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">太</text></g><g data-mml-node="mi" transform="translate(32556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">好</text></g><g data-mml-node="mi" transform="translate(33556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">处</text></g><g data-mml-node="mi" transform="translate(34556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">理</text></g><g data-mml-node="mi" transform="translate(35556.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(36556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(37556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(38556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">姑</text></g><g data-mml-node="mi" transform="translate(39556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">且</text></g><g data-mml-node="mi" transform="translate(40556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">先</text></g><g data-mml-node="mi" transform="translate(41556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">固</text></g><g data-mml-node="mi" transform="translate(42556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(43556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(44556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mi" transform="translate(45556.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(46556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(47556.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">后</text></g><g data-mml-node="mo" transform="translate(48779.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(49779.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(50779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mi" transform="translate(51779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">可</text></g><g data-mml-node="mi" transform="translate(52779.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(53779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">因</text></g><g data-mml-node="mi" transform="translate(54779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">此</text></g><g data-mml-node="mi" transform="translate(55779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">直</text></g><g data-mml-node="mi" transform="translate(56779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">接</text></g><g data-mml-node="mi" transform="translate(57779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">排</text></g><g data-mml-node="mi" transform="translate(58779.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">除</text></g><g data-mml-node="mtext" transform="translate(59779.3,0)"><path data-c="42" d="M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z"></path><path data-c="20" d="" transform="translate(708,0)"></path><path data-c="26" d="M156 540Q156 620 201 668T302 716Q354 716 377 671T401 578Q401 505 287 386L274 373Q309 285 416 148L429 132L437 142Q474 191 543 309L562 341V349Q562 368 541 376T498 385H493V431H502L626 428Q709 428 721 431H727V385H712Q688 384 669 379T639 369T618 354T603 337T591 316T578 295Q537 223 506 176T464 117T454 104Q454 102 471 85T497 62Q543 24 585 24Q618 24 648 48T682 113V121H722V112Q721 94 714 75T692 32T646 -7T574 -22Q491 -19 414 42L402 51L391 42Q312 -22 224 -22Q144 -22 93 25T42 135Q42 153 46 169T55 197T74 225T96 249T125 278T156 308L195 347L190 360Q185 372 182 382T174 411T165 448T159 491T156 540ZM361 576Q361 613 348 646T305 679Q272 679 252 649T232 572Q232 497 255 426L259 411L267 420Q361 519 361 576ZM140 164Q140 103 167 64T240 24Q271 24 304 36T356 61T374 77Q295 156 235 262L220 292L210 310L193 293Q177 277 169 268T151 229T140 164Z" transform="translate(958,0)"></path><path data-c="20" d="" transform="translate(1736,0)"></path><path data-c="43" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z" transform="translate(1986,0)"></path></g><g data-mml-node="mo" transform="translate(62487.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(62876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(63876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">实</text></g><g data-mml-node="mi" transform="translate(64876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">到</text></g><g data-mml-node="mi" transform="translate(65876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(66876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">里</text></g><g data-mml-node="mi" transform="translate(67876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">就</text></g><g data-mml-node="mi" transform="translate(68876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(69876.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">来</text></g><g data-mml-node="mi" transform="translate(70876.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(71876.3,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(72636.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(73636.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(74636.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(75636.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mo" transform="translate(76803,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(78141.7,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mi" transform="translate(79480.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">太</text></g><g data-mml-node="mi" transform="translate(80480.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">磕</text></g><g data-mml-node="mi" transform="translate(81480.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">碜</text></g><g data-mml-node="mi" transform="translate(82480.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(83480.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">吧</text></g><g data-mml-node="mo" transform="translate(84647,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(85985.7,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(87157.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(87546.7,0)"></g><g data-mml-node="mi" transform="translate(87546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">鉴</text></g><g data-mml-node="mi" transform="translate(88546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(89546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">固</text></g><g data-mml-node="mi" transform="translate(90546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">定</text></g><g data-mml-node="mi" transform="translate(91546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(92546.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(93546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">直</text></g><g data-mml-node="mi" transform="translate(94546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">接</text></g><g data-mml-node="mi" transform="translate(95546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">编</text></g><g data-mml-node="mi" transform="translate(96546.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mn" transform="translate(97546.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(98324.4,0)"><path data-c="223C" d="M55 166Q55 241 101 304T222 367Q260 367 296 349T362 304T421 252T484 208T554 189Q616 189 655 236T694 338Q694 350 698 358T708 367Q722 367 722 334Q722 260 677 197T562 134H554Q517 134 481 152T414 196T355 248T292 293T223 311Q179 311 145 286Q109 257 96 218T80 156T69 133Q55 133 55 166Z"></path></g><g data-mml-node="mn" transform="translate(99380.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mspace" transform="translate(100380.2,0)"></g><g data-mml-node="mi" transform="translate(100380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">然</text></g><g data-mml-node="mi" transform="translate(101380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">后</text></g><g data-mml-node="mi" transform="translate(102380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">就</text></g><g data-mml-node="mi" transform="translate(103380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(104380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">直</text></g><g data-mml-node="mi" transform="translate(105380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">接</text></g><g data-mml-node="mi" transform="translate(106380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(107380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(108380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(109380.2,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mspace" transform="translate(110380.2,0)"></g><g data-mml-node="mi" transform="translate(110380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">鉴</text></g><g data-mml-node="mi" transform="translate(111380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mi" transform="translate(112380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">每</text></g><g data-mml-node="mi" transform="translate(113380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">家</text></g><g data-mml-node="mi" transform="translate(114380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">都</text></g><g data-mml-node="mi" transform="translate(115380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(116380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">坐</text></g><g data-mml-node="mi" transform="translate(117380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(118380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">起</text></g><g data-mml-node="mi" transform="translate(119380.2,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(120380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">干</text></g><g data-mml-node="mi" transform="translate(121380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">脆</text></g><g data-mml-node="mi" transform="translate(122380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">打</text></g><g data-mml-node="mi" transform="translate(123380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">包</text></g><g data-mml-node="mi" transform="translate(124380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(125380.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mo" transform="translate(126380.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(126769.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">所</text></g><g data-mml-node="mi" transform="translate(127769.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">谓</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(128769.2,0)"><g data-mml-node="mo"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(129319.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">捆</text></g><g data-mml-node="mi" transform="translate(130319.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">绑</text></g><g data-mml-node="mi" transform="translate(131319.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">法</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(132319.2,0)"><g data-mml-node="mo"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(132869.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(133258.2,0)"></g><g data-mml-node="mi" transform="translate(133258.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">三</text></g><g data-mml-node="mi" transform="translate(134258.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">口</text></g><g data-mml-node="mi" transform="translate(135258.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(136258.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">家</text></g><g data-mml-node="mi" transform="translate(137258.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="msubsup" transform="translate(138258.2,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mn" transform="translate(783,413) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mn" transform="translate(783,-252.8) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(139722.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(140778.3,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mi" transform="translate(141278.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(142278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mi" transform="translate(143278.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(144278.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(145278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">二</text></g><g data-mml-node="mi" transform="translate(146278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">口</text></g><g data-mml-node="mi" transform="translate(147278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(148278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">家</text></g><g data-mml-node="mi" transform="translate(149278.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="msubsup" transform="translate(150278.3,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mn" transform="translate(783,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(783,-247) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(151742.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(152798.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(153298.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mi" transform="translate(154298.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(155298.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">各</text></g><g data-mml-node="mi" transform="translate(156298.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">两</text></g><g data-mml-node="mi" transform="translate(157298.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(158298.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(159298.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mspace" transform="translate(160298.4,0)"></g><g data-mml-node="msup" transform="translate(160298.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(161457.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(162457.4,0)"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(163671.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(164727.5,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(165449.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(166172,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(167449.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(168505.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(170005.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(170394.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(171394.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(171783.5,0)"></g><g data-mml-node="mi" transform="translate(171783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">但</text></g><g data-mml-node="mi" transform="translate(172783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(173783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(174783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">四</text></g><g data-mml-node="mi" transform="translate(175783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">家</text></g><g data-mml-node="mi" transform="translate(176783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">也</text></g><g data-mml-node="mi" transform="translate(177783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(178783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">排</text></g><g data-mml-node="mi" transform="translate(179783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">列</text></g><g data-mml-node="mi" transform="translate(180783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">顺</text></g><g data-mml-node="mi" transform="translate(181783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">序</text></g><g data-mml-node="mi" transform="translate(182783.5,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(183783.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="mo" transform="translate(184783.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(185172.5,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(185894.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(186895,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(187395,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(187784,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g><g data-mml-node="mo" transform="translate(188339.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(189395.5,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(189895.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(190284.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(191284.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(191673.5,0)"></g><g data-mml-node="mi" transform="translate(191673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mi" transform="translate(192673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(193673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(194673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">轮</text></g><g data-mml-node="mi" transform="translate(195673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">就</text></g><g data-mml-node="mi" transform="translate(196673.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mn" transform="translate(197673.5,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(198395.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(199396,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(201173.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(202229.5,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(203729.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(204118.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(205118.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mspace" transform="translate(205507.5,0)"></g><g data-mml-node="mi" transform="translate(205507.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">总</text></g><g data-mml-node="mi" transform="translate(206507.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="mn" transform="translate(207507.5,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(209229.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(210230,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(211507.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(212563.5,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path></g><g data-mml-node="mo" transform="translate(214563.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(214952.5,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">种</text></g><g data-mml-node="mo" transform="translate(215952.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span></p><p>故选 <span class="math inline">A</span>。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;七级&quot;&gt;七级&lt;/h1&gt;
&lt;p&gt;TODO。&lt;/p&gt;
&lt;h1 id=&quot;八级&quot;&gt;八级&lt;/h1&gt;
&lt;p&gt;题目来源：官方公众号 &lt;a class=&quot;link&quot; href=&quot;https://mp.weixin.qq.com/s/eQS4bqPm4tGKziFe0b2QMg&quot;&gt;</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>【临时置顶】博客服务降级公告</title>
    <link href="https://www.leo2011.eu.org/2025/02/08/bo-ke-fu-wu-jiang-ji-gong-gao/"/>
    <id>https://www.leo2011.eu.org/2025/02/08/bo-ke-fu-wu-jiang-ji-gong-gao/</id>
    <published>2025-02-08T09:19:16.000Z</published>
    <updated>2025-05-10T14:56:05.636Z</updated>
    
    <content type="html"><![CDATA[<p>由于各种原因，小 L主要精力将集中于课内（之前主要的题解内容现在直接没空打比赛了 555……），博客的更新将进入随（bai）缘（lan）状态……</p><p>不过大部分服务要求的半年一更还是做得到的。</p><p>另外一点是博客服务将会在漫长的时间内渐渐有大升级！</p><p>预计包括但不限于：</p><ol type="1"><li><p>换上<a class="link" href="https://docs.anheyu.com/">同样简洁美观但更加强大的安知鱼主题<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>！</p></li><li><p>【2025/5/10标记已完成】去除一些已经倒闭了、无法访问的备案、聚合一类的站点，精简页脚。</p></li><li><p>修缮历史文章中的一些已知的错误、错字等内容。</p></li><li><p>加上一个 <a class="link" href="https://www.oplog.cn/qexo/">Qexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>后台（不过当然只给小 L用啦）</p></li><li><p>更新寥寥无几的几篇文章……</p></li><li><p> 有钱的话换一个付费的域名，方便 SEO。</p></li><li><p>加几首歌……</p></li></ol><p>恢复的时候本文将取消置顶并被丢进草稿箱，这样大家就看不见它了，就说明小L 满血复活啦！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于各种原因，小 L
主要精力将集中于课内（之前主要的题解内容现在直接没空打比赛了 555……），博客的更新将进入随（bai）缘（lan）状态……&lt;/p&gt;
&lt;p&gt;不过大部分服务要求的半年一更还是做得到的。&lt;/p&gt;
&lt;p&gt;另外一点是博客服务将会在漫长的时间内渐渐有大升级！&lt;/</summary>
      
    
    
    
    
    <category term="网站" scheme="https://www.leo2011.eu.org/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>GESP 202412 游记</title>
    <link href="https://www.leo2011.eu.org/2024/12/08/gesp-202412-you-ji/"/>
    <id>https://www.leo2011.eu.org/2024/12/08/gesp-202412-you-ji/</id>
    <published>2024-12-08T10:50:46.000Z</published>
    <updated>2025-05-05T13:25:09.737Z</updated>
    
    <content type="html"><![CDATA[<p><del>这次终于不寄了，555……</del></p><h1 id="day--infty">Day -<span class="math inline">∞</span></h1><p>9 月刮台风了，自动改成 12 月，离大谱……</p><p>报名，还是团报（据说能提前查分）。GD 省 SZ 市共提供考点 2 个：SZYH 和HIT (SZ)，由于产生了 YH 恐惧症（考 6 级在这里寄了一回 + 去年 CSP-J 不给我Linux 用结果 T1 数组起猛直接保龄令人窒息），所以选了 HIT。</p><p>u1s1，这把要是过了，那么 SZYH 的嫌疑就逃不掉了（</p><h1 id="day--4">Day -4</h1><p>老师：你做一下运动会主持，我中午把稿子改好拿给你</p><p>【已连续负责 3 场主持的】我：没问题</p><p>中午去了之后：老师呢？</p><p>睡觉呢，因为去办公室看了一下被同一办公室的校医轰了出去（</p><h1 id="day--3">Day -3</h1><p>拿到稿子了，免除<del>徭役</del>列方队。</p><p>不过那方队本来就离谱，我身高 1.74m，附近方圆 5 个位置就没有超过 1.65m的……</p><h1 id="day--2">Day -2</h1><p>丸辣，运动会在 —— 周六？？？下午 13:30 就要 GESP。</p><p>鉴于我家距离考点约 40min，还要提前 30min入场，而运动会则要全天，废了。</p><p>跟老师沟通后光荣下岗，回去走方队喽～</p><p><del>谁家好学校周六搞活动还让全校都参加啊喂</del></p><h1 id="day--1">Day -1</h1><p>彩排。我的位置被换成了隔壁班班长。</p><p>第一次读：这什么玩意儿？</p><p>第二次读：可算有那味儿了。</p><p><del>虽然已下岗，但还是要默默关心</del></p><p>然后被加训了（全班），又要值日（我是组长，义务劳动 ing……）</p><p>竟然这还有人敢跑路？？？<del>激起了公愤</del>被老师一个电话又轰了回来。</p><p>作业没法减，熬到 19：00</p><h1 id="day-0">Day 0</h1><p>第二次彩排，并布置了巨量作业。</p><p>全班被抓去<del>做苦力</del>测试绳子去了，然后有同学的绳子只有绳柄没有绳，不卡绳1min 直接 846 个破世界纪录（</p><p>以上内容只为说明基本是在裸考，刷题量：0</p><p>不过今年 S 组拿了二等，稳切橙的实力还是有的，应该能过。</p><h1 id="day-1">Day 1</h1><h2 id="上午">上午</h2><p>运动会开幕式，穿班服。在人群中极为耀眼。</p><p>哎，同学们怎么都在补作业？就我没带吗？？？</p><p>鉴于是体育差生，比赛项目开始摆烂烂……</p><p>1 min 跳绳 260个拿最低等的？？？哦哦哦，原来是三年累计，<del>那我拿到这一集就算满足了</del></p><p>实际成绩：94 个（？？？）</p><p>体育中考没救了。。。</p><p>团体赛，跳长绳。每个班 4 个组，有三个是年级前三，问题是我们是全班第4……</p><p>10:50，跑路，回家吃饭，上路</p><p>Touching fish……</p><h1 id="下午">下午</h1><p>SZ 大学？走错了？哦哦哦，是 SZ 大学城。</p><p>7 级题最水的一次，编程题 T1 是个 01 背包模板，开考 25min 就 AC了（实际用时 10 min，还是在我现场推公式的基础上）</p><p>T2卡了半天，dfs、bfs、各种选初始节点的方法都想过，最后写了个记搜，过了，此时时间是15:55。</p><p>又检查了一下选择判断，提前 30min 离场。</p><p>碰到一个 2–&gt;4–&gt;6 跳上来的，/jk</p><h2 id="晚上">晚上</h2><p>上周 ABC 过了 ABCD（可惜网络问题 unrated），这周被降智只会A&amp;B，不过 rating 393–&gt;401？？？</p><h1 id="day-2">Day 2</h1><p>官方公布了题目 &amp; 答案，估分 88，反正可以免 J 了。</p><h1 id="day-infty">Day <span class="math inline">∞</span></h1><p>查分，还真 TM 88 啊…… 过于吉利了……</p><p>本来想冲荣誉榜的，算了，cbddl。</p><p>不过后续官方好像不公布了？也好。</p><p>无论如何，以后拒绝 YH，人人有责！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;del&gt;这次终于不寄了，555……&lt;/del&gt;&lt;/p&gt;
&lt;h1 id=&quot;day--infty&quot;&gt;Day -&lt;span class=&quot;math inline&quot;&gt;∞&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;9 月刮台风了，自动改成 12 月，离大谱……&lt;/p&gt;
&lt;p&gt;报名，还是团报（据</summary>
      
    
    
    
    <category term="游寄" scheme="https://www.leo2011.eu.org/categories/%E6%B8%B8%E5%AF%84/"/>
    
    
    <category term="GESP" scheme="https://www.leo2011.eu.org/tags/GESP/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc381_c [ABC381C] 11/22 Substring</title>
    <link href="https://www.leo2011.eu.org/2024/11/23/ti-jie-at-abc381-c-abc381c-11-22-substring/"/>
    <id>https://www.leo2011.eu.org/2024/11/23/ti-jie-at-abc381-c-abc381c-11-22-substring/</id>
    <published>2024-11-23T14:24:02.000Z</published>
    <updated>2024-11-23T14:31:27.685Z</updated>
    
    <content type="html"><![CDATA[<p>显然这个 “11/22Substring” 是以那个 “/” 为中心对称的。鉴于一个这样的字符串只能有一个 “/”，而题目又要求最长，<strong>所以确定了 “/” 就能确定一个满足要求的子串</strong>。</p><p>那思路就很简单了，只有两步：</p><ol type="1"><li><p>找到所有的 “/”</p></li><li><p> 两边<strong>同时</strong>寻找相应的子串。</p></li></ol><p>别的，除了判断一下越界之外，就不用管了。</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, ans;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'/'</span>) {</span><br><span class="line"><span class="type">int</span> l = i - <span class="number">1</span>, r = i + <span class="number">1</span>, len = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &gt;= <span class="number">0</span> &amp;&amp; r &lt; n)</span><br><span class="line"><span class="keyword">if</span> (s[l] == <span class="string">'1'</span> &amp;&amp; s[r] == <span class="string">'2'</span>) --l, ++r, len += <span class="number">2</span>;  <span class="comment">// 左右同时寻找，所以是 +2</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;  <span class="comment">// 不满足了及时break</span></span><br><span class="line">ans = <span class="built_in">max</span>(ans, len);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/190717875">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;显然这个 “11/22
Substring” 是以那个 “/” 为中心对称的。鉴于一个这样的字符串只能有一个 “/”，而题目又要求最长，&lt;strong&gt;所以确定了 “/” 就能确定一个满足要求的子串&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那思路就很简单了，只有两步：&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：P11248 [GESP202409 七级] 矩阵移动</title>
    <link href="https://www.leo2011.eu.org/2024/11/09/ti-jie-p11248-gesp202409-qi-ji-ju-zhen-yi-dong/"/>
    <id>https://www.leo2011.eu.org/2024/11/09/ti-jie-p11248-gesp202409-qi-ji-ju-zhen-yi-dong/</id>
    <published>2024-11-09T09:51:02.000Z</published>
    <updated>2025-01-21T10:11:56.465Z</updated>
    
    <content type="html"><![CDATA[<p>笑点解析：这个人所在城市考试当天刮台风了，没考，免费送了一次 12月的考试。</p><hr><p>设计这么一个东西：</p><p><span class="math inline"><em>d</em><em>p</em><sub><em>i</em>, <em>j</em></sub></span>表示到格子 <span class="math inline">(<em>i</em>, <em>j</em>)</span>的最大分数。</p><p>本来还好，但现在的问题是，如果这个格子是‘？’，我哪儿知道到底可不可以变啊？万一变得太多了，那，那不就废了！万一少了，那我分不就没了？</p><p>所以我们需要到底还剩多少次机会呢？不好办，没法儿处理。</p><p>其实加一维记录就可以了。</p><p>于是我得到了这个状态：</p><p><span class="math inline"><em>d</em><em>p</em><sub><em>i</em>, <em>j</em>, <em>k</em></sub></span>= 到格子 <span class="math inline">(<em>i</em>, <em>j</em>)</span>且已经使用了 <span class="math inline"><em>k</em></span>次机会的最大值。</p><p>转移也很好推：</p><p>不是‘？’： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="46.875ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 20718.8 2399"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(520,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1313,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2680.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(3736.4,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,644.2)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mo" transform="translate(1861,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2250,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(2770,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1813,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5556.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6001.2,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(6521.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1623,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1901,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9307.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9918.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(10919.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(12419.1,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1178.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1590.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2257.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3313.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-600)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mo" transform="translate(1861,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2250,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(2770,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1813,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5556.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6001.2,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(6521.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1623,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1901,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9307.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mtd" transform="translate(12419.1,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1178.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1590.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2257.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3313.2,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(16982.4,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p><p>就是从两种可能的上一步转移过来，注意横竖均可。</p><p>是‘？’：</p><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="47.664ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 21067.5 2399"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(520,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1313,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2680.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(3736.4,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,644.2)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mo" transform="translate(1861,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2250,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(2770,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1813,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5556.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6001.2,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(6521.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1623,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1901,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9307.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9918.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(10919.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(14226.5,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1854.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-600)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mo" transform="translate(1861,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2250,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(2770,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1035,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1813,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3112,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3890,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6460.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6904.9,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(7424.9,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1623,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1901,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2313,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2591,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3112,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3890,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11115.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11726.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(12726.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(14226.5,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1854.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(17331.1,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p><p>同上，注意 <span class="math inline"><em>k</em> = 0</span>时不能使用机会。而且可以变的话当然是变了更好，所以 <span class="math inline"><em>k</em> &gt; 0</span> 时可以无脑使用。</p><hr><p>ACCode: </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (ll(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>, M = <span class="number">310</span>;</span><br><span class="line"><span class="type">int</span> m, n, t, x, a[N][N], dp[N][N][M], ans;  <span class="comment">// dp[i][j][k] = (1, 1) 到(i, j)，已经使用了k次机会的最大值</span></span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line">ll top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    IOS;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) {</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">        <span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line">            cin &gt;&gt; s;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; m;++j) {</span><br><span class="line">                <span class="keyword">if</span> (s[j] == <span class="string">'?'</span>) a[i][j + <span class="number">1</span>] = -INF;</span><br><span class="line">                <span class="keyword">else</span> a[i][j + <span class="number">1</span>] = s[j] - <span class="string">'0'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">FOR</span>(i, <span class="number">1</span>, n) <span class="built_in">FOR</span>(j, <span class="number">1</span>, m) <span class="built_in">FOR</span>(k, <span class="number">0</span>, x) {</span><br><span class="line">              <span class="comment">// 要用到 k - 1, 必须正序遍历。</span></span><br><span class="line">            <span class="keyword">switch</span>(a[i][j]) {</span><br><span class="line">                <span class="keyword">case</span> -INF:</span><br><span class="line">                    <span class="keyword">if</span> (k &gt; <span class="number">0</span>) dp[i][j][k] = <span class="built_in">max</span>(dp[i][j - <span class="number">1</span>][k - <span class="number">1</span>], dp[i - <span class="number">1</span>][j][k - <span class="number">1</span>]) + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span> dp[i][j][k] = <span class="built_in">max</span>(dp[i][j - <span class="number">1</span>][k], dp[i - <span class="number">1</span>][j][k]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    dp[i][j][k] = <span class="built_in">max</span>(dp[i][j - <span class="number">1</span>][k], dp[i - <span class="number">1</span>][j][k]) + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    dp[i][j][k] = <span class="built_in">max</span>(dp[i][j - <span class="number">1</span>][k], dp[i - <span class="number">1</span>][j][k]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">FOR</span>(i, <span class="number">0</span>, x) ans = <span class="built_in">max</span>(ans, dp[n][m][i]);  <span class="comment">// 不超过就是不一定，要遍历一遍</span></span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="built_in">sizeof</span>(a));</span><br><span class="line">        ans = -INF;</span><br><span class="line">        <span class="comment">// 多组数据要清空</span></span><br><span class="line">    }</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p></p><p><a class="link" href="https://www.luogu.com.cn/record/187354256">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;笑点解析：这个人所在城市考试当天刮台风了，没考，免费送了一次 12
月的考试。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;设计这么一个东西：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;d&lt;/em&gt;&lt;em&gt;p&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;, &lt;em&gt;j</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
    <category term="GESP" scheme="https://www.leo2011.eu.org/tags/GESP/"/>
    
  </entry>
  
  <entry>
    <title>CSP-J/S 2024 游寄</title>
    <link href="https://www.leo2011.eu.org/2024/11/09/csp-j-s-2024-you-ji/"/>
    <id>https://www.leo2011.eu.org/2024/11/09/csp-j-s-2024-you-ji/</id>
    <published>2024-11-09T09:50:37.000Z</published>
    <updated>2025-03-30T07:18:25.934Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>满纸荒唐言，一把辛酸泪。</p></blockquote><p>其实不是去年没去，只是去年复赛喜提 15pts荣获四等奖，木有获奖证书。今年决定一雪前耻！</p><p>坐标：窄西省浅圳市某郊区（。</p><p>该区是弱区，目前已知的唯一一个官方承认的（<del>不包括我的省四</del>）复赛获奖选手是CSP-J2022 以 90pts 的高分荣获三等奖（T1 一个红题没AC？这是咋过初赛的）。</p><p>注：下文中 Day 1.5、1.6、1.7等指第一轮与第二轮之间的那几天，不保证在同一天（<del>才不是因为小 L的记忆力还不如鱼</del>）</p><h1 id="day--1">Day -1</h1><p>初赛之前暑假集训的时候过了几套模拟题（S 组），J 组由于去年前 10%没管了（埋下伏笔）。初赛感觉还不错。</p><p>老师知道我要报 S的时候还挺诧异的，毕竟是郊区，学校都是专门为了我注册的（貌似全区就我一个考生？这发展也太不均衡了）。</p><h1 id="day-1">Day 1</h1><p>考点素有 “紫色城堡” 的美誉。但是是老校区了，感觉还是比较旧的（郊区人对市区的高估.jpg）。</p><p>因为是郊区，差一点就迟到了（<del>全程超速</del>）。为啥今年人这么多捏？</p><h2 id="j">J</h2><p>这么简单？1h 轻松搞定。有几个题比较慌，但是没有问题。考着考着有了种 IAK CSP-J 的感觉。</p><p>考完之后有几个小同志不知为何把人家桌子给掀了（指抽屉），只能说是完全不懂考场纪律了。感觉就是语言入门赛，完全没有CSP 的水平。</p><h2 id="中午">中午</h2><p>去餐馆吃的饭，妈妈表示祈祷我 S 能过（伏笔 <span class="math inline">×2</span>）。</p><h2 id="s">S</h2><p>感觉有了正常 S 的难度。不过为啥改了 3回题目？<del>比赛公平系数大降</del>。上午考 J的下午基本都来了，不知道是不是来打酱油参加体验赛的。</p><p>出去的时候基本是被挤出去的，差一点儿就迷路了。考后个人感觉海星。</p><h1 id="day-1.5">Day 1.5</h1><p>出成绩啦！S 54.5, J——72.5？</p><p>国线是 J 89, S 59，都没进。J 差这么多，废了。S 组还有救……</p><p>后面分数线一出，果然 J 没过，S 过了。照应伏笔 QaQ。</p><p>后面又对了一下，初赛喜提俩国二。按照惯例，就不申请纸质版了（没用），自己打印吧。</p><p>GESP 只有六级（我是蒟蒻），保送是不可能的，祭。</p><p>但是为啥又涨价了啊，题也就那水平，评测机也就那老爷机，你涨那么多几个意思啊？</p><h1 id="day-1.6">Day 1.6</h1><p>学校月考，喜提全校第一（<del>我才不会告诉你我们学校只有仅 3个班的初一和不考试的小一两个年级</del>）。自我感觉良好，优势项目都拿到了年级第一成功封神。whk是不用管了，吗？</p><p>不可能的，总司令！</p><p>学校作业不少啊，天天肝到晚上十点多，学校比赛也有一大堆，QwQ。这个状态一直持续到复赛前一周，刷题数量基本为0，橙名都给我掉绿喽。</p><p>摆。</p><h1 id="day-1.7">Day 1.7</h1><p>开始准备复赛啦！终于进入了学校校队，初一组有二十几个人，但是，貌似，都是从0 开始？加油吧！</p><p>老师很重视 whk 成绩，月考的高分给了老师一个好印象。我的 OI水平在同年级当中直接登顶了（野路子确实不同寻常，比市区还 diao）。</p><p>集训了 3 天，刷了一下历年的 J组题目，打了两场模拟赛。第一场优先队列符号打反，20pts 没了，最后预估 100+ 60 + 25 = 185pts，实得 80 + 90 + 25 = 195pts，但是有高中部大佬半小时AK 了。T2 因为图有特殊性质给了我 90pts（官方 tj承认了这一点，不是数据水），勉强挽回了一点尊严。第二场啥也不会，0（不过是初中组唯一参赛选手了）。</p><p>比完第一场之后被老师约谈了，老师竟然一听就听出来了我是个 HE人。果然是 t 大学大佬。<del>哪儿跟哪儿啊</del>。</p><p>之后就是刷洛谷题单，语法组好简单！遇到的几个略难一点的题目也能捣鼓出来。</p><p>不过貌似我的实力最多也就橙～黄？废了啊啊啊……</p><h1 id="day-1.8">Day 1.8</h1><p>考前一周，写题解争取RP++，但是没过审，大祭。脑子不太灵光，计算题能给做出 60 分的好成绩（满分100，及格线 100），这种状态下通过玄学方法测了一下，发现是 rp–，悲。</p><h1 id="day-2">Day 2</h1><p>复习了一上午总结（含防爆零指南）。毕竟只有 S组，而我又是蒟蒻，时间还是充裕的。</p><p>这个考点是新建的高中园，有 3 高中，一文一理一个别的。三个高中至少 12个机房同时启动，可见今年规模非比寻常（<del>CCF你都知道为什么初赛还要瞎出题</del>）。在 40多公里外（从一个郊区到另一个郊区），前几年的因为太小被开除了（doge）。</p><p>听说本部的住校生有专车？反正我这种弱区弱校选手只能打的了。听了一路歌，也就混过去了。听说我们教练也是监考老师（但不在一个高中，大悲）。</p><p>到地儿之后看了一下上午 J 组的题目，觉得 T1、T2一眼秒（一红一橙，肯定的）。T2实在是太裸了，预估分数线会很高。可惜木有机会去啊啊啊……</p><p>另外，貌似大多数选手都是强校的？我这个分校的分校就……</p><p>进入校园的时候迷路了，出来更晕，离大谱。不过感觉考务做的挺好。</p><p>比赛的时候突然发现机子坏了，重启了 5 min。重启之后 NOI Linux虚拟机可以正常使用了，而且可以适配全屏，体验感不错。就是后面自测的时候Aribter崩了好几回（凡测必崩）。去年的那个考点不点名批评一下，设置了密码不让用，导致我T1 开了 1e9 的数组测不出来爆炸了，损失一个 4级绿钩 + 一个二等奖 + 一大堆因为没有钩而导致的在出 gks 时遇到的不便。</p><p>S 组 T1 第一反应竟然是二分答案？后面继续优化，什么暴力啥的，想了1.5h，逆天。最后写了一个二分的 <span class="math inline"><em>O</em>(<em>n</em>log <em>n</em>)</span>解法，调了半天。不过好在最后测出来了，但是大样例 TLE了？哦哦哦，原来是没开 O2，开了之后 0.3s之内可以把四个样例全部跑过，文操正常。我也没想到考提高组能做出一道题来，好开森～～但问题是我不确定这玩意儿对不对，但看到4个样例各种情况的都过了，自己又简单的论证了一下，没问题也就过了。此题十分关键，过了就是绿钩甚至蓝钩，没过就是第二个省四。</p><p>T2 一个巨模拟考场上没看出来。最后写了一个 <span class="math inline"><em>a</em> = 0</span> 的20pts。中间还特地判了一下特殊情况，今年样例给的很强。其实结束前 10 min想出了小数据做法（<span class="math inline"><em>n</em>, <em>m</em> ≤ 20</span>想这么半天，没救了），但是没空写了。考前一直希望 CCF出大模拟，但是出现了没看出来，祭。话说去年考一元二次方程，那会儿我是小学生，这是初中知识点。现在我终于初中了，但你给我考初二甚至是高中的物理？【亿连串被屏蔽的暴戾语言】。</p><p>T3 没有任何思路，一个爆搜水过去。预估 <span class="math inline">20<em>p</em><em>t</em><em>s</em></span>。</p><p>T4 题都没看明白，索性就写了一个文操别的不管了（输入都没写）。</p><p>以上所有代码均经过反复检查，目录当中没有多余文件，文操和文件名正确，目录用发的checker 查了一下正确，所有程序均能在 NOI Linux 2.0中编译测试通过，样例均（除了几组压根儿就没写的）可以通过，注释无。</p><p>期望得分 100 + 20 + 20 + 0 = 140，实际能力 100 + 40 + 20 + 0 =160，QwQ。</p><p>出来之后打车等了半天。一天交通费近 200，废。听别人讨论说 T1有黄～绿？竟然能超水平发挥！T4 则是一个紫，明显是要从 3 道题当中选 4道所以胡乱出题的场次。</p><h1 id="day-2.1">Day 2.1</h1><p>写游记。暂时还没有代码，没法估分。不过样例都过了应该不至于爆零？</p><p>T1 翻了一下题解区，找到了同做法的ACCode，稳啦。不过最简单做法是直接求众数出现次数？<del>又双叒叕考超过我年龄的数学知识</del>。<del>这货评个橙，我脸上火辣辣的</del>……</p><p>目前你谷难度比较乱，T2 在绿、蓝之间来回蹦哒，T4 飙到黑去了……</p><p>另外，话说你们怎么都那么快，比赛第二天游记都堆到十几页了？666。</p><h1 id="day-2.2">Day 2.2</h1><p>出成绩啦！</p><p>100 + 0 + 20 + 0 = 120pts，T2挂了。不过学校老师说很不错，总部的老师说初一这水平还可以，<del>然后发我了亿点点资料、题目与课程，说让我明年冲刺提高组200+ 的高分，我玉玉了</del>）。</p><p>拿代码过去洛谷自测了一下，跟 CCF 完全一样，T2 全WA，废。本来还想申诉的，现在不可能了。</p><p>这次考后的估分小程序只有小图灵考后还能使用。这次小图灵准确度10000%（考后拿的代码、用的官方数据，当然准）。看了一下上面预估的分数线，2=分数线 70pts，3= 50pts，我分数正好是它俩之和（突然感觉自己好牛 13啊）。比全国平均分低 3 分（awa），省排 1274（共3k+），自我感觉良好。</p><p>顺便去随便测了一下，发现几个考号和自己差不多的都是大佬，甚至出现了100 + 100 + 100 + 64 = 364 的狠人，orz。</p><p>不过场切 T1 感觉还是可以的。没想到打 CSP AC的第一题竟然来自提高组。</p><p>vp 了一下普及组，前三题都能过，300pts，没去可惜了。听说爆炸有的近 7k人？离大谱。</p><p>现在状态：</p><ol type="1"><li>坐等 4级绿色钩钩（<del>查分当天立马拉出百年不用的支付宝账号准备认证</del>）~</li><li> 坐等官方分数线出来，获得一个 2= + OIerDB 记载（1=蓝钩彻底没戏了，我想出 gks，可惜实力不允许啊）。</li><li>教练，我想打 PION 4202！</li></ol><p>是的捏，这个蒟蒻也被老师推举企图去 NOIP 2024 了。</p><p>鉴于学校第一年创办（<del>连自己教学楼都没有，一共就 7个班</del>）就有了一个获奖选手（还是提高组），应该可以在次蹭上一个公众号（上次是月考）名额。<del>小学的学校今年没看见有人报名，估计已经哭晕在厕所。</del></p><h1 id="day-2.3">Day 2.3</h1><p>悲喜交加。2= 分数线 105pts，卡过去了（同集团有个同年级大哥 100pts已哭晕在厕所……）。4 级钩是有了，看了一下，6 级本来160（我就这点儿实力），实际因为迷之原因（其实懂得都懂）升到 165了，彻底与蓝钩绝缘。不过好在是有了 OIerDB 记载：评分不到 600, 全国排8500+，省排（初一）并列第 90，市排（初一）并列第 11，集团内部（初一）S组唯一一个2=（剩下的都是未获奖 / 三等）。不过因为我用分校的名义报的名所以总部方面的老师把我漏了？</p><p>其实这个结果也还好，至少 S组算是没有遗憾了 —— 该拿的奖拿了，该有的钩子钩了（其实还没有，OIerDB那帮人提 issues 提了 3 天了还没提完……）。唯一的遗憾是自己真实实力 T2应该拿 40pts 的，不过拿了也是被卡蓝钩线，不管了。</p><p>不过 5 级分数线 260？我的 5 级钩！！！</p><p>又是一场遗憾的 CSP，好在这场 CSP-S 没啥遗憾了 —— 除了 NOIP 初中生分数线130+，没我份儿了。</p><p>另外，发现自己被大批巨佬薄纱：有背着我偷偷拿蓝狗的，有把我单调队列了的（离大谱，初一被单调队列），反正就是wtcl。</p><p>最后，还是要留一句：</p><p>奖项认证未上传，请稍后查看！</p><p><span class="math display"><code>The End.</code></span></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;满纸荒唐言，一把辛酸泪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实不是去年没去，只是去年复赛喜提 15pts
荣获四等奖，木有获奖证书。今年决定一雪前耻！&lt;/p&gt;
&lt;p&gt;坐标：窄西省浅圳市某郊区（。&lt;/p&gt;
&lt;p&gt;该区是弱区，目前已知的唯一一</summary>
      
    
    
    
    <category term="游寄" scheme="https://www.leo2011.eu.org/categories/%E6%B8%B8%E5%AF%84/"/>
    
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc376_c [ABC376C] Prepare Another Box</title>
    <link href="https://www.leo2011.eu.org/2024/10/20/ti-jie-at-abc376-c-abc376c-prepare-another-box/"/>
    <id>https://www.leo2011.eu.org/2024/10/20/ti-jie-at-abc376-c-abc376c-prepare-another-box/</id>
    <published>2024-10-20T06:12:45.000Z</published>
    <updated>2024-10-20T10:23:44.153Z</updated>
    
    <content type="html"><![CDATA[<p>很好的一道二分答案题。</p><p>听说 CSP 考前写 tj 可以让 rp += inf？</p><p>注：下文中 <span class="math inline"><em>w</em></span>指物品重量序列，<span class="math inline"><em>x</em></span>指箱子容量序列。</p><hr><p>先问个问题：为什么我上来就敢肯定这是个二分答案题？</p><p>或者说，单调性在哪儿？</p><p>非常简单：如果一个盒子的容量越大，能装下的东西就更多（废话）。那么如果<span class="math inline"><em>v</em></span> 不够用，可以扩大容量变成<span class="math inline"><em>v</em> + 1, <em>v</em> + 2⋯10<sup>9</sup></span>。因为<span class="math inline">10<sup>9</sup></span> 是上限不能再大了。</p><p>所以就可以准备二分啦～</p><hr><p>问 2：你怎么 check 这个答案呢？</p><p>题目告诉我们，一共只有 <span class="math inline"><em>n</em></span>个箱子，而物品也有 <span class="math inline"><em>n</em></span>个，而且一个箱子最多放一个物品，<strong>因此物品与箱子必须一一对应，不可以有空箱子</strong>。</p><p>其次，只有 <span class="math inline"><em>w</em><sub><em>i</em></sub> ≤ <em>x</em><sub><em>j</em></sub></span>时第 <span class="math inline"><em>i</em></span> 个物品才能放进第 <span class="math inline"><em>j</em></span>个箱子。那么结论就出来，<strong>排完序</strong>之后，要求对于 <span class="math inline">∀1 ≤ <em>i</em> ≤ <em>n</em></span>，要求 <span class="math inline"><em>w</em><sub><em>i</em></sub> ≤ <em>x</em><sub><em>i</em></sub></span>，否则会导致箱子空掉，然后就不满足刚才的条件了QaQ。</p><p>所以，思路就出来了：</p><ol type="1"><li><p>二分新增箱子容量</p></li><li><p>扫一遍，看看新增后是否合法</p></li></ol><p>总的时间复杂度是 <span class="math inline"><em>O</em>(<em>n</em>log <em>k</em>)</span>，其中<span class="math inline"><em>k</em> = 10<sup>9</sup></span>。</p><p>然后，然后就结束啦～</p><hr><p>ACCode: </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, a[N], b[N], c[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">chk</span><span class="params">(<span class="type">int</span> q)</span> </span>{</span><br><span class="line">b[n] = q;</span><br><span class="line"><span class="built_in">sort</span>(b + <span class="number">1</span>, b + n + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) <span class="keyword">if</span> (a[i] &gt; b[i]) {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; n; ++j) b[j] = c[j];</span><br><span class="line">    <span class="comment">// 注意要清空数组，因为排序会打乱顺序，因此不能直接将b[n]设为0，只能新开数组重新复制了 QwQ</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; n; ++j) b[j] = c[j];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]), c[i] = b[i];  <span class="comment">// 是&lt;哦~</span></span><br><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1e9</span>, ret = <span class="number">-1</span>;  <span class="comment">// 要求箱子是正整数个，从 1 开始</span></span><br><span class="line"><span class="keyword">while</span> (l &lt;= r) {</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">chk</span>(mid)) {</span><br><span class="line">ret = mid;</span><br><span class="line">r = mid - <span class="number">1</span>;</span><br><span class="line">} <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p></p><p><a class="link" href="https://atcoder.jp/contests/abc373/submissions/58244308">AC记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很好的一道二分答案题。&lt;/p&gt;
&lt;p&gt;听说 CSP 考前写 tj 可以让 rp += inf？&lt;/p&gt;
&lt;p&gt;注：下文中 &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;w&lt;/em&gt;&lt;/span&gt;
指物品重量序列，&lt;span class=&quot;math inline</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc374_c [ABC374C] Separated Lunch</title>
    <link href="https://www.leo2011.eu.org/2024/10/05/ti-jie-at-abc374-c-abc374c-separated-lunch/"/>
    <id>https://www.leo2011.eu.org/2024/10/05/ti-jie-at-abc374-c-abc374c-separated-lunch/</id>
    <published>2024-10-05T13:50:36.000Z</published>
    <updated>2024-10-07T13:22:39.505Z</updated>
    
    <content type="html"><![CDATA[<p><del>已经沦落到在写这种水题题解了。</del></p><h1 id="题目翻译">题目翻译</h1><p>有 <span class="math inline"><em>n</em></span>队人，每个队人数不同，把他们分成 2组（同一队的不能拆开），使两组人数差距尽量小。</p><p>形式化题意：有 <span class="math inline"><em>n</em></span>个数，把它们分成两组，使两组和的差尽量小。</p><p>说句闲话：感觉这题目很经典，但我没有原题作为证据（大雾</p><h1 id="解法">解法</h1><p>本来觉得我这菜鸡实力是不可能做出来的，<del>已经准备摆烂了</del>，此时我突然发现<span class="math inline"><em>n</em> ≤ 20</span>。</p><p>这是啥概念？</p><figure><img lazyload="" src="/images/loading.svg" data-src="https://cdn.luogu.com.cn/upload/pic/26845.png" alt="时间复杂度对应表"><figcaption aria-hidden="true">时间复杂度对应表</figcaption></figure><p>看图，<span class="math inline"><em>n</em> ≤ 25</span> 都是可以用<span class="math inline"><em>O</em>(2<sup><em>n</em></sup>)</span>做法解决的，这不结束了？直接枚举每一组，分类讨论是 A 组还是 B组，就可以了。</p><p>给个小建议：可以记录总人数，这样子只需要记录 A 组人数，B组人数可以直接 <span class="math inline"><em>O</em>(1)</span>计算，这样就变成选与不选的 dfs模板题目了…… 更关键的是这样子不需要记录为每一队对应哪一组了。</p><h1 id="代码">代码</h1><p>ACCode with 注释：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">30</span>;</span><br><span class="line"><span class="type">int</span> n, a[N], ans = INF, sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> group, <span class="type">int</span> cnt)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (group == n) {</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(cnt, sum - cnt));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line">  <span class="comment">// 组 A</span></span><br><span class="line"><span class="built_in">dfs</span>(group + <span class="number">1</span>, cnt + a[group]);</span><br><span class="line">  <span class="comment">// 组 B</span></span><br><span class="line"><span class="built_in">dfs</span>(group + <span class="number">1</span>, cnt);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) a[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), sum += a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 20组---》爆搜挂着机，打表出 AC</span></span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://atcoder.jp/contests/abc374/submissions/58457793">赛时 AC记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;del&gt;已经沦落到在写这种水题题解了。&lt;/del&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目翻译&quot;&gt;题目翻译&lt;/h1&gt;
&lt;p&gt;有 &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;n&lt;/em&gt;&lt;/span&gt;
队人，每个队人数不同，把他们分成 2
组（同一队的不能拆开），使两</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc370_c [ABC370C] Word Ladder</title>
    <link href="https://www.leo2011.eu.org/2024/09/07/ti-jie-at-abc370-c-abc370c-word-ladder/"/>
    <id>https://www.leo2011.eu.org/2024/09/07/ti-jie-at-abc370-c-abc370c-word-ladder/</id>
    <published>2024-09-07T13:51:03.000Z</published>
    <updated>2025-05-05T13:28:25.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说句闲话">说句闲话</h1><p>这题是一个比较奇葩的贪心、构造。也可以认为是一个数据结构略有难度的练习题。</p><h1 id="理论部分">理论部分</h1>  <div class="note p-4 mb-4 rounded-small success">    <p>注：以下使用 <span class="math inline"><em>N</em></span>表示字符串长度。</p>  </div><p>一<del>句</del>段话题意：三个字符串 <span class="math inline"><em>S</em></span>、<span class="math inline"><em>T</em></span>、<span class="math inline"><em>X</em></span>，其中 <span class="math inline"><em>S</em></span> 和 <span class="math inline"><em>T</em></span> 仅包含小写字母且等长，<span class="math inline"><em>X</em></span> 为空。每一个操作可以把对应的 <span class="math inline"><em>S</em><sub><em>i</em></sub></span> 修改为 <span class="math inline"><em>T</em><sub><em>i</em></sub></span>，但需要把<strong>改完后的</strong>整个<span class="math inline"><em>S</em></span> 加进 <span class="math inline"><em>X</em></span>里，求最少步数及方案，要求方案最后得到的 <span class="math inline"><em>X</em></span> 字典序最小。</p><p>这咱办呢？首先是等长的，所以只需要修改一定能达成 —— 每次把不对应的修改成对应的不就可以了？因此步数很好求：不匹配的位置的个数。</p><p>现在问题就是怎样最小？</p><p>首先能够明确的是：既然等长，那么开头最小字符串最小，正常不都是这么比较的吗（</p><p>比如说，字符串 <span class="math inline"><em>S</em> = <code>abc</code></span> 和 <span class="math inline"><em>T</em> = <code>abd</code></span>，前面 <span class="math inline"><code>ab</code></span> 相同，<span class="math inline"><code>b</code> &lt; <code>c</code></span>，因此<span class="math inline"><em>S</em> &lt; <em>T</em></span>。</p><p>这样子就好办了：目标最小，那么就把它改的尽量小嘛。</p><p>如何尽量小？<del>兜圈子呢。</del></p><p>首先肯定是越改越小好，不然你越改越大在小还不如先改小的呢是吧～</p><p>如果想要尽量小，那么肯定是要先改前面的且是改小的；后面往大了改的同理，先改后面的在改前面的。</p><p>这句话比较绕，也是这个思路的核心。总结一下其实就是把这 <span class="math inline"><em>N</em></span> 个位置分成三类，如下：</p><ol type="1"><li><p><span class="math inline"><em>S</em><sub><em>i</em></sub> = <em>T</em><sub><em>i</em></sub></span>，完全一致，不用管</p></li><li><p><span class="math inline"><em> S</em><sub><em>i</em></sub> &gt; <em>T</em><sub><em>i</em></sub></span>，越改越小，优先改，越早出现的越优先改</p></li><li><p><span class="math inline"><em> S</em><sub><em>i</em></sub> &lt; <em>T</em><sub><em>i</em></sub></span>，越改越大，最后改，而且越晚出现的越后改。</p></li></ol><p>以上的规则基于题目规则，<span class="math inline"><em>S</em><sub><em>i</em></sub></span> 表示 <span class="math inline"><em>S</em></span> 中某字符，<span class="math inline"><em>T</em><sub><em>i</em></sub></span>同理。两条更改的规则是因为越往前的越需要把它停留在小的状态，因此越改越小优先改，越改越大则先改后面的。</p><p>还是举个例子。</p><p><span class="math inline"><em>S</em> = <code>xay</code>, <em>T</em> = <code>abe</code></span>，我们想要尽量小，那么按照这个逻辑，先筛出最往小了改的，就是第一个和最后一个位置。它们当中第一个位置最前，因此先改它，<span class="math inline"><em>S</em></span> 变为 <span class="math inline"><code>aay</code></span>，然后是第三个位置，变成<span class="math inline"><code>aae</code></span>，最后在去改第二个位置，变成<span class="math inline"><code>abe</code></span>。</p><hr><h1 id="时间复杂度分析">时间复杂度分析</h1><p>这个算法是 <span class="math inline"><em>O</em>(<em>N</em><sup>2</sup>)</span>的，而且本题最优解的最坏时间复杂度也是这个值。</p><p>为什么？因为最坏情况下我们需要对每一个位置进行更改，而每次输出这个长度，因此输出就是这个复杂度，没法优化了。</p><p><del>我才不会告诉你我冒充这是个 <span class="math inline"><em>O</em>(<em>N</em>)</span>算法结果被学长发现了才写这一段的。</del></p><hr><p>ACCode with 注释：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret, len;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; a, b;</span><br><span class="line">string s, t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; t;</span><br><span class="line">len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line"><span class="keyword">if</span> (s[i] != t[i]) {</span><br><span class="line">++ret;</span><br><span class="line"><span class="keyword">if</span> (s[i] &lt; t[i]) b.<span class="built_in">push_front</span>(i);  <span class="comment">/* 考场留下的写法，这一行是说要往大了改的放到 b 里，而且越后出现的越先改*/</span></span><br><span class="line"><span class="keyword">else</span> a.<span class="built_in">push_back</span>(i);  <span class="comment">/*同上，反过来*/</span></span><br><span class="line">    <span class="comment">/*这里之所以用 deque 主要是因为统一：下面可以统一使用 front 而不用在倒腾 front 和 back*/</span></span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; ret &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (!a.<span class="built_in">empty</span>()) {  <span class="comment">/*先处理 a 改小*/</span></span><br><span class="line">s[a.<span class="built_in">front</span>()] = t[a.<span class="built_in">front</span>()];</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">a.<span class="built_in">pop_front</span>();  <span class="comment">/*一定要pop*/</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span> (!b.<span class="built_in">empty</span>()) {  <span class="comment">/*再处理 b 改大*/</span></span><br><span class="line">s[b.<span class="built_in">front</span>()] = t[b.<span class="built_in">front</span>()];</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">b.<span class="built_in">pop_front</span>();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://atcoder.jp/contests/abc370/submissions/57537505">AC记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;说句闲话&quot;&gt;说句闲话&lt;/h1&gt;
&lt;p&gt;这题是一个比较奇葩的贪心、构造。也可以认为是一个数据结构略有难度的练习题。&lt;/p&gt;
&lt;h1 id=&quot;理论部分&quot;&gt;理论部分&lt;/h1&gt;

  &lt;div class=&quot;note p-4 mb-4 rounded-small succ</summary>
      
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>2024/09/01 开学前夕，发一篇大水文</title>
    <link href="https://www.leo2011.eu.org/2024/09/01/2024-09-01-kai-xue-qian-xi-fa-yi-pian-da-shui-wen/"/>
    <id>https://www.leo2011.eu.org/2024/09/01/2024-09-01-kai-xue-qian-xi-fa-yi-pian-da-shui-wen/</id>
    <published>2024-09-01T10:32:39.000Z</published>
    <updated>2024-09-02T13:14:28.006Z</updated>
    
    <content type="html"><![CDATA[<p>说句闲话：研究珂学的最好方法是</p><p>写一篇水文</p><p>祝你们成功（滑稽</p><span id="more"></span><h1 id="关于小升初">关于小升初</h1><p>事情是酱紫的：</p><p>首先，我是个学生，不是老师。</p><p>其次，我是个学生，不是家长。</p><p>最后，我是个学生，不是父母。</p><p>这三点，我都做到了。</p><p>所以，我只能说，我很开心。</p><p>祝大家开学愉快！</p><hr><p>以上内容来自 AI 生成（<del>什么玩意儿，还开心、愉快</del>）。</p><p>其实小 L就是一个今年（2024）小升初的一学生，明天开学，赶紧把自己暑假干的那些破事儿记录一下。</p><p><del>话说会不会导致自己 RP-= INF 啊啊啊……</del></p><p>6 月填志愿（但是 TMD 这个 213 jyj把父母的房子、户口第一位），然后我报了一个新学校。录取完之后（8月了）我父亲拿到通知书，一看学校的老大哥居然变成了市实验学校的某分校，<strong>之前区宣传委都不知道这消息，官方公众号上还说是区某中学的集团的</strong>，逆天，太逆天了……</p><p>报学校送四大？录取率 <span class="math inline">100%</span>？</p><figure><img lazyload="" src="/images/loading.svg" data-src="/images/lqtzs.jpg" alt="录取通知书"><figcaption aria-hidden="true">录取通知书</figcaption></figure><p>《市实验学校的教育集团的一个局，骗过了所有人，包括区政府》。这就是传说中的 “弹射起步” 吧，我保证我们学校明年一定会爆满，但我在没满的时候挤进去了。</p><p>但是捏，学校还没建好呢（说是要明年，学校工地还上了个什么 “水土流失黑名单”），于是只能借址办学，一看借用的学校在我家马路对面，弯儿都不用拐……</p><p>然后 8 月 28开学考（卷子用的是我家对面儿那学校的），考一上午，但是配分比较离谱：</p><p>English: 60pts</p><p>语文: 90 分</p><p><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.819ex;" xmlns="http://www.w3.org/2000/svg" width="2.24ex" height="2.856ex" role="img" focusable="false" viewBox="0 -900.3 990.1 1262.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,394) scale(0.707)"><g data-mml-node="mn"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-346.3) scale(0.707)"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g><rect width="750.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span> 的某科: 100pts？</p><p>关键是前两科是连考的，加起来 2h，最下面的某科一个占了80min。然后，语文作文差点没写完 emm……（ps：那个作文跟觉不像是我喜欢写的风格，但咱也不敢说啊）。语文一考才发现自己 “镶嵌”（看拼音写词语第一题）不会写，小学古诗基本全忘了（<del>我之前甚至有一段时间忘了咏鹅</del>）。</p><p>母亲之前说会有一定的初中知识，但反正我没看出来……</p><p>之后还有 20min，老师说是面试，小 L 很紧张，结果：</p><p>老师：你叫什么名字啊？</p><p>我：jmy。</p><p>老师（低头找了一圈）：你理想的高中是哪所？</p><p>我：SMS、SZSY。</p><p>老师：嗯，你能描述（评价）一下吗？</p><p>我：bla bla bla……</p><p>事后：</p><p>我：一点技术含量没有啊这……</p><p>父亲：这能够区分学生，看看他们是有目标而努力还是专心于当下……</p><p>然后分到了 zdb（<img lazyload="" src="/images/loading.svg" data-src="/images/IMG_1005.PNG" alt="dddd">），老师中有好几个主任…… QwQ。</p><p>另外，已知的信息是，原来小学班里 47 个同学中至少有 9个也在我们学校，我们班就 5个。<del>说什么九年一贯制，我就没一贯</del>。</p><p>upd on 2024/09/02：校徽至今没发，全校一共 7 个班，小学部只有一年级 4个班，初中部只有初一 3 个班，加起来不到 300人，校长、主任什么的<del>随处可见</del>平易近人，感觉大家都很熟了。开学仪式我去当<del>门神</del>礼仪兵了（职责：举班牌），上了一天道法课（因为班主任教道法）。所以：有社团吗？怎么上？</p><p>课本感觉变难了，但还好，<del>反正都是翻一遍基本就全会。</del>唉，以后我是永无写完作业之日啊……</p><hr><h1 id="集训">集训</h1><p>SC 省 MY 市 SWUST 内，集训了一个月（555，暑假就这么没了……），非常happy （<img lazyload="" src="/images/loading.svg" data-src="/images/IMG_1005.PNG" alt="dddd">）。去了成都旅游，辣的嘴唇地震……</p><p>食堂饭不辣（<del>我专门挑的</del>），也不错，还便宜（我妈一个手滑 8块钱 20 个馒头……）。</p><p>唉，这年头还有多少几毛钱的东西了……</p><p>然后为了这个集训，我发明了：</p><ol type="1"><li><p>图上 dfs</p></li><li><p> 图上 bfs</p></li><li><p> 二分插入排序（独立发明，没有任何参考资料，达到了基于比较的排序的最优时间复杂度且稳定，我还证明了这两点）</p></li><li><p>单调 vector（我原创的一种新的数据结构）</p></li><li><p>… </p></li></ol><p><del>话说我是不是也有潜力搞个图灵奖什么的。</del></p><p>第一天还有入门题，最后一周你给我出省选题？逆天了……</p><p>还有，举办了第一场比赛<del>虽然不是很成功，出锅的两道题都是我出的</del>，名字叫「金坷垃杯」（不是我起的，是@<a class="link" href="https://www.luogu.com.cn/user/872662">mengleo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>大哥创办的），欢迎大家持续关注！</p><p>集训队里大佬好多（就我最弱 Qaq。</p><p>另外，集训快结束的时候，我妈突然发现我有一块秃了……</p><p>职业病犯了（</p><hr><h1 id="牙">牙</h1><p>回家第二天，先拔 4颗牙。我一晚上没说话，因为咽了俩棉花，还吐了几口血（其实是牙的伤口流出来的，在枕头上待了一个星期），喝了2 天粥（糊糊）。</p><p>然后一个星期过去了，我稍微刚好一点，就去戴牙套了，然后继续喝粥……</p><p>现在咬土豆都嫌硬……</p><p>我：我爸这是图啥啊……</p><h1 id="博客">博客</h1><p>回家后重启博客计划，然后建立了这个<del>小破</del>站。三十几篇文章，我搬运了好几天……</p><p>最后我就问一句：TMD为什么你们看也看了赞也点了都不评论？我是单机写文人吗……</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;说句闲话：研究珂学的最好方法是&lt;/p&gt;
&lt;p&gt;写一篇水文&lt;/p&gt;
&lt;p&gt;祝你们成功（滑稽&lt;/p&gt;</summary>
    
    
    
    <category term="闲话" scheme="https://www.leo2011.eu.org/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown 测试</title>
    <link href="https://www.leo2011.eu.org/2024/08/31/markdown-ce-shi/"/>
    <id>https://www.leo2011.eu.org/2024/08/31/markdown-ce-shi/</id>
    <published>2024-08-31T09:34:08.000Z</published>
    <updated>2024-10-07T12:13:52.847Z</updated>
    
    <content type="html"><![CDATA[<p><del>你应该需要输入 “123456” 才能查看这篇文章</del>，而且这篇文章应该是所有三十多篇文章中的第三篇。</p><p>I AK IOI!</p><p><strong>I AK IOI!</strong></p><p><del>I AK IOI!</del></p><p><em>I AK IOI!</em></p><span id="more"></span><p>上面会被当做概要部分，下面会被一个 “阅读全文” 代替。</p><h1 id="i-ak-ioi">I AK IOI!</h1><h2 id="i-ak-ioi-1">I AK IOI!</h2><h3 id="i-ak-ioi-2">I AK IOI!</h3><h4 id="i-ak-ioi-3">I AK IOI!</h4><h5 id="i-ak-ioi-4">I AK IOI!</h5><h6 id="i-ak-ioi-5">I AK IOI!</h6><ol type="1"><li><p>I AK IOI!</p></li><li><p>I AK IOI!</p></li></ol><ul><li><p>I AK IOI!</p></li><li><p>I AK IOI!</p></li></ul><figure><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/oQdXu1b6DlRIhfw.png" alt="测试图片一号"><figcaption aria-hidden="true"> 测试图片一号</figcaption></figure><figure><img lazyload="" src="/images/loading.svg" data-src="/images/bg.jpg" alt="测试图片二号"><figcaption aria-hidden="true">测试图片二号 </figcaption></figure><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; <span class="string">"Hello, World!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 这是一个代码块</span></span><br></pre></td></tr></tbody></table></figure></div><p>以上是 Markdown 语法。</p><hr><p><span class="math inline">2<sup>10</sup> = 1024</span></p><hr><p>其它：</p><div class="spoiler collapsed">    <div class="spoiler-title">        测试文本    </div>    <div class="spoiler-content">        <p>内容</p>    </div></div><p>测试结论：折叠类内容不支持嵌套，其它一切正常。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;你应该需要输入 “123456” 才能查看这篇文章&lt;/del&gt;，而且这篇文章应该是所有三十多篇文章中的第三篇。&lt;/p&gt;
&lt;p&gt;I AK IOI!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I AK IOI!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;I AK IOI!&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I AK IOI!&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="测试" scheme="https://www.leo2011.eu.org/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="https://www.leo2011.eu.org/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>题解：P9938 [USACO21OPEN] Acowdemia II B</title>
    <link href="https://www.leo2011.eu.org/2024/08/29/ti-jie-p9938-usaco21open-acowdemia-ii-b/"/>
    <id>https://www.leo2011.eu.org/2024/08/29/ti-jie-p9938-usaco21open-acowdemia-ii-b/</id>
    <published>2024-08-29T06:51:17.000Z</published>
    <updated>2024-11-10T14:07:28.744Z</updated>
    
    <content type="html"><![CDATA[<p>前言：原来的 tj 干了一堆什么建图啊之类的，但其实不要这么复杂。</p><span id="more"></span><hr><p>注：下文中 <span class="math inline"><em>n</em></span>是各成员名字列表。</p><p>从 <span class="math inline"><em>K</em> = 1</span> 开整。如果情况是<span class="math inline"><em>n</em><sub><em>i</em></sub> &lt; <em>n</em><sub><em>i</em> + 1</sub> &lt; ⋯ &lt; <em>n</em><sub><em>j</em></sub></span>，那么显然，咱就不知道关于成员<span class="math inline"><em>n</em><sub><em>i</em></sub>, ⋯, <em>n</em><sub><em>j</em></sub></span>的相对资历的信息。也许所有这帮成员都做出了相同的贡献。</p><p>但是捏，如果存在 <span class="math inline"><em>i</em></span> 使得<span class="math inline"><em>n</em><sub><em>i</em></sub> &gt; <em>n</em><sub>+1</sub></span>，则成员<span class="math inline"><em>n</em><sub><em>i</em></sub></span>肯定比成员 <span class="math inline"><em>n</em><sub><em>i</em> + 1</sub></span>干了更多的活儿，因此所有成员 <span class="math inline"><em>n</em><sub>1</sub>, ⋯, <em>n</em><sub><em>i</em></sub></span>必须比成员 <span class="math inline"><em>n</em><sub><em>i</em> + 1</sub>⋯<em>n</em><sub><em>N</em></sub></span>的贡献少。换句话说，如果 <span class="math inline"><em>i</em> &lt; <em>j</em></span> 但 <span class="math inline"><em>n</em><sub><em>i</em></sub>, <em>n</em><sub><em>i</em> + 1</sub>, ⋯, <em>n</em><sub><em>j</em></sub></span>不是按字母顺序排列的，那么咱就知道 <span class="math inline"><em>n</em><sub><em>i</em></sub></span> 肯定比 <span class="math inline"><em>n</em><sub><em>j</em></sub></span>资历浅了。</p><p>要是 <span class="math inline"><em>K</em> &gt; 1</span>捏？把信息怼起来不就得了？</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: P9938 [USACO21OPEN] Acowdemia II B</span></span><br><span class="line"><span class="comment">// Contest: Luogu</span></span><br><span class="line"><span class="comment">// URL: https://www.luogu.com.cn/problem/P9938</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> k, n;</span><br><span class="line">string s;</span><br><span class="line">map&lt;string, <span class="type">int</span>&gt; members;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), x = -x;</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS cin &gt;&gt; k &gt;&gt; n;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, n - <span class="number">1</span>)</span><br><span class="line">cin &gt;&gt; s, members[s] = i;</span><br><span class="line">vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">ans</span>(n, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n, <span class="string">'?'</span>)); <span class="comment">// 全给我干成一个值，为了方便就用'?'</span></span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, n - <span class="number">1</span>)</span><br><span class="line">ans[i][i] = <span class="string">'B'</span>;  <span class="comment">// 初始化一下，后面就不用搞了</span></span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, k - <span class="number">1</span>) {</span><br><span class="line"><span class="function">vector&lt;string&gt; <span class="title">pub</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">0</span>, n - <span class="number">1</span>) cin &gt;&gt; pub[j];</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">0</span>, n - <span class="number">1</span>) {</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">FOR</span>(l, j + <span class="number">1</span>, n - <span class="number">1</span>) {</span><br><span class="line"><span class="keyword">if</span> (pub[l - <span class="number">1</span>].<span class="built_in">compare</span>(pub[l]) &gt; <span class="number">0</span>) flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!flag) {</span><br><span class="line"><span class="type">int</span> a = members[pub[j]], b = members[pub[l]];</span><br><span class="line">ans[a][b] = <span class="string">'0'</span>;</span><br><span class="line">ans[b][a] = <span class="string">'1'</span>;  <span class="comment">// 上面的过程</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, n - <span class="number">1</span>) {</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">0</span>, n - <span class="number">1</span>) cout &lt;&lt; ans[i][j];</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/156700638">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;前言：原来的 tj 干了一堆什么建图啊之类的，但其实不要这么复杂。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：T496174 「金坷垃杯 R1」子集数量</title>
    <link href="https://www.leo2011.eu.org/2024/08/15/ti-jie-t496174-jin-ke-la-bei-r1-zi-ji-shu-liang/"/>
    <id>https://www.leo2011.eu.org/2024/08/15/ti-jie-t496174-jin-ke-la-bei-r1-zi-ji-shu-liang/</id>
    <published>2024-08-15T05:53:18.000Z</published>
    <updated>2024-08-29T06:58:32.567Z</updated>
    
    <content type="html"><![CDATA[<p>还是计数问题。</p><span id="more"></span><p><a class="link" href="https://www.luogu.com.cn/article/0egdo2de">前面<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>说过了，计数问题不是搜索、dp，就是数学方法。</p><p>其实这个题就是个数学题（<del>题目背景不是说了吗</del>）。我们可以先搜，找找规律。令去重（显然可以用个set）后的元素个数为 <span class="math inline"><em>k</em></span>，打表也可以发现子集数量就是 <span class="math inline">2<sup><em>k</em></sup></span>。</p><p>为什么呢？</p><p>因为集合中每个元素在子集当中都只有出现 / 不出现两种可能，根据乘法原理就可以推出来了。</p><p>所以只需要写一个快速幂解决问题（ps：快速幂这东西多少年没考了……）。</p><p>那该如何计算其它的值呢？非空子集数量就是集合中去掉了一个，所以答案是<span class="math inline">2<sup><em>k</em></sup> − 1</span>，真子集同理，非空真子集两个都去掉了就是<span class="math inline">2<sup><em>k</em></sup> − 1</span>。</p><p>现在的问题就是取余之后万一是 <span class="math inline">0</span>呢？</p><p>注意到余数有可加性、可减性和可乘性，我们统一对其加上 <span class="math inline"><em>p</em></span>余数不变，这个时候去减是减的动的，最后输出的时候再模回去就可以了。</p><hr><p>std：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"></span><br><span class="line">ll p, t, ans;</span><br><span class="line">set&lt;ll&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll x, ll y)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">1</span>) <span class="keyword">return</span> x % p;</span><br><span class="line">ll ret = <span class="built_in">power</span>(x, y &gt;&gt; <span class="number">1</span>) % p;</span><br><span class="line">ret = ret * ret, ret %= p;</span><br><span class="line"><span class="keyword">if</span> (y % <span class="number">2</span>) ret *= x, ret %= p;</span><br><span class="line"><span class="keyword">return</span> ret % p;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; p;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; t) st.<span class="built_in">insert</span>(t);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; st.<span class="built_in">size</span>() &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">ans = <span class="built_in">power</span>(<span class="number">2</span>, st.<span class="built_in">size</span>()) + p; <span class="comment">// 公式</span></span><br><span class="line">cout &lt;&lt; ans % p &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">--ans;</span><br><span class="line">cout &lt;&lt; ans % p &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans % p &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">--ans;</span><br><span class="line">cout &lt;&lt; ans % p &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>upd1：赛时突然发现 std 和数据的 generator 都 TM写挂了，已更正。以后再也不敢出题不验题、不写数据的 chekcer 了。</p><p>upd2：本题必须要使用快速幂，直接位运算相当于计算 <span class="math inline">2<sup>10<sup>6</sup></sup></span>，肯定会原地爆炸，因此需要慢慢取模。赛时有一个大哥就因为这一点和没开long long 导致正解变 50。<del>什么破毒瘤题。</del></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;还是计数问题。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="「金坷垃杯」" scheme="https://www.leo2011.eu.org/tags/%E3%80%8C%E9%87%91%E5%9D%B7%E5%9E%83%E6%9D%AF%E3%80%8D/"/>
    
  </entry>
  
  <entry>
    <title>题解：T496174 「金坷垃杯 R1」十三太保</title>
    <link href="https://www.leo2011.eu.org/2024/08/15/ti-jie-t496174-jin-ke-la-bei-r1-shi-san-tai-bao/"/>
    <id>https://www.leo2011.eu.org/2024/08/15/ti-jie-t496174-jin-ke-la-bei-r1-shi-san-tai-bao/</id>
    <published>2024-08-15T05:24:14.000Z</published>
    <updated>2024-08-29T06:57:58.600Z</updated>
    
    <content type="html"><![CDATA[<p>出题人官方题解～</p><span id="more"></span><hr><p>其实这种计数问题无非就 <span class="math inline">3</span>种方法：</p><ol type="1"><li>爆搜，dfs 枚举所有情况</li><li>数学方法，计算</li><li> dp</li></ol><p>显然这题不让你搜，数学方法又没有，那就只能 dp 了。</p><hr><p>然后来看题。数列中每个数字只能选择一次，因此抽象过来就是这样的：</p><blockquote><p>01 背包问题，求正好能选数选成 <span class="math inline"><em>k</em></span> 的方案数。</p></blockquote><p>这不就是板题了吗……</p><p>按照 “题目问什么，状态设什么” 的状态定义原则，定义 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="6.547ex" height="2.236ex" role="img" focusable="false" viewBox="0 -694 2893.6 988.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="msub" transform="translate(520,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2115.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container> 前<span class="math inline"><em>i</em></span> 个数中选数使和正好为 <span class="math inline"><em>j</em></span> 的方法数。转移也很显然，是 <span class="math inline"><em>d</em><em>p</em><sub><em>i</em>, <em>j</em></sub> = <em>d</em><em>p</em><sub><em>i</em> − 1, <em>j</em> − <em>a</em><sub><em>i</em></sub></sub> + <em>d</em><em>p</em><sub><em>i</em>, <em>j</em> − 1</sub></span>。</p><p>注意要用滚动数组优化，不然就是 MLE。</p><hr><p>std:</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> k, n, a[N], dp[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = k; j &gt;= <span class="number">0</span>;j--) dp[j] += dp[j - a[i]];</span><br><span class="line">cout &lt;&lt; dp[k] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;出题人官方题解～&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="「金坷垃杯」" scheme="https://www.leo2011.eu.org/tags/%E3%80%8C%E9%87%91%E5%9D%B7%E5%9E%83%E6%9D%AF%E3%80%8D/"/>
    
  </entry>
  
  <entry>
    <title>【置顶】珍爱生命，远离 double</title>
    <link href="https://www.leo2011.eu.org/2024/08/07/zhi-ding-zhen-ai-sheng-ming-yuan-chi-double/"/>
    <id>https://www.leo2011.eu.org/2024/08/07/zhi-ding-zhen-ai-sheng-ming-yuan-chi-double/</id>
    <published>2024-08-07T04:59:26.000Z</published>
    <updated>2025-03-23T08:54:54.556Z</updated>
    
    <content type="html"><![CDATA[<p>rt，今日模拟赛时，某只小 L 看到了T1，发现是个百分数计算裸题，于是飞速写下了下面的代码：</p><span id="more"></span><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> tmp;</span><br><span class="line">...</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;x);</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;v[i], &amp;p[i]);</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line">tmp += v[i] * (p[i] * <span class="number">0.01</span>), ++ans;</span><br><span class="line"><span class="keyword">if</span> (tmp &gt; (x * <span class="number">1.0</span>)) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (tmp &lt; (x * <span class="number">1.0</span>)) <span class="built_in">log</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">log</span>(<span class="string">"%d\n"</span>, ans);</span><br></pre></td></tr></tbody></table></figure></div><p>然后呢？100–&gt;40，rk4–&gt;rk7</p><p>小 L 衷心希望大家不要再犯同样的错误……</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;rt，今日模拟赛时，某只小 L 看到了
T1，发现是个百分数计算裸题，于是飞速写下了下面的代码：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>题解：AT_abc365_c [ABC365C] Transportation Expenses </title>
    <link href="https://www.leo2011.eu.org/2024/08/03/ti-jie-at-abc365-c-abc365c-transportation-expenses/"/>
    <id>https://www.leo2011.eu.org/2024/08/03/ti-jie-at-abc365-c-abc365c-transportation-expenses/</id>
    <published>2024-08-03T14:14:28.000Z</published>
    <updated>2024-08-29T06:48:18.590Z</updated>
    
    <content type="html"><![CDATA[<p>注：为了方便，下文以 <span class="math inline"><em>S</em><em>u</em><em>m</em></span> 表示 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.777ex;" xmlns="http://www.w3.org/2000/svg" width="7.987ex" height="2.563ex" role="img" focusable="false" viewBox="0 -789.6 3530.3 1132.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(2453.3,0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(783,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></span>。</p><hr><p><span class="math inline"><em>N</em> = 2 × 10<sup>5</sup></span>，考虑二分答案。</p><span id="more"></span><p>所以，答案有单调性吗？或者说，可以二分吗？</p><p>当然！如果 <span class="math inline"><em>x</em> = <em>k</em></span>时可以满足条件，那么 <span class="math inline"><em>x</em> = <em>k</em> − 1</span>时显然只会更少（上面取 <span class="math inline">min </span>的基本都没变，变了的取了更少的），一样能满足条件。</p><p><span class="math inline">check </span>函数怎么写？扫一遍嘛，时间复杂度 <span class="math inline"><em>O</em>(<em>n</em>)</span>，鉴于后面是 <span class="math inline">log </span> 级别的复杂度这里就算暴力扫也超不了。</p><p>这样我们只需要考虑二分的上下界就好了。最低直接让 <span class="math inline"><em>x</em> = 0</span> 好了，最高肯定不会超过 <span class="math inline"><em>S</em><em>u</em><em>m</em></span>（超了那还了得？多的钱幽灵拿了？），就以此为界二分吧！</p><p>等等，我们漏了一个很重要的情况！那就是 —— 无！解！</p><p>啥时候可以取到无限啊？</p><p>按照题意，需要的钱数最大也只有 <span class="math inline"><em>S</em><em>u</em><em>m</em></span>这么多，如果这还不到 <span class="math inline"><em>m</em></span>，即<span class="math inline"><em>S</em><em>u</em><em>m</em> ≤ <em>m</em></span>，那么<span class="math inline"><em>x</em></span>自然可以随便取，反正钱数都没它啥事儿……</p><p>还有一点，上面这一大堆东西时间复杂度到底是多少呢？</p><p>显然时间复杂度为 <span class="math inline"><em>Θ</em>(<em>N</em>log <em>S</em><em>u</em><em>m</em>)</span>。感觉会超？注意时间限制是2s ！<del>拿计算器摁一下</del>，最大值（两项都取到最大）大概是 <span class="math inline">9.5 × 10<sup>7</sup></span>，不会超～</p><p>然后就真的结束了……</p><hr><p>ACCode: </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (ll(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">ll m, n, a[N], sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line">ll top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">chk</span><span class="params">(ll q)</span> </span>{</span><br><span class="line">ll sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line">sum += <span class="built_in">min</span>(q, a[i]);</span><br><span class="line"><span class="keyword">if</span> (sum &gt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> sum &lt;= m;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a[i]), sum += a[i];</span><br><span class="line"><span class="keyword">if</span> (sum &lt;= m) {</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"infinite"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">ll l = <span class="number">0</span>, r = sum, ret = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt;= r) {</span><br><span class="line">ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">chk</span>(mid)) {</span><br><span class="line">ret = mid;</span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">} <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%lld\n"</span>, ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p></p><p><a class="link" href="https://atcoder.jp/contests/abc365/submissions/56324104">AC记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;注：为了方便，下文以 &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;S&lt;/em&gt;&lt;em&gt;u&lt;/em&gt;&lt;em&gt;m&lt;/em&gt;&lt;/span&gt; 表示 &lt;span class=&quot;math inline&quot;&gt;&lt;mjx-container class=&quot;MathJax&quot; jax=&quot;SVG&quot;&gt;&lt;svg style=&quot;vertical-align: -0.777ex;&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;7.987ex&quot; height=&quot;2.563ex&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewBox=&quot;0 -789.6 3530.3 1132.9&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;scale(1,-1)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;munderover&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2211&quot; d=&quot;M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(1089,477.1) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;1D45B&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(1089,-285.4) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;1D456&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(345,0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1123,0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(2453.3,0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;1D434&quot; d=&quot;M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(783,-150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;1D456&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/mjx-container&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;N&lt;/em&gt; = 2 × 10&lt;sup&gt;5&lt;/sup&gt;&lt;/span&gt;，考虑二分答案。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>题解：P10815 【模板】快速读入</title>
    <link href="https://www.leo2011.eu.org/2024/07/29/ti-jie-p10815-mo-ban-kuai-su-du-ru/"/>
    <id>https://www.leo2011.eu.org/2024/07/29/ti-jie-p10815-mo-ban-kuai-su-du-ru/</id>
    <published>2024-07-29T04:56:40.000Z</published>
    <updated>2024-12-22T12:37:13.318Z</updated>
    
    <content type="html"><![CDATA[<p><del>闲着没事儿水篇 tj</del> <span id="more"></span></p><hr><h1 id="题目大意">题目大意</h1><p>题目大意极其粗暴，记得 <span class="math inline">10<sup>8</sup> × 10<sup>8</sup> = 10<sup>16</sup> &gt; 2<sup>31</sup> − 1</span>会爆 <code>int</code>，开 <code>long long</code> 就好。</p><p>于是这个题就变成了一个读入输出优化模板题。<del>这不又回去了</del>。</p><p>另外，输入输出常数优化也很常用，抢最优解和骗分时都可以用上。</p><h1 id="cincout-版本">cin/cout 版本</h1><h2 id="操作">操作</h2><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>第一行开启后就不再兼容 stdio 了，也就是说，只能用<code>cin</code>、<code>cout</code>，不能用<code>scanf</code>、<code>printf</code> 等 C 语言留下的东西了。</p><h2 id="原理">原理</h2>  <div class="note p-4 mb-4 rounded-small info">    <p>Q：为什么要保留 C 语言的东西？ A：因为要保证 C++ 语言对 C语言的兼容性（注：C 语言相当于 C++ 它爹），所以 C++将这两个的读入输出流绑到了一起。这样是线程安全的。但是，兼容性、安全性、效率经常会有矛盾，这行代码就是从兼容性到取效率。所以，此行代码一旦执行，<code>cin</code>、<code>cout</code>与 <code>printf</code>、<code>scanf</code> 不得再同时使用，但是<code>cin</code> 和 <code>printf</code>、<code>cout</code> 和<code>scanf</code> 还是能同时用的。</p>  </div><p>剩下两行是在解除绑定？什么绑定？<code>ostream</code> 和<code>istream</code>（是的，他俩拼起来就是<code>iostream</code>）。<code>cin.tie()</code> 默认绑定的是<code>&amp;std::cout</code>，这不没了？所以这行代码就是在解除绑定。</p>  <div class="note p-4 mb-4 rounded-small warning">    <p>注意：解除绑定后一定要及时 <code>flush</code> 刷新缓冲区（或者是用<code>endl</code>，它就是 <code>\n</code> 和 <code>flush</code>拼出来的）才能保证先输出 <code>cout</code> 里的再输入。</p>  </div><h2 id="打包">打包</h2><p>当然，一般 cin/cout 优化这 3行会一起使用，因此可以将其打包成一个宏。</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \  <span class="comment">// 这里的'\'表示换行</span></span></span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);            \</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>main 函数直接调用 <code>IOS</code> 就相当于 3行一起上了。<del>但一般还是跑不过 printf/scanf。</del></p><p>另外，不要用 <code>endl</code>，它会刷新缓冲区，因此比<code>\n</code> 慢多了。</p><p>不过这里没啥用（字符串时有大用），这题该 TLE 还是 TLE。</p><h1 id="基础版">基础版</h1>  <div class="note p-4 mb-4 rounded-small info">    <p>Tips：这货搞 <a class="link" href="https://leo2011.eu.org/2023/11/25/guan-yu-int128-he-short-ni-xu-yao-zhi-dao-de-yi-qie/">__int128<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>时也有用。</p>  </div><h2 id="输入">输入</h2><p>首先肯定要处理一下符号问题。“+” 一般直接省略，不管它。“-”不可省略，特判一下。</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())  <span class="comment">// isdigit 函数可以判断传过去的形参是否是数字</span></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>这样就可以略过空格和 “+”，直接读入 “-”。</p><p>后面的正负就都一样啦。那该咋办？</p><p>还记得进制转换吗？转成 10 进制的时候是不是这么写的：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;++i) ans *= <span class="number">10</span>, ans += s[i] - <span class="string">'0'</span>;</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>一样的嘛！把 <code>s[i]</code> 换成刚才的 <code>ch</code>，把 for循环换成 <code>while</code> 即可。总结一下就是这样：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span> </span>{  <span class="comment">// inline 是定义内联函数的，可以省去调用函数的常数，具体是把这个函数里的东西干进调用的地方，因此一般只用于小函数</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = getchar)</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>; </span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = getchar) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="输出">输出</h2><p>输出是一样的，直接数位分解。把 <code>getchar</code> 替换为<code>putchar</code> 即可。</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;  <span class="comment">// 不加就会反复输出负号</span></span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="变通用">变通用</h1><p>但是！我们还可以让它变得更加通用！</p><p>为什么说上面的不通用？因为变量都是 <code>int</code>的，<code>long long</code>、<code>short</code> 啥的全废了。</p><p>好在 C++ 提供了 <code>template</code>这个好东西，中文名叫模板。可以根据给定的类型和一个模板函数、类生成一堆函数或类。</p><p>想想你的 <code>vector</code>、<code>stack</code>，是不是写的<code>vector&lt;int&gt;</code>？<code>&lt;&gt;</code>这个东西里面就是要传过去的类型。</p><p>于是可以用 <code>template</code> 改写上面的两个函数，现在是这样的：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = getchar)</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = getchar) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>使用如下： </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();  <span class="comment">// read 没有参数，必须要加</span></span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(n);  <span class="comment">// 注：write 时 “&lt;int&gt;” 写不写一样，不写会自动识别参数类型</span></span><br><span class="line">w = <span class="built_in">read</span>&lt;<span class="type">long</span> <span class="type">long</span>&gt;();</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">long</span> <span class="type">long</span>&gt;(w);</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>一般这么整够了，但是这<del>破</del>题还是会 TLE一个点，于是，我们需要更快的方案！</p><h1 id="中端版">中端版</h1><p><code>getchar_unlocked</code></p><p>这是个啥？</p><p>官方管它叫 “getchar 的非线程安全版本”。鉴于 OI题目都是单线程程序（多线程那还了得？），安全性不影响。但以后写能赚 $的程序时记得注意不要使用。速度比 <code>getchar</code>还要快，<del>果然安全性与性能不可兼得</del>。同理还有<code>putchar_unlocked</code>，替换过后就可以 AC 了～。</p>  <div class="note p-4 mb-4 rounded-small warning">    <p>这个函数并不通用，实测 Windows <strong>不可用</strong>，请在 Linux（如某谷评测姬）使用～</p>  </div><h1 id="高端版">高端版</h1><p><code>fread</code> 和 <code>fwrite</code></p><h2 id="原理-1">原理</h2><p>它们和 <code>getchar</code>、<code>putchar</code>原理是一样的，都是拿 1B东西出来。不同的是，<code>getchar</code>、<code>putchar</code>是从硬盘（文件）中读，这俩是从内存中直接拿。鉴于内存速度快的太吓人，因而这两个也要比<code>getchar</code> 快。</p><h2 id="使用">使用</h2><p>所以我们可以重新定义一个 <code>getchar</code> 和<code>putchar</code>。</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> buf[<span class="number">1</span> &lt;&lt; <span class="number">20</span>], *p1, *p2;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> gc() \</span></span><br><span class="line"><span class="meta">(p1 == p2 &amp;&amp; (p2 = (p1 = buf) + fread(buf, 1, 1 &lt;&lt; 20, stdin), p1 == p2) ? EOF : *p1++) \</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="type">char</span> pbuf[<span class="number">1</span> &lt;&lt; <span class="number">20</span>], *pp = pbuf;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">const</span> <span class="type">char</span> &amp;c)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (pp - pbuf == <span class="number">1</span> &lt;&lt; <span class="number">20</span>) <span class="built_in">fwrite</span>(pbuf, <span class="number">1</span>, <span class="number">1</span> &lt;&lt; <span class="number">20</span>, stdout), pp = pbuf;</span><br><span class="line">  *pp++ = c;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>这样就可以把<a class="link" href="https://www.luogu.com.cn/user/3296">毒瘤<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>造的毒瘤题的毒瘤数据过掉了～</p>  <div class="note p-4 mb-4 rounded-small warning">    <p>这种方法速度最快，但相对麻烦，可读性较差，建议不要使用。</p>  </div><hr><p>参考资料： <a class="link" href="https://oi-wiki.org/contest/io/">OI-Wiki<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;闲着没事儿水篇 tj&lt;/del&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc362_d [ABC362D] Shortest Path 3</title>
    <link href="https://www.leo2011.eu.org/2024/07/13/ti-jie-at-abc362-d-abc362d-shortest-path-3/"/>
    <id>https://www.leo2011.eu.org/2024/07/13/ti-jie-at-abc362-d-abc362d-shortest-path-3/</id>
    <published>2024-07-13T14:51:24.000Z</published>
    <updated>2024-08-29T06:46:49.719Z</updated>
    
    <content type="html"><![CDATA[<p>一句话题意：给定一个带点权的有权无向连通图，求点 1到所有其它点的最短路径。</p><span id="more"></span><p>首先，只有 1 一个起点，所以是单源最短路，又因为最大是 <span class="math inline">2 × 10<sup>5</sup></span>，所以是优先队列（堆）优化过后的Dijkstra。</p><p>所以，我们只需要解决点权的问题就好了。一种显而易见的想法是把与这条边的边权加上起终点的点权，因为走这条边肯定是要过这两个点的。但这样有个问题：样例都过不了（或许是我写挂了？反正只过了样例2）！为啥呢？</p><p>你从 1 走到 2，再从 2 走到 3，你这点 2 的点权不就算重了？</p><p>那该咋办呢？</p><p>其实你不用改边权，对 Dijkstra做一点小改动即可。什么小改动呢？每次走边的时候加上终点的点权，这样子就方便算、判断了。注意不能加起点的，因为起点是固定的，你算它跟没算一样。</p><p>比如还是从 1 到 2 再到 3，你每条边再加上点 2、3的点权，就不会出事了。</p><p>但注意此时点 1 的点权还没算，输出时加上就好。</p><hr><p>ACCode:</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: D - Shortest Path 3</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - Toyota Programming Contest 2024#7（AtCoder Beginner Contest 362）</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc362/tasks/abc362_d</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (ll(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line">ll m, n, s, x, y, z, a[N], w[N], to[N], idx, dis[N], nxt[N], head[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">line</span> {</span><br><span class="line">ll u, d;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> line &amp;cmp) <span class="type">const</span> { <span class="keyword">return</span> d &gt; cmp.d; }</span><br><span class="line">};</span><br><span class="line">priority_queue&lt;line&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line">ll top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="built_in">sizeof</span>(head));</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">addEdge</span><span class="params">(ll u, ll v, ll q)</span> </span>{</span><br><span class="line">w[idx] = q;</span><br><span class="line">to[idx] = v;</span><br><span class="line">nxt[idx] = head[u];</span><br><span class="line">head[u] = idx;</span><br><span class="line">idx++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">(ll s)</span> </span>{</span><br><span class="line">dis[s] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>({s, <span class="number">0</span>});</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {</span><br><span class="line">line f = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">ll u = f.u;</span><br><span class="line"><span class="keyword">if</span> (f.d &gt; dis[u]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (ll i = head[u]; i != <span class="number">-1</span>; i = nxt[i]) {</span><br><span class="line">ll v = to[i];</span><br><span class="line"><span class="keyword">if</span> (dis[u] + w[i] + a[v] &lt; dis[v]) {</span><br><span class="line">dis[v] = dis[u] + w[i] + a[v];  <span class="comment">// 把要去的点的点权算上</span></span><br><span class="line">q.<span class="built_in">push</span>({v, dis[v]});</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">n = <span class="built_in">read</span>&lt;ll&gt;(), m = <span class="built_in">read</span>&lt;ll&gt;(), s = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) a[i] = <span class="built_in">read</span>&lt;ll&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, m) {</span><br><span class="line">x = <span class="built_in">read</span>&lt;ll&gt;(), y = <span class="built_in">read</span>&lt;ll&gt;(), z = <span class="built_in">read</span>&lt;ll&gt;();</span><br><span class="line"><span class="built_in">addEdge</span>(x, y, z), <span class="built_in">addEdge</span>(y, x, z);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">dijkstra</span>(s);</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">2</span>, n)</span><br><span class="line"><span class="built_in">write</span>&lt;ll&gt;(dis[i] + a[<span class="number">1</span>]), <span class="built_in">putchar</span>(<span class="string">' '</span>);  <span class="comment">// 除了起点都有了，所以要加上起点</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/165844276">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;一句话题意：给定一个带点权的有权无向连通图，求点 1
到所有其它点的最短路径。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc362_c [ABC362C] Sum = 0</title>
    <link href="https://www.leo2011.eu.org/2024/07/13/ti-jie-at-abc362-c-abc362c-sum-0/"/>
    <id>https://www.leo2011.eu.org/2024/07/13/ti-jie-at-abc362-c-abc362c-sum-0/</id>
    <published>2024-07-13T14:03:47.000Z</published>
    <updated>2024-08-29T06:41:33.860Z</updated>
    
    <content type="html"><![CDATA[<p>很好写（15 min 解决）但不好讲（跟别人讲了 20 min）的写法 QwQ……</p><span id="more"></span><hr><p>首先，咱先算出原式的范围。最小值（暂且记为 <span class="math inline"><em>k</em></span>）的公式就是： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="10.12ex" height="6.74ex" role="img" focusable="false" viewBox="0 -1733 4473.2 2978.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(1854.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(408,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g><g data-mml-node="msub" transform="translate(3465.2,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(714,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></span> 就是每一个最小可能值的和。</p><p>同理，最大值（我记为 <span class="math inline"><em>w</em></span>）的公式就是： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="10.738ex" height="6.74ex" role="img" focusable="false" viewBox="0 -1733 4746.2 2978.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(993.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(2049.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(408,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g><g data-mml-node="msub" transform="translate(3660.2,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></span> 即最大可能值的和。</p><p>算这玩意儿有啥用呢？卡区间！</p><p>你说要是 <span class="math inline"><em>k</em> &gt; 0</span> 或者<span class="math inline"><em>w</em> &lt; 0</span>，即最小都比 <span class="math inline">0</span> 大或者最大都不到还能干成 <span class="math inline">0</span> 吗？肯定不能啊！这种情况就是<code>No</code>。</p><p>剩下的鉴于大家都是整数，而且可以随便变化，一定是<code>Yes</code>。</p><p>所以该咋构造呢？</p><p>我们可以以 <span class="math inline"><em>k</em></span> 为基准，往<span class="math inline">0</span> 去凑。</p><p>具体来讲，就是：</p><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="35.04ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 15487.8 2399"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(1350,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2423.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(3479.5,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,600)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mtext" transform="translate(1086,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(1336,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1725,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2023,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2489,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(3039,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(3677.7,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(4733.5,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(6041.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(7041.9,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(714,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(8049.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-600)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(714,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1230.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2230.4,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2528.4,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2994.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(3544.4,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mtext" transform="translate(3905.4,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(4155.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4544.4,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(5908.1,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(6963.9,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(7261.9,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(7727.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(8277.9,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(8861.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9861.3,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(714,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10869.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(12008.3,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p><p>其中 <span class="math inline"><em>l</em><em>e</em><em>f</em><em>t</em></span>表示到 <span class="math inline">0</span> 的距离，也就是 <span class="math inline">0 − <em>k</em></span>。<del>说人话</del>翻译一下就是：1. 能够直接凑完，那就直接凑完，然后就不用凑了。 2.凑不完，能凑多少是多少，记得更新一下后面要凑的数目</p><p>比如样例 <span class="math inline">1</span>:</p><p>经计算，<span class="math inline"><em>l</em><em>e</em><em>f</em><em>t</em> = 3</span>，第一组（<span class="math inline">3 ∼ 5</span>）最多凑个 <span class="math inline">2</span>，那就凑 <span class="math inline">2</span>，输出 <span class="math inline">5</span>，还剩个 <span class="math inline">1</span>要凑。第二组（<span class="math inline">−4 ∼ 1</span>）最多能凑个 <span class="math inline">5</span>，但 <span class="math inline">1</span>就够了，输出 <span class="math inline">−3</span>，不用凑了。最后一组，不用凑了，直接输出<span class="math inline">−2</span>。</p><p>算一下，<span class="math inline">5 + (−3) + (−2) = 5 − 3 − 2 = 0</span>，满足条件。</p><p>注意：今天，你<strong>开 long long</strong> 了吗？</p><hr><p>ACCode： </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: C - Sum = 0</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - Toyota Programming Contest 2024#7（AtCoder Beginner Contest 362）</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc362/tasks/abc362_c</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (ll(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">ll n, l[N], r[N], lft, suml, sumr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line">ll top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;ll&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) l[i] = <span class="built_in">read</span>&lt;ll&gt;(), r[i] = <span class="built_in">read</span>&lt;ll&gt;(), suml += l[i], sumr += r[i];</span><br><span class="line"><span class="keyword">if</span> (!(suml &lt;= <span class="number">0</span> &amp;&amp; sumr &gt;= <span class="number">0</span>)) {</span><br><span class="line">cout &lt;&lt; <span class="string">"No"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">lft = <span class="number">0</span> - suml; <span class="comment">// 到0剩下的距离</span></span><br><span class="line">cout &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line"><span class="keyword">if</span> (l[i] + lft &lt;= r[i]) {</span><br><span class="line">cout &lt;&lt; l[i] + lft &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">lft = <span class="number">0</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">cout &lt;&lt; r[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">lft -= r[i] - l[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p></p><p><a class="link" href="https://www.luogu.com.cn/record/165839830">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;很好写（15 min 解决）但不好讲（跟别人讲了 20 min）的写法 QwQ……&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>【YACS 2022 年 1 月月赛 丙组】 平衡括号</title>
    <link href="https://www.leo2011.eu.org/2024/06/27/yacs-2022-nian-1-yue-yue-sai-bing-zu-ping-heng-gua-hao/"/>
    <id>https://www.leo2011.eu.org/2024/06/27/yacs-2022-nian-1-yue-yue-sai-bing-zu-ping-heng-gua-hao/</id>
    <published>2024-06-27T15:22:09.000Z</published>
    <updated>2024-10-13T09:18:17.403Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link" href="https://iai.sh.cn/problem/561">题目 Link<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><hr><p>前情提要：这个题是栈的经典入门题。</p><span id="more"></span><hr><p>关于栈的详细内容可以看 <a class="link" href="https://oi-wiki.org/ds/stack/">OI-Wiki<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，这里简单说一下。</p><p>其实栈（stack）就相当于一个桶，有两种操作：从顶上（top）往里边扔东西（push）和拿东西（pop），底部不允许操作（不然就漏了）。</p><p>这里就有 <span class="math inline">3</span> 种操作了：</p><ol type="1"><li><p>top：用来获取最上方的东西</p></li><li><p> push：扔东西进去</p></li><li><p> pop：拿东西出来</p></li></ol><hr><p>所以这个题就可以用栈解决了，具体步骤如下：</p><ol type="1"><li><p>遍历字符串</p></li><li><p>如果栈是空的（empty），那么直接放东西（学名：入栈）</p></li><li><p>如果这个字符和栈顶（上一个待匹配的字符）匹配，那么栈顶出去（学名：出栈）</p></li><li><p>如果不匹配，那么就加进去</p></li><li><p>对每个字符进行操作2~4（显然只会执行一个），此时匹配的已经不在栈中，栈里只有不匹配的。如果栈里没东西，那么说明都匹配了，是平衡的；如果有，那就是不平衡的。</p></li></ol><p>这里，这个栈就是用来存储不匹配的括号的。</p><hr><p>正确性证明：题目的意思是 “就近匹配”，即括号优先分配给最近的且匹配的。那么栈先进后出的结构正好符合该项原则。</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line">stack&lt;<span class="type">char</span>&gt; stk;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i) {</span><br><span class="line"><span class="keyword">if</span> (stk.<span class="built_in">empty</span>()) stk.<span class="built_in">push</span>(s[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((stk.<span class="built_in">top</span>() == <span class="string">'['</span> &amp;&amp; s[i] == <span class="string">']'</span>) || (stk.<span class="built_in">top</span>() == <span class="string">'('</span> &amp;&amp; s[i] == <span class="string">')'</span>)) stk.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">else</span> stk.<span class="built_in">push</span>(s[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (stk.<span class="built_in">size</span>()) cout &lt;&lt; <span class="string">"Unbalanced"</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">"Balanced"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://iai.sh.cn/submission/1153051">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot; href=&quot;https://iai.sh.cn/problem/561&quot;&gt;题目 Link&lt;i class=&quot;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前情提要：这个题是栈的经典入门题。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="YACS精选" scheme="https://www.leo2011.eu.org/tags/YACS%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>【YACS 2020 年 3 月月赛 丙组】 数字加密</title>
    <link href="https://www.leo2011.eu.org/2024/06/27/yacs-2020-nian-3-yue-yue-sai-bing-zu-shu-zi-jia-mi/"/>
    <id>https://www.leo2011.eu.org/2024/06/27/yacs-2020-nian-3-yue-yue-sai-bing-zu-shu-zi-jia-mi/</id>
    <published>2024-06-27T15:21:24.000Z</published>
    <updated>2024-09-01T10:22:15.996Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link" href="https://iai.sh.cn/problem/14">题目 Link<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><span id="more"></span><hr><p>先找规律，不难发现：</p><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -6.448ex;" xmlns="http://www.w3.org/2000/svg" width="11.188ex" height="14.027ex" role="img" focusable="false" viewBox="0 -3350 4945 6200"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z" transform="translate(0,2451)"></path><path data-c="23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z" transform="translate(0,-1951)"></path><path data-c="23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z" transform="translate(0,0)"></path><svg width="889" height="1481" y="1060" x="0" viewBox="0 261 889 1481"><path data-c="23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z" transform="scale(1,7.284)"></path></svg><svg width="889" height="1481" y="-2041" x="0" viewBox="0 261 889 1481"><path data-c="23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z" transform="scale(1,7.284)"></path></svg></g><g data-mml-node="mtable" transform="translate(889,0)"><g data-mml-node="mtr" transform="translate(0,2600)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3556,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3556,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3556,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3556,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-2600)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3556,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(4945,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span></p><p>所以，对于最后一位的转换，只需要求出 <span class="math inline">9−</span>密文最后一位的值就是明文的值，不需要写那么复杂用一堆 if。</p><p>后面的倒推就可以了，无非就是两次交换。注意第一位可能是0，所以建议用字符串存.</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line">string s, ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, <span class="number">3</span>) ans += <span class="string">'0'</span> + (<span class="number">9</span> - (s[i] - <span class="string">'0'</span>));</span><br><span class="line"><span class="built_in">swap</span>(ans[<span class="number">0</span>], ans[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">swap</span>(ans[<span class="number">1</span>], ans[<span class="number">2</span>]);</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://iai.sh.cn/submission/1154890">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot; href=&quot;https://iai.sh.cn/problem/14&quot;&gt;题目 Link&lt;i class=&quot;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="YACS精选" scheme="https://www.leo2011.eu.org/tags/YACS%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>【YACS 2021 年 5 月月赛 丙组】植树造林</title>
    <link href="https://www.leo2011.eu.org/2024/06/27/yacs-2021-nian-5-yue-yue-sai-bing-zu-zhi-shu-zao-lin/"/>
    <id>https://www.leo2011.eu.org/2024/06/27/yacs-2021-nian-5-yue-yue-sai-bing-zu-zhi-shu-zao-lin/</id>
    <published>2024-06-27T12:25:33.000Z</published>
    <updated>2024-08-29T08:37:51.712Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link" href="https://iai.sh.cn/problem/436">题目 Link<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><span id="more"></span><hr><p>考虑到老师不能砍树，所以最少补种树就是把剩下那二位的种树数补成最多的那位。</p><p>这里介绍个小语法：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">max</span>({a, b, c});</span><br><span class="line"><span class="built_in">max</span>(<span class="built_in">max</span>(a, b), c);</span><br></pre></td></tr></tbody></table></figure></div><p>两行代码都是在求 <span class="math inline"><em>a</em>, <em>b</em>, <em>c</em></span>的最大值，但是第二个是两两求，第一个是整体求，稍微方便一点。</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">a = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), b = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), c = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(<span class="number">3</span> * <span class="built_in">max</span>({a, b, c}) - (a + b + c));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://iai.sh.cn/submission/1155794">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot; href=&quot;https://iai.sh.cn/problem/436&quot;&gt;题目 Link&lt;i class=&quot;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="YACS精选" scheme="https://www.leo2011.eu.org/tags/YACS%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>题解： P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题</title>
    <link href="https://www.leo2011.eu.org/2024/06/03/ti-jie-p1029-noip2001-pu-ji-zu-zui-da-gong-yue-shu-he-zui-xiao-gong-bei-shu-wen-ti/"/>
    <id>https://www.leo2011.eu.org/2024/06/03/ti-jie-p1029-noip2001-pu-ji-zu-zui-da-gong-yue-shu-he-zui-xiao-gong-bei-shu-wen-ti/</id>
    <published>2024-06-03T13:50:03.000Z</published>
    <updated>2024-08-31T03:30:14.794Z</updated>
    
    <content type="html"><![CDATA[<p>提供一种快速做法（31ms）~</p><span id="more"></span><hr><p>首先，枚举是必须的，但是可以快速枚举。</p><p>优化 1： 众所周知 <span class="math inline">gcd (<em>a</em>, <em>b</em>) × lcm (<em>a</em>, <em>b</em>) = <em>a</em> × <em>b</em></span>，所以我们只需要枚举<span class="math inline"><em>a</em></span> 就好了。</p><p>优化 2：<span class="math inline"><em>a</em></span> 最大也只用到<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.655ex;" xmlns="http://www.w3.org/2000/svg" width="7.098ex" height="2.398ex" role="img" focusable="false" viewBox="0 -770.5 3137.4 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(794.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1794.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(0,-89.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2284.4" height="60" x="853" y="650.5"></rect></g></g></g></svg></mjx-container></span>，因为分析样例解释发现以后的都是重复的，只是换了个顺序而已，算2 遍即可。</p><p>优化 3：<span class="math inline"><em>a</em></span> 可以从 <span class="math inline"><em>x</em></span>开始枚举，因为再小了最大公因数就没有 <span class="math inline"><em>x</em></span> 了。</p><p>优化 4：每次可以加 <span class="math inline"><em>x</em></span>，因为余数有可加性，<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.5ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6408.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="2261" d="M56 444Q56 457 70 464H707Q722 456 722 444Q722 430 706 424H72Q56 429 56 444ZM56 237T56 250T70 270H707Q722 262 722 250T707 230H70Q56 237 56 250ZM56 56Q56 71 72 76H706Q722 70 722 56Q722 44 707 36H70Q56 43 56 56Z"></path></g><g data-mml-node="mn" transform="translate(1905.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2405.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(3072.3,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mspace" transform="translate(5239.1,0)"></g><g data-mml-node="mi" transform="translate(5447.9,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6019.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>，所以能够保证最大公约数不低于 <span class="math inline"><em>x</em></span>。</p><p>优化 5：<span class="math inline"><em>x</em> ≥ 2</span>，所以 <span class="math inline"><em>a</em> ≥ <em>y</em> ÷ 2</span>时就不用枚举了。</p><p>结束～<del>个 dir 啊</del></p><p>因为出事儿了……</p><p>下面这组数据阁下又该如何应对？</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100 100</span><br></pre></td></tr></tbody></table></figure></div><p>寄～</p><p>因为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.684ex;" xmlns="http://www.w3.org/2000/svg" width="6.469ex" height="2.398ex" role="img" focusable="false" viewBox="0 -757.5 2859.4 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(794.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1516.4,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(0,-102.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2006.4" height="60" x="853" y="637.5"></rect></g></g></g></svg></mjx-container></span>的值若是整数按照刚才的逻辑会被算 2遍，然鹅换了个顺序还是这俩，不能重复计算啊！特判一下就得了……</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题</span></span><br><span class="line"><span class="comment">// Contest: Luogu</span></span><br><span class="line"><span class="comment">// URL: https://www.luogu.com.cn/problem/P1029</span></span><br><span class="line"><span class="comment">// Memory Limit: 125 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x, y, ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">x = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), y = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x; i * i &lt;= x * y &amp;&amp; i &lt; y &gt;&gt; <span class="number">1</span>; i += x)</span><br><span class="line"><span class="keyword">if</span> (!(x * y % i) &amp;&amp; <span class="built_in">gcd</span>(i, x * y / i) == x) ans += <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (x == y) ans = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/161223825">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;提供一种快速做法（31ms）~&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：P8267 [USACO22OPEN] Counting Liars B &amp;  U208878 晴天</title>
    <link href="https://www.leo2011.eu.org/2024/05/25/ti-jie-p8267-usaco22open-counting-liars-b-u208878-qing-tian/"/>
    <id>https://www.leo2011.eu.org/2024/05/25/ti-jie-p8267-usaco22open-counting-liars-b-u208878-qing-tian/</id>
    <published>2024-05-25T13:50:30.000Z</published>
    <updated>2024-11-10T14:07:22.943Z</updated>
    
    <content type="html"><![CDATA[<p>其实，这个题，只需要最简单的枚举，加上最简单的二分查找即可～</p><span id="more"></span><hr><p><span class="math inline">1 ≤ <em>N</em> ≤ 1000</span>？枚举吧～</p><p>咋枚举？显然，最好状态下 Bessie 的位置一定是某个 <span class="math inline"><em>p</em><sub><em>i</em></sub></span>，否则差一个就会导致有个奶牛要说谎。所以我们枚举（理论来讲要先去个重，这样快一点，不过貌似数据没有重的～）<span class="math inline"><em>p</em><sub><em>i</em></sub></span>，每次遍历这帮奶牛看看有多少不说实话的不就得了？时间复杂度显然<span class="math inline"><em>O</em>(<em>n</em><sup>2</sup>)</span></p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: P8267 [USACO22OPEN] Counting Liars B</span></span><br><span class="line"><span class="comment">// Contest: Luogu</span></span><br><span class="line"><span class="comment">// URL: https://www.luogu.com.cn/problem/P8267</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n, t[N], ans = INF;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; pls;</span><br><span class="line"><span class="type">char</span> op[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line">cin &gt;&gt; op[i] &gt;&gt; t[i];</span><br><span class="line">pls.<span class="built_in">push_back</span>(t[i]);  <span class="comment">// 数组 p</span></span><br><span class="line">}</span><br><span class="line"><span class="built_in">unique</span>(pls.<span class="built_in">begin</span>(), pls.<span class="built_in">end</span>());  <span class="comment">// 去重</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : pls) {</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">1</span>, n) <span class="keyword">if</span> ((op[j] == <span class="string">'L'</span> &amp;&amp; i &gt; t[j]) || (op[j] == <span class="string">'G'</span> &amp;&amp; i &lt; t[j]))++ tmp;  <span class="comment">// 满足条件就过</span></span><br><span class="line">ans = <span class="built_in">min</span>(ans, tmp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/159996872">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><hr><p>本来该消停了，直到我在<a class="link" href="https://www.luogu.com/discuss/426035">讨论区里<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>发现了个<a class="link" href="https://www.luogu.com.cn/problem/U208878">加强版<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。</p><p>加强版把 <span class="math inline"><em>N</em></span> 上调至 <span class="math inline">2 × 10<sup>5</sup></span>，显然，刚才的方法挂了。<a class="link" href="https://www.luogu.com.cn/record/160026884">实测<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>确实不行。咋办？</p><p><del>注意看标签得到</del>二分。外面显然没法优化，里边可以不？</p><p>必须滴！</p><p>你查找‘L’中说谎的，不就是在查小于这玩意儿的吗？你查找‘G’当中说谎的，不就是再查大于这玩意儿的吗？小于的直接<code>lower_bound</code>，大于的就相当于总数 - 小于等于的，也就是总数 -<code>upper_bound</code>。</p><p>时间复杂度显然为 <span class="math inline"><em>Θ</em>(<em>N</em>log <em>N</em>)</span>，可以过。</p><p>完。</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: U208878 晴天</span></span><br><span class="line"><span class="comment">// Contest: Luogu</span></span><br><span class="line"><span class="comment">// URL: https://www.luogu.com.cn/problem/U208878</span></span><br><span class="line"><span class="comment">// Memory Limit: 128 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, t, ans = INF;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; pls, lhs, rhs;</span><br><span class="line"><span class="type">char</span> op;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">IOS cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) {</span><br><span class="line">cin &gt;&gt; op &gt;&gt; t;</span><br><span class="line">pls.<span class="built_in">push_back</span>(t);</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">'L'</span>) lhs.<span class="built_in">push_back</span>(t);</span><br><span class="line"><span class="keyword">else</span> rhs.<span class="built_in">push_back</span>(t);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">sort</span>(pls.<span class="built_in">begin</span>(), pls.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">sort</span>(lhs.<span class="built_in">begin</span>(), lhs.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">sort</span>(rhs.<span class="built_in">begin</span>(), rhs.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : pls) {</span><br><span class="line"><span class="type">int</span> tmpg = rhs.<span class="built_in">size</span>() - (<span class="built_in">upper_bound</span>(rhs.<span class="built_in">begin</span>(), rhs.<span class="built_in">end</span>(), i) - rhs.<span class="built_in">begin</span>()), tmpl = <span class="built_in">lower_bound</span>(lhs.<span class="built_in">begin</span>(), lhs.<span class="built_in">end</span>(), i) - lhs.<span class="built_in">begin</span>();</span><br><span class="line">cerr &lt;&lt; i &lt;&lt; <span class="string">' '</span> &lt;&lt; tmpg &lt;&lt; <span class="string">' '</span> &lt;&lt; tmpl &lt;&lt; endl;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, tmpg + tmpl);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">write</span>&lt;<span class="type">int</span>&gt;(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/160099171">AC记录（加强版）~<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;其实，这个题，只需要最简单的枚举，加上最简单的二分查找即可～&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>题解：CF1337A Ichihime and Triangle</title>
    <link href="https://www.leo2011.eu.org/2024/05/13/ti-jie-cf1337a-ichihime-and-triangle/"/>
    <id>https://www.leo2011.eu.org/2024/05/13/ti-jie-cf1337a-ichihime-and-triangle/</id>
    <published>2024-05-13T11:43:11.000Z</published>
    <updated>2024-11-10T09:25:40.408Z</updated>
    
    <content type="html"><![CDATA[<p>看到大佬们基本都是直接输出 <span class="math inline"><em>b</em></span> <span class="math inline"><em>c</em></span> <span class="math inline"><em>c</em></span>了事儿，<del>一身反骨</del>有其它构造方法的我表示不服，<del>遂作此篇</del>。</p><span id="more"></span><hr><p>众所周知，两边之和大于第三边，所以，如果 <span class="math inline"><em>b</em> + <em>c</em> &gt; <em>d</em></span>，那么<span class="math inline"><em>b</em></span>、<span class="math inline"><em>c</em></span>、<span class="math inline"><em>d</em></span>就是正确的。那如果不满足呢？在题目条件下 <span class="math inline"><em>b</em> + <em>c</em> &gt; <em>b</em> + <em>c</em> − 1</span>，那么这一组就是合理的。</p><p>分别验证下。满足 <span class="math inline"><em>b</em> + <em>c</em> &gt; <em>d</em>, <em>x</em> = <em>b</em>, <em>y</em> = <em>c</em>, <em>z</em> = <em>d</em></span>，显然都满足条件。另外一组也是类似的。极端情况下<span class="math inline"><em>b</em> + <em>c</em> − 1 &gt; <em>d</em></span>？那么可以得到<span class="math inline"><em>b</em> + <em>c</em> &gt; <em>d</em> + 1</span>，显然也满足条件，所以方法正确。</p><hr><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">run</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> d)</span> </span>{  <span class="comment">//  a &lt;= x &lt;= b b &lt;= y &lt;= c c &lt;= z &lt;= d</span></span><br><span class="line">    <span class="keyword">if</span> (b + c - <span class="number">1</span> &lt;= d)</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d %d %d\n"</span>, b, c, b + c - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"%d %d %d\n"</span>, b, c, d);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) {</span><br><span class="line">        <span class="type">int</span> a, b, c, d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">        <span class="built_in">run</span>(a, b, c, d);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/99768270">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;看到大佬们基本都是直接输出 &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;b&lt;/em&gt;&lt;/span&gt; &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;c&lt;/em&gt;&lt;/span&gt; &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;c&lt;/em&gt;&lt;/span&gt;
了事儿，&lt;del&gt;一身反骨&lt;/del&gt;有其它构造方法的我表示不服，&lt;del&gt;遂作此篇&lt;/del&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>题解：AT_abc352_c [ABC352C] Standing On The Shoulders</title>
    <link href="https://www.leo2011.eu.org/2024/05/04/ti-jie-at-abc352-c-abc352c-standing-on-the-shoulders/"/>
    <id>https://www.leo2011.eu.org/2024/05/04/ti-jie-at-abc352-c-abc352c-standing-on-the-shoulders/</id>
    <published>2024-05-04T13:58:09.000Z</published>
    <updated>2024-08-29T03:17:00.515Z</updated>
    
    <content type="html"><![CDATA[<p>考场憋了很久，最后代码贼短……</p><span id="more"></span><hr><p>理想状态下，直接全排列解决问题。但是，<span class="math inline">1 ≤ <em>n</em> ≤ 2 × 10<sup>5</sup></span>，明显TLE，试都不用试的。</p><p>咋优化呢？</p><p>其实，前面的巨人只负责 “打地基”，作为 “塔尖儿” 的巨人有且仅有 1个。而前面地基随便排列，地基高度（他们的和）都不会变。所以，我们只需要枚举塔尖即可。塔尖儿定了，下面的地基高度也就定了。</p><p>然后，又是一个问题 —— 求和！理论来讲，最最暴力的方法就是一层循环。但是，一层循环时间复杂度为<span class="math inline"><em>Θ</em>(<em>n</em>)</span>，联合上枚举塔尖的循环，时间复杂度为<span class="math inline"><em>Θ</em>(<em>n</em><sup>2</sup>)</span>，又TM 挂了……</p><p>这里，我们可以采用一种类似前缀和的思想：用一个 变量 <span class="math inline"><em>s</em><em>u</em><em>m</em></span>（学名叫<em>累加器</em>）来记录 <span class="math inline"><em>A</em></span>的总和，然后算去掉塔尖（<span class="math inline"><em>P</em><sub><em>i</em></sub></span>）的时候，答案就是<span class="math inline"><em>s</em><em>u</em><em>m</em> − <em>A</em><sub><em>P</em><sub><em>i</em></sub></sub> + <em>B</em><sub><em>P</em><sub><em>i</em></sub></sub></span>。这个操作，时间复杂度显然为<span class="math inline"><em>Θ</em>(1)</span>，算上循环为 <span class="math inline"><em>Θ</em>(<em>n</em>)</span>，明显可以。</p><hr><p>赛场 ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: C - Standing On The Shoulders</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 352</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc352/tasks/abc352_c</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (ll(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">ll n, mx = -INF, sum1;</span><br><span class="line">PII g[N];  <span class="comment">// pair 可以把两个数组怼到一块儿，具体使用方法见 https://blog.csdn.net/sevenjoin/article/details/81937695</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line">ll top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;ll&gt;();  <span class="comment">// 不开 long long 见**，别问，问就是实践出来的真知</span></span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) g[i].first = <span class="built_in">read</span>&lt;ll&gt;(), g[i].second = <span class="built_in">read</span>&lt;ll&gt;(), sum1 += g[i].first;  <span class="comment">// 累加器</span></span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n)</span><br><span class="line">mx = <span class="built_in">max</span>(mx, sum1 - g[i].first + g[i].second);  <span class="comment">// 上面简单的公式</span></span><br><span class="line"><span class="built_in">write</span>&lt;ll&gt;(mx);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://atcoder.jp/contests/abc352/submissions/53122314">AC记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><hr><p>先别划走，说两件事儿。</p><ol type="1"><li><p>这道题可以用贪心（同学做法），但是，贪地基高度是错的，见 <a class="link" href="https://atcoder.jp/contests/abc352/submissions/53114017">https://atcoder.jp/contests/abc352/submissions/53114017<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，贪心需谨慎啊！</p></li><li><p>不开 long long 见 **！</p></li><li><p>一张<del>绝世好</del>很有用的图，可以收藏，拿走～<img lazyload="" src="/images/loading.svg" data-src="https://cdn.luogu.com.cn/upload/pic/26845.png" alt="如图"></p></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;考场憋了很久，最后代码贼短……&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>P10111 [GESP202312 七级] 纸牌游戏 题解</title>
    <link href="https://www.leo2011.eu.org/2024/03/13/p10111-gesp202312-qi-ji-zhi-pai-you-xi-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/03/13/p10111-gesp202312-qi-ji-zhi-pai-you-xi-ti-jie/</id>
    <published>2024-03-13T14:21:38.000Z</published>
    <updated>2025-01-21T10:11:46.025Z</updated>
    
    <content type="html"><![CDATA[<p><del>看标签</del>知道要用 DP。</p><span id="more"></span><p>于是开始分析。</p><p>状态：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.367ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5024.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1023,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1412,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1757,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2201.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2613.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3058.3,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3579.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4246.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g></g></svg></mjx-container> 前 <span class="math inline"><em>i</em></span>轮中，第 <span class="math inline"><em>i</em></span> 轮出 <span class="math inline"><em>j</em></span>，一共换了 <span class="math inline"><em>k</em></span> 次牌的最大钱数。很好理解。</p><p>转移也不难，不就是不换和换两种吗！</p><p>所以，转移就是： <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex;" xmlns="http://www.w3.org/2000/svg" width="55.775ex" height="5.428ex" role="img" focusable="false" viewBox="0 -1449.5 24652.5 2399"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1023,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1412,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1757,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2201.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2613.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3058.3,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(3579.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4246.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(5301.9,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"></path></g><g data-mml-node="mrow" transform="translate(7329.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,604.5)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1023,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1412,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1979.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2979.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3479.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3924.1,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(4336.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4780.8,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(5301.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5913,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6913.2,0)"><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"></path><path data-c="6B" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T97 124T98 167T98 217T98 272T98 329Q98 366 98 407T98 482T98 542T97 586T97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V463L180 233L240 287Q300 341 304 347Q310 356 310 364Q310 383 289 385H284V431H293Q308 428 412 428Q475 428 484 431H489V385H476Q407 380 360 341Q286 278 286 274Q286 273 349 181T420 79Q434 60 451 53T500 46H511V0H505Q496 3 418 3Q322 3 307 0H299V46H306Q330 48 330 65Q330 72 326 79Q323 84 276 153T228 222L176 176V120V84Q176 65 178 59T189 49Q210 46 238 46H254V0H246Q231 3 137 3T28 0H20V46H36Z" transform="translate(556,0)"></path></g><g data-mml-node="mo" transform="translate(7997.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8386.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(8798.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(9242.9,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10002.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10614.1,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(11614.3,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-604.5)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1023,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1412,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1979.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2979.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3479.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3924.1,0)"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(445,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4613.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(5058.2,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(5801.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(6801.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(7301.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7912.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(8913.1,0)"><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"></path><path data-c="6B" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T97 124T98 167T98 217T98 272T98 329Q98 366 98 407T98 482T98 542T97 586T97 603Q94 622 83 628T38 637H20V660Q20 683 22 683L32 684Q42 685 61 686T98 688Q115 689 135 690T165 693T176 694H179V463L180 233L240 287Q300 341 304 347Q310 356 310 364Q310 383 289 385H284V431H293Q308 428 412 428Q475 428 484 431H489V385H476Q407 380 360 341Q286 278 286 274Q286 273 349 181T420 79Q434 60 451 53T500 46H511V0H505Q496 3 418 3Q322 3 307 0H299V46H306Q330 48 330 65Q330 72 326 79Q323 84 276 153T228 222L176 176V120V84Q176 65 178 59T189 49Q210 46 238 46H254V0H246Q231 3 137 3T28 0H20V46H36Z" transform="translate(556,0)"></path></g><g data-mml-node="mo" transform="translate(9997.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10386.1,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(10798.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(11242.8,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(12002.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12614,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(13614.2,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(14692.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(15692.6,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(462,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(17323,0) translate(0 250)"></g></g></g></g></svg></mjx-container></span> 其中，<span class="math inline"><em>j</em><sup>′</sup></span>表示你要换的牌，显然要求 <span class="math inline"><em>j</em><sup>′</sup> ≠ <em>j</em></span>，<span class="math inline">pk (<em>x</em>, <em>y</em>)</span> 表示你出牌 <span class="math inline"><em>x</em></span>，小杨出 <span class="math inline"><em>y</em></span> 时的胜负情况。胜返回 <span class="math inline">2</span>，负返回 <span class="math inline">0</span>，平返回 <span class="math inline">1</span>。上面就是不还，下面就是换。</p><p>观察发现，获胜时要么大 <span class="math inline">1</span>，要么小<span class="math inline">2</span>（因为此处 “<span class="math inline">0 &gt; 2</span>”）。</p><p>所以 <span class="math inline">pk </span> 函数如下：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">pk</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x == y) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x == y + <span class="number">1</span> || x == y - <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><hr><p>以上为朴素做法。还能不能优化呢？滚动数组嘛！这玩意儿不就是专门给其中一维是 “前<span class="math inline"><em>i</em></span> 回……” 的 DP状态砍掉这维的嘛！</p><p>于是用上滚动数组（这个不会的去看背包），空间复杂度就可以降到 <span class="math inline"><em>Θ</em>(3<em>N</em>)</span> 啦！</p><hr><p>用上滚动数组的：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: P10111 [GESP202312 七级] 纸牌游戏</span></span><br><span class="line"><span class="comment">// Contest: Luogu</span></span><br><span class="line"><span class="comment">// URL: https://www.luogu.com.cn/problem/P10111</span></span><br><span class="line"><span class="comment">// Memory Limit: 512 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n, a[N], b[N], c[N], dp[<span class="number">3</span>][N], ans = -INF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pk</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x == y) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x == y + <span class="number">1</span> || x == y - <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) a[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n - <span class="number">1</span>) b[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) c[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">memset</span>(dp, <span class="number">-0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, <span class="number">2</span>) dp[i][<span class="number">0</span>] = <span class="built_in">pk</span>(i, c[<span class="number">1</span>]) * a[<span class="number">1</span>];</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">2</span>, n)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j) <span class="built_in">FOR</span>(k, <span class="number">0</span>, <span class="number">2</span>) {</span><br><span class="line"><span class="type">int</span> s = <span class="built_in">pk</span>(k, c[i]) * a[i];</span><br><span class="line">dp[k][j] += s;  <span class="comment">// 默认不换</span></span><br><span class="line"><span class="keyword">if</span> (j &gt; <span class="number">0</span>)  <span class="comment">// 防止越界</span></span><br><span class="line"><span class="built_in">FOR</span>(l, <span class="number">0</span>, <span class="number">2</span>)  <span class="comment">// 换，换成 l</span></span><br><span class="line">dp[k][j] = <span class="built_in">max</span>(dp[k][j], dp[l][j - <span class="number">1</span>] + s - b[j]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">0</span>, n - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">0</span>, <span class="number">2</span>) ans = <span class="built_in">max</span>(ans, dp[j][i]);</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;看标签&lt;/del&gt;知道要用 DP。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
    <category term="GESP" scheme="https://www.leo2011.eu.org/tags/GESP/"/>
    
  </entry>
  
  <entry>
    <title>AT_abc344_D-String Bags 题解</title>
    <link href="https://www.leo2011.eu.org/2024/03/10/at-abc344-d-string-bags-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/03/10/at-abc344-d-string-bags-ti-jie/</id>
    <published>2024-03-10T13:58:27.000Z</published>
    <updated>2024-08-31T03:36:00.607Z</updated>
    
    <content type="html"><![CDATA[<p>前情提要：小 L 在某谷上第一篇过审的 tj！</p><p>明显是 DP。</p><span id="more"></span><p>然后就开始分析：</p><p>状态：<span class="math inline"><em>d</em><em>p</em><sub><em>i</em><em>j</em></sub>=</span>有 <span class="math inline"><em>i</em></span> 个袋子且匹配 <span class="math inline"><em>T</em></span> 的前缀的长度为 <span class="math inline"><em>j</em></span> 时所需的最少钱数。</p><p>匹配 <span class="math inline"><em>T</em></span> 的前缀的长度为 <span class="math inline"><em>j</em></span> 就是前 <span class="math inline"><em>j</em></span> 个字符与 <span class="math inline"><em>T</em></span> 的前 <span class="math inline"><em>j</em></span> 个字符相同。</p><p>相对简单。</p><hr><p>然后看转移。为了方便，咱不妨令 <span class="math inline">|<em>S</em>|</span> 为字符串 <span class="math inline"><em>S</em></span> 的长度，其它的同理。</p><p>假设是要将第 <span class="math inline"><em>i</em></span>个袋子里的字符串 <span class="math inline"><em>L</em></span> 接到 <span class="math inline"><em>S</em></span> 的末尾，那么就只有 <span class="math inline"><em>S</em><sub>|<em>S</em>|+1</sub></span> 与 <span class="math inline"><em>S</em><sub>|<em>S</em>|+|<em>L</em>|)</sub></span>依次对应时才能从 <span class="math inline"><em>d</em><em>p</em><sub>(<em>i</em> − 1)|<em>S</em>|</sub></span>转移到 <span class="math inline"><em>d</em><em>p</em><sub><em>i</em>|<em>L</em>|</sub></span>。</p><p>为啥呢？</p><p>不对应那你接哪儿去了？不是说好接到末尾吗？那你问啥呢，浪费表情:-(</p><p>那我不选呢？</p><p>不选你 <span class="math inline"><em>j</em></span> 不变不就得了？</p><p>所以，转移部分就是： </p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">110</span>; j++) dp[i + <span class="number">1</span>][j] = dp[i][j];  <span class="comment">// 同步过去</span></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--) {</span><br><span class="line">...判断是否满足上面的条件</span><br><span class="line"><span class="keyword">if</span> (满足) dp[i + <span class="number">1</span>][j + sl] = <span class="built_in">min</span>(dp[i + <span class="number">1</span>][j + sl], dp[i][j] + <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>上面 <code>dp[i + 1][j + sl]</code> 就是不选，<code>dp[i][j] + 1</code> 就是选。</p><hr><p>最后看一下时间复杂度。</p><p><span class="math inline"><em>Θ</em>(<em>N</em><em>M</em>|<em>S</em>|⋅|<em>T</em>|)</span>。<span class="math inline"><em>M</em></span> 为袋中字符串数量。</p><p>为啥？</p><p>你看我们上面的代码，不就是先遍历了一遍 <span class="math inline"><em>N</em></span> 个袋子，再遍历字符串数量 <span class="math inline"><em>M</em></span>，每次判断相等挨个比较不就是 <span class="math inline">|<em>S</em>|⋅|<em>T</em>|</span> 嘛。</p><p>结束～</p><hr><p>ACCode:</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: D - String Bags</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - Toyota Programming Contest 2024#3（AtCoder Beginner Contest 344）</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc344/tasks/abc344_d</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> dp[N][N];  <span class="comment">// dp[i][j] = 前 i 个袋子中匹配 T 的前缀长度为 j 时所需的最少钱数。</span></span><br><span class="line">string t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), <span class="built_in">write</span>&lt;T&gt;(-x);</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="function">IOS <span class="title">memset</span><span class="params">(dp, INF, <span class="keyword">sizeof</span>(dp))</span></span>;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="type">int</span> tl = t.<span class="built_in">size</span>(), n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">110</span>; j++) dp[i + <span class="number">1</span>][j] = dp[i][j];</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--) {</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> sl = s.<span class="built_in">size</span>();  <span class="comment">// 比较</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j + sl &lt;= tl; j++) {</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; sl; k++)</span><br><span class="line"><span class="keyword">if</span> (t[j + k] != s[k]) {</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (flag) dp[i + <span class="number">1</span>][j + sl] = <span class="built_in">min</span>(dp[i + <span class="number">1</span>][j + sl], dp[i][j] + <span class="number">1</span>);  <span class="comment">// 状态转移方程</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (dp[n][tl] &gt; <span class="number">5e8</span>) dp[n][tl] = <span class="number">-1</span>;  <span class="comment">// 过大就是祭了</span></span><br><span class="line">cout &lt;&lt; dp[n][tl] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/150332762">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>理解万岁！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;前情提要：小 L 在某谷上第一篇过审的 tj！&lt;/p&gt;
&lt;p&gt;明显是 DP。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="洛谷精选" scheme="https://www.leo2011.eu.org/tags/%E6%B4%9B%E8%B0%B7%E7%B2%BE%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>P10187 [USACO24FEB] Palindrome Game B 题解</title>
    <link href="https://www.leo2011.eu.org/2024/02/29/p10187-usaco24feb-palindrome-game-b-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/02/29/p10187-usaco24feb-palindrome-game-b-ti-jie/</id>
    <published>2024-02-29T13:15:43.000Z</published>
    <updated>2024-11-10T14:07:08.588Z</updated>
    
    <content type="html"><![CDATA[<p><del>挑战题解区最短代码</del></p><span id="more"></span><hr><p>回文数？数学题！打表找规律吧……</p><p>显然，<span class="math inline">1 ∼ 9</span>都是回文数，先手赢（就一位你还想咋地啊）。</p><p>然后是 <span class="math inline">10</span>。<del>样例</del>告诉我们，这个不行。</p><p>接着是 <span class="math inline">11 ∼ 19</span>，发现随便减个 <span class="math inline">1 ∼ 9</span> 就可以变成 <span class="math inline">10</span>，而 <span class="math inline">10</span>是后手赢。赢得就是后手的后手，那就是先手，可以。</p><p><span class="math inline">20</span>？减个 <span class="math inline">1 ∼ 9</span>不就又回到上面了？然后就是后手的先手，也就是后手赢，寄。</p><p><span class="math inline">21 ∼ 29</span>？ 减个 <span class="math inline">1 ∼ 9</span> 就变成 <span class="math inline">20</span> 了，后手的后手，先手赢。</p><p>以此类推，每一个非整十数都可以转化为整十数，而整十数都能转化为 <span class="math inline">10</span>，而 <span class="math inline">10</span>是后手赢的，所以非整十数是后手的后手，先手赢。而且整十数由于首位不可能为<span class="math inline">0</span>，所以都不是回文数，所以都是 整十数<span class="math inline"> ⇒ 10⇒</span> <code>E</code> 或 非整十数 <span class="math inline">⇒</span> 整十数 <span class="math inline"> ⇒ 10⇒</span> <code>B</code>。</p><p>结论：整十数是 <code>E</code>，非整十数是 <code>B</code>。</p><hr><p>短短的 ACCode：</p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(T):</span><br><span class="line">start = <span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'E'</span> <span class="keyword">if</span> start[-<span class="number">1</span>] == <span class="string">'0'</span> <span class="keyword">else</span> <span class="string">'B'</span>)</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/148794662">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;挑战题解区最短代码&lt;/del&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>P10189 [USACO24FEB] Maximizing Productivity B 题解</title>
    <link href="https://www.leo2011.eu.org/2024/02/29/p10189-usaco24feb-maximizing-productivity-b-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/02/29/p10189-usaco24feb-maximizing-productivity-b-ti-jie/</id>
    <published>2024-02-29T12:56:04.000Z</published>
    <updated>2024-11-10T14:06:54.288Z</updated>
    
    <content type="html"><![CDATA[<p>先说说暴力做法：</p><p>每次遍历一遍，看看是否满足 <span class="math inline"><em>t</em><sub><em>i</em></sub> + <em>s</em> ≤ <em>c</em><sub><em>i</em></sub></span>，满足就计数，不满足就挂。单次时间复杂度显然为<span class="math inline"><em>O</em>(<em>N</em>)</span>，总得时间复杂度约为<span class="math inline"><em>O</em>(<em>N</em><em>Q</em>)</span>，TLE 是肯定的～</p><span id="more"></span><p>暴力代码：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: Problem 3. Maximizing Productivity</span></span><br><span class="line"><span class="comment">// Contest: USACO - USACO 2024 February Contest, Bronze</span></span><br><span class="line"><span class="comment">// URL: https://usaco.org/index.php?page=viewproblem&amp;cpid=1385</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 4000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, q, c[N], t[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">n = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), q = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) c[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, n) t[i] = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;();</span><br><span class="line"><span class="built_in">FOR</span>(i, <span class="number">1</span>, q) {</span><br><span class="line"><span class="type">int</span> v = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), s = <span class="built_in">read</span>&lt;<span class="type">int</span>&gt;(), cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">FOR</span>(j, <span class="number">1</span>, n) <span class="keyword">if</span> (s + t[j] &lt; c[j])++ cnt;</span><br><span class="line"><span class="keyword">if</span> (cnt &gt;= v) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/148786459">评测记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，开了优化也只有20pts。</p><hr><p>暴力废了，开始整正解。</p><p><span class="math inline">2 × 10<sup>5</sup></span>？二分法，了解一下？</p><p>然后，然后遇到了个问题：二分这东西要求有序，可是 <span class="math inline"><em>c</em><sub><em>i</em></sub></span> 与 <span class="math inline"><em>t</em><sub><em>i</em></sub></span>是绑定在一起的啊！咋整？</p><p>注意 <span class="math inline"><em>c</em><sub><em>i</em></sub></span>与 <span class="math inline"><em>c</em><sub><em>i</em></sub> − <em>t</em><sub><em>i</em></sub></span>没关系，而这个式子能够求出啥啊？想要去到第 <span class="math inline"><em>i</em></span> 个农场最大的 <span class="math inline"><em>S</em></span> 嘛（<span class="math inline"><em>c</em><sub><em>i</em></sub> − <em>t</em><sub><em>i</em></sub> + <em>t</em><sub><em>i</em></sub> = <em>c</em><sub><em>i</em></sub></span>，刚好卡点儿到，不可能再晚了）！</p><p>总结一下，问题相当于预处理出来一个数组 <span class="math inline"><em>a</em></span>，使 <span class="math inline"><em>a</em><sub><em>i</em></sub> = <em>c</em><sub><em>i</em></sub> − <em>t</em><sub><em>i</em></sub></span>，求数组中是否有至少<span class="math inline"><em>V</em></span> 个数满足 <span class="math inline"><em>a</em><sub><em>i</em></sub> ≥ <em>S</em></span>。</p><p>先排个序（不然还是 <span class="math inline"><em>O</em>(<em>n</em>)</span>嘛），然后就可以分出来两种做法：</p><p>做法一：二分，用<code>upper_bound</code> 函数（因为是大于等于），时间复杂度约为 <span class="math inline"><em>O</em>(<em>Q</em><em>l</em><em>o</em><em>g</em><em>N</em>)</span>。</p><p>做法二：排完序后显然满足 <span class="math inline"><em>a</em><sub><em>V</em></sub> ≥ <em>a</em><sub><em>V</em> − 1</sub> ≥ <em>a</em><sub><em>V</em> − 2</sub>...<em>a</em><sub>1</sub></span>，因此如果<span class="math inline"><em>a</em><sub><em>V</em></sub></span>都小于等于 <span class="math inline"><em>S</em></span>了，那它前面的自然也都满足。因此只需要判断 <span class="math inline"><em>a</em><sub><em>V</em></sub> ≥ <em>S</em></span>成不成立即可。时间复杂度约为 <span class="math inline"><em>O</em>(<em>Q</em>)</span>。</p><p>赛时 ACCode（做法二）:</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Problem: Problem 3. Maximizing Productivity</span></span><br><span class="line"><span class="comment">// Contest: USACO - USACO 2024 February Contest, Bronze</span></span><br><span class="line"><span class="comment">// URL: https://usaco.org/index.php?page=viewproblem&amp;cpid=1385</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 4000 ms</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Code by Leo2011*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>  <span class="comment">// 万能头CE</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EPS 1e-8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, l, r) for (int(i) = (l); (i) &lt;= (r); ++(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS                      \</span></span><br><span class="line"><span class="meta">ios::sync_with_stdio(false); \</span></span><br><span class="line"><span class="meta">cin.tie(nullptr);            \</span></span><br><span class="line"><span class="meta">cout.tie(nullptr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> __int128 i128;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> N, Q;</span><br><span class="line"><span class="type">int</span> close[<span class="number">200010</span>], t[<span class="number">200010</span>], ans[<span class="number">200010</span>], V, S;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">read</span><span class="params">()</span> </span>{</span><br><span class="line">T sum = <span class="number">0</span>, fl = <span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>())</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'-'</span>) fl = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (; <span class="built_in">isdigit</span>(ch); ch = <span class="built_in">getchar</span>()) sum = sum * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">return</span> sum * fl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>{</span><br><span class="line"><span class="type">static</span> T sta[<span class="number">35</span>];</span><br><span class="line"><span class="type">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> { sta[top++] = x % <span class="number">10</span>, x /= <span class="number">10</span>; } <span class="keyword">while</span> (x);</span><br><span class="line"><span class="keyword">while</span> (top) <span class="built_in">putchar</span>(sta[--top] + <span class="number">48</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">x</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>{ <span class="keyword">return</span> a &gt; b; }</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; N &gt;&gt; Q;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) { cin &gt;&gt; close[i]; }</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) { cin &gt;&gt; t[i]; }</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) { ans[i] = close[i] - t[i]; }</span><br><span class="line"><span class="built_in">sort</span>(ans + <span class="number">1</span>, ans + N + <span class="number">1</span>, x);</span><br><span class="line"><span class="keyword">while</span> (Q--) {</span><br><span class="line">cin &gt;&gt; V &gt;&gt; S;</span><br><span class="line"><span class="keyword">if</span> (ans[V] &gt; S) cout &lt;&lt; <span class="string">"YES"</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/148784245">AC 记录～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;先说说暴力做法：&lt;/p&gt;
&lt;p&gt;每次遍历一遍，看看是否满足 &lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;t&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt; + &lt;em&gt;s&lt;/em&gt; ≤ &lt;em&gt;c&lt;/em&gt;&lt;sub&gt;&lt;em&gt;i&lt;/em&gt;&lt;/sub&gt;&lt;/span&gt;，满足就计数，不满足就挂。单次时间复杂度显然为
&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;O&lt;/em&gt;(&lt;em&gt;N&lt;/em&gt;)&lt;/span&gt;，总得时间复杂度约为
&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;O&lt;/em&gt;(&lt;em&gt;N&lt;/em&gt;&lt;em&gt;Q&lt;/em&gt;)&lt;/span&gt;，TLE 是肯定的～&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="USACO" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/USACO/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>2023 游寄</title>
    <link href="https://www.leo2011.eu.org/2024/02/03/2023-you-ji/"/>
    <id>https://www.leo2011.eu.org/2024/02/03/2023-you-ji/</id>
    <published>2024-02-03T04:07:27.000Z</published>
    <updated>2024-11-17T04:02:24.410Z</updated>
    
    <content type="html"><![CDATA[<p>按首次参加时间排序。 <span id="more"></span></p><hr><h1 id="蓝桥stema">蓝桥 STEMA</h1><p>考点：家里（</p><p>打得最好的比赛之一。</p><h2 id="年初场">年初场</h2><p>选择题好简单，编程题就会前几道，没想到最后 500 + 分进了 GD 省赛……</p><p>可惜省赛跟英语撞了，没打……</p><h3 id="年末场">年末场</h3><p>跟年初场差不多，编程题多了一道也多做了一道，最后居然进了前 5%……</p><p>省赛还没开始……</p><h1 id="itc">ITC</h1><p>考点：家里</p><p>题目大多比较简单，不会一道编程题，城市赛 1 = 后面的赛场就没再打了……</p><h1 id="ccf">CCF</h1><h2 id="csp">CSP</h2><h3 id="day-0">Day 0</h3><p>CSP-J/S 2023 要开始了，蒟蒻 Leo2011 非常紧张！</p><p>不过准备的还行，但愿有个好成绩……</p><h3 id="day-1">Day 1</h3><p>考点：深实验初中部</p><p>距家里车程约 1h，跟平常到市区差不多。本部校区比我们学校和光明分校大多了，<del>路痴别考了</del>，但愿以后能去……</p><h4 id="上午场pj">上午场（pj）</h4><p>题目有些难度，但还好。</p><p>选择第 11 题考了一会儿改选项了……</p><p>判断题全选的✓……</p><p>没想到这样还能 74.5 全国前 10%“保送” 进入复赛……（GD 分数线等的我好苦……）</p><h4 id="下午场tg">下午场（tg）</h4><p>第一眼看到第一题：这不弱智题吗？</p><p>第二眼看到第二题：我是弱智（……</p><p>pj 选手，tg 摆烂，飞速答完题后（都不用想的，<del>反正都不会</del>）。</p><p>45.5，深圳分数线 46.5，我 KAO……</p><h3 id="day-2">Day 2</h3><p>考点：耀华实验学校</p><p>就考了 pj……</p><p>T3 一元二次方程给我一六年级小学生干炸了…… 骗个第一个点 10 分跑路（其实我可以骗 50 的，但没想到）</p><p>T4 输出 <code>-1</code>，本想着三四个点最后就一个点……</p><p>然后 T1T2 反复横跳（重点写 T1）</p><p>T2 想假了，本以为性质 AB 都能骗最后 “面向数据范围编程” 结果它的数据比我预想的小很多，30–&gt;15–&gt;0……</p><p>T1 玩儿命想 AC，结果贪心不足反因为开了个 1e9 的 longlong 数组 CE 爆 0（老师赛后告诉我把 9 改成 7 就可以 90 甚至 AC 了……）</p><p>2=+4 级绿钩–&gt; 啥也没有，寄</p><h2 id="gesp">GESP</h2><p>考点：深圳职业技术大学</p><p>搬家前在坪山区，那里有个叫 “深圳技术大学” 的考点，搬家后就得大老远跑到福田去了……（真的有人会把它们弄混吗）</p><h3 id="月4级">6 月 4 级</h3><p>选择判断很简单，编程 AC 了一道题，最后居然 59 全国第 536……<del>€€£ 你给我出来挨打！！！</del></p><h3 id="月4级-1">9 月 4 级</h3><p>跟 6 月一样，这次 69 了……</p><h3 id="月5级">12 月 5 级</h3><p>没法跳级，但至少能考。</p><p>这次是团报。</p><p>选择判断还是那么弱。</p><p>编程题 T1 从 4 级的 AC25–&gt;15，T2 居然从 4 级的 0–&gt;20（考场数据<del>很弱</del>对选手很友好，以后继续这样）。</p><p>团报能提前查分，73。</p><h1 id="abc">ABC</h1><p>考点：家里</p><p>最开始 327、328 两场 AC 了 C 题就以为自己能稳定做出 C，实际是做出 C 是偶然情况，祭。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;按首次参加时间排序。&lt;/p&gt;</summary>
    
    
    
    <category term="游寄" scheme="https://www.leo2011.eu.org/categories/%E6%B8%B8%E5%AF%84/"/>
    
    
  </entry>
  
  <entry>
    <title>几种最短路算法对比</title>
    <link href="https://www.leo2011.eu.org/2024/01/29/ji-chong-zui-duan-lu-suan-fa-dui-bi/"/>
    <id>https://www.leo2011.eu.org/2024/01/29/ji-chong-zui-duan-lu-suan-fa-dui-bi/</id>
    <published>2024-01-29T14:41:55.000Z</published>
    <updated>2024-12-22T12:37:13.331Z</updated>
    
    <content type="html"><![CDATA[<div class="note p-4 mb-4 rounded-small warning">    <p>众所周知，关于 SPFA，它死了。</p>  </div><span id="more"></span><p>几种最短路算法对比：</p><table><colgroup><col style="width: 20%"><col style="width: 20%"><col style="width: 20%"><col style="width: 20%"><col style="width: 20%"></colgroup><thead><tr><th style="text-align: center;">名称</th><th style="text-align: center;">时间复杂度</th><th style="text-align: center;">优点</th><th style="text-align: center;">缺点</th><th style="text-align: center;">使用情况</th></tr></thead><tbody><tr><td style="text-align: center;"> Floyd-Warshall</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>n</em><sup>3</sup>)</span></td><td style="text-align: center;"> 仅有的多源最短路径算法（即跑一遍 Floyd 能求出每个点到其它点的距离）、其核心代码就5 行</td><td style="text-align: center;">时间复杂度过高</td><td style="text-align: center;">多源最短路、对时间复杂度没要求</td></tr><tr><td style="text-align: center;"> Dijkstra（朴素）</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>n</em><sup>2</sup>) </span></td><td style="text-align: center;"><del>无</del></td><td style="text-align: center;">编码复杂度非常高、不能处理负权，即边的权值是负数的情况（跟它用的是贪心有关）</td><td style="text-align: center;"><del>不怎么用</del></td></tr><tr><td style="text-align: center;"> Dijkstra（优先队列优化）</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>m</em>log <em>m</em>)</span></td><td style="text-align: center;"> 最快了</td><td style="text-align: center;">同朴素版</td><td style="text-align: center;">对时间复杂度有要求</td></tr><tr><td style="text-align: center;"> Bellman-Ford</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>n</em><em>m</em>) </span></td><td style="text-align: center;"><del>我个人</del>比较喜欢的算法，能处理负权，时间复杂度还行，而且核心代码只有4 行</td><td style="text-align: center;">跟 Dijkstra 时间复杂度互有胜负，有时还是Dijkstra 赢了</td><td style="text-align: center;">稀疏图</td></tr><tr><td style="text-align: center;"> SPFA</td><td style="text-align: center;"> 最坏也是 <span class="math inline"><em>Θ</em>(<em>n</em><em>m</em>)</span></td><td style="text-align: center;"> 优化版 Bellman-Ford</td><td style="text-align: center;"> 众所周知，它死了</td><td style="text-align: center;">稀疏图</td></tr><tr><td style="text-align: center;"> Jonson</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>n</em><em>m</em> + <em>n</em><em>m</em>log <em>m</em>)</span></td><td style="text-align: center;"> 仅有的全源最短路算法，结合了 Dijksra 和SPFA 的优势</td><td style="text-align: center;"><del>感觉</del>跑多遍单源叫多源比较牵强、编码复杂度极高</td><td style="text-align: center;">不怎么常用……</td></tr><tr><td style="text-align: center;">BFS</td><td style="text-align: center;"><span class="math inline"><em>Θ</em>(<em>n</em> + <em>m</em>)</span></td><td style="text-align: center;"> 思路简单</td><td style="text-align: center;">只能处理等权图或无权图</td><td style="text-align: center;">等权图 / 无权图</td></tr></tbody></table><p>注：<span class="math inline"><em>n</em></span> 为点的个数，<span class="math inline"><em>m</em></span> 为边的个数。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note p-4 mb-4 rounded-small warning&quot;&gt;
    &lt;p&gt;众所周知，关于 SPFA，它死了。&lt;/p&gt;

  &lt;/div&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>B3929 [GESP202312 五级] 小杨的幸运数 题解</title>
    <link href="https://www.leo2011.eu.org/2024/01/28/b3929-gesp202312-wu-ji-xiao-yang-de-xing-yun-shu-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/01/28/b3929-gesp202312-wu-ji-xiao-yang-de-xing-yun-shu-ti-jie/</id>
    <published>2024-01-28T14:58:26.000Z</published>
    <updated>2025-01-21T10:11:24.965Z</updated>
    
    <content type="html"><![CDATA[<p>因为一些众所周知的原因，不放代码。</p><span id="more"></span><hr><p>分享一种考场思路：</p><p><span class="math inline"><em>a</em> ≤ 10<sup>7</sup></span>，顺序查找肯定会废，所以可以用一种类似埃氏筛的方法将所有满足条件的数标记一下，并将其加入一个答案数组<span class="math inline"><em>a</em></span>当中。然后每次查询只需要用 <code>lower_bound</code> 函数二分查找一下，假如找到了第<span class="math inline"><em>i</em></span> 个：</p><p><span class="math inline"><em>a</em><sub><em>i</em></sub> = <em>x</em></span>,直接输出；</p><p>否则，比较 <span class="math inline">∣<em>a</em><sub><em>i</em> − 1</sub> − <em>x</em>∣</span>和 <span class="math inline">∣<em>a</em><sub><em>i</em></sub> − <em>x</em>∣</span>，看看那个差值小输出。</p><p>最后算一下时间复杂度：预处理部分比埃氏筛快，查找部分二分时间复杂度最坏<span class="math inline"><em>O</em>(<em>N</em>log <em>m</em>)</span>，其中<span class="math inline"><em>m</em></span>就是查找出来的满足条件数数组大小，经计算，<span class="math inline"><em>m</em></span> 最坏是 <span class="math inline">500</span> 左右，乘 <span class="math inline"><em>N</em></span> 显然是因为有 <span class="math inline"><em>N</em></span> 次查询，最后是 <span class="math inline"><em>O</em>(<em>a</em>log log <em>a</em> + <em>N</em>log <em>m</em>)</span>不到，不会 TLE。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;因为一些众所周知的原因，不放代码。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
    <category term="GESP" scheme="https://www.leo2011.eu.org/tags/GESP/"/>
    
  </entry>
  
  <entry>
    <title>【置顶】运算符的关系简览</title>
    <link href="https://www.leo2011.eu.org/2024/01/25/zhi-ding-yun-suan-fu-de-guan-xi-jian-lan/"/>
    <id>https://www.leo2011.eu.org/2024/01/25/zhi-ding-yun-suan-fu-de-guan-xi-jian-lan/</id>
    <published>2024-01-25T14:00:24.000Z</published>
    <updated>2024-08-31T10:06:18.294Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 18px; color: #ff0000;">C/C++ 运算符优先级</span></strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;">&nbsp;</p><span id="more"></span><table style="color: #000000; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left; width: 612px;" border="1" cellspacing="0" cellpadding="0"><tbody><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">优先级</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">运算符</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">名称或含义</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">使用形式</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">结合方向</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">说明</strong></p></td></tr><tr><td rowspan="4"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"> 1</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">[]</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">数组下标</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">数组名 [常量表达式]</p></td><td rowspan="4"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">()</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">圆括号</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">(表达式）/ 函数名 (形参表)</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">.</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">成员选择（对象）</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">对象。成员名</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">-&gt;</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">成员选择（指针）</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">对象指针 -&gt; 成员名</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td rowspan="9"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">2</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">-</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">负号运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">- 表达式</p></td><td rowspan="9"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: red;">右到左</span></strong></p></td><td rowspan="7"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">单目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">~</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位取反运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">~ 表达式</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">++</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">自增运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">++ 变量名 / 变量名 ++</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">–</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">自减运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">–变量名 / 变量名–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">*</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">取值运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">* 指针变量</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&amp;</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">取地址运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&amp; 变量名</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">!</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">逻辑非运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">! 表达式</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">(</span><span class="fr-fix-3f915ed7" style="color: blue;">类型</span><span class="fr-fix-3f915ed7" style="color: blue;">)</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">强制类型转换</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">(数据类型) 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">sizeof</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">长度运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">sizeof (表达式)</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td rowspan="3"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">3</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">/</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">除</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 / 表达式</p></td><td rowspan="3"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td rowspan="3"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">*</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">乘</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 * 表达式</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">%</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">余数（取模）</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">整型表达式 % 整型表达式</p></td></tr><tr><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">4</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">+</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">加</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 + 表达式</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">-</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">减</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 - 表达式</p></td></tr><tr><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">5</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&lt;&lt; </span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">左移</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 &lt;&lt; 表达式</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&gt;&gt; </span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">右移</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 &gt;&gt; 表达式</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td rowspan="4"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">6</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&gt; </span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">大于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &gt; 表达式</p></td><td rowspan="4"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td rowspan="4"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&gt;=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">大于等于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &gt;= 表达式</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&lt; </span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">小于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &lt; 表达式</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&lt;=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">小于等于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &lt;= 表达式</p></td></tr><tr><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">7</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">==</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">等于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 == 表达式</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td rowspan="2"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">！</span><span class="fr-fix-3f915ed7" style="color: blue;">=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">不等于</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式！= 表达式</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">8</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&amp;</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位与</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &amp; 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">9</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">^</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位异或</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 ^ 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">10</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">|</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位或</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 | 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">11</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&amp;&amp;</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">逻辑与</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 &amp;&amp; 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">12</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">||</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">逻辑或</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 || 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">双目运算符</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">13</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">?:</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">条件运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 1?</p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式 2: 表达式 3</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: red;">右到左</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><span style="color: red;">三目运算符</span></p></td></tr><tr><td colspan="6" width="612">&nbsp;</td></tr><tr><td rowspan="11"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">14</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">赋值运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 = 表达式</p></td><td rowspan="11"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: red;">右到左</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">/=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">除后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 /= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">*=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">乘后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 *= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">%=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">取模后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 %= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">+=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">加后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 += 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">-=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">减后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 -= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&lt;&lt;=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">左移后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 &lt;&lt;= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&gt;&gt;=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">右移后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 &gt;&gt;= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">&amp;=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位与后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 &amp;= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">^=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位异或后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 ^= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">|=</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">按位或后赋值</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">变量 |= 表达式</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr><tr><td colspan="6" width="612"><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p></td></tr><tr><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7">15</strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="color: blue;">，</span></strong></p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">逗号运算符</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">表达式，表达式，…</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">左到右</p></td><td><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;" align="center">–</p></td></tr></tbody></table><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;">&nbsp;</p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 18px; color: #ff0000;">说明：</span></strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; line-height: 26px; text-align: left;">&nbsp;</p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;"><span style="font-size: 14px; color: #3366ff;"><strong class="fr-fix-3f915ed7">运算符共分为 15 级，1 级优先级最高，15 级优先级最低。</strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;"><span style="font-size: 14px; color: #3366ff;"><strong class="fr-fix-3f915ed7">同一优先级的运算符，运算次序由结合方向所决定。(结合性：2 13 14是从右至左 其他都是 从左至右)<br>简单记就是：！ &gt; 算术运算符 &gt;关系运算符 &gt; &amp;&amp; &gt; || &gt; 赋值运算符</strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;"><span style="font-size: 14px; color: #3366ff;"><strong class="fr-fix-3f915ed7">&nbsp;</strong></span></p><p style="text-align: left; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #ff0000;">再详细一点，附带一个口诀。(网上找的)</span></strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">&nbsp;</p><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">括号成员第一；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 括号运算符<a href=""></a> 成员运算符. -&gt;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">全体单目第二；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 所有的单目运算符比如 ++、–、 +(正)、 -(负) 、指针运算 *、&amp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;"> 乘除余三，加减四；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 这个” 余” 是指取余运算即 %</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">移位五，关系六；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 移位运算符：&lt;&lt;&gt;&gt;，关系：&gt; &lt; &gt;= &lt;= 等</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">等于 (与) 不等排第七；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 即 == 和！=</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">位与异或和位或；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">“三分天下” 八九十；<span class="fr-fix-3f915ed7" style="text-align: left;"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 这几个都是位运算：位与 (&amp;) 异或 (^) 位或 (|)</span></span></span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">逻辑或跟与；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 逻辑运算符:|| 和 &amp;&amp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">十二和十一；</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 注意顺序：优先级 (||) 底于优先级 (&amp;&amp;) </span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">条件高于赋值，</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 三目运算符优先级排到 13 位只比赋值运算符和”,“高</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">&nbsp;</span></strong></div><div style="text-align: left;"><strong class="fr-fix-3f915ed7"><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #009900;">逗号运算级最低！</span><span class="fr-fix-3f915ed7" style="font-size: 14px; color: #cc6600;">// 逗号运算符优先级最低</span></strong></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;&quot;&gt;
&lt;strong class=&quot;fr-fix-3f915ed7&quot;&gt;&lt;span class=&quot;fr-fix-3f915ed7&quot; style=&quot;font-size: 18px; color: #ff0000;&quot;&gt;C/C++ 运算符优先级&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-family: Arial; font-size: 14px; line-height: 26px; text-align: left;&quot;&gt;
&amp;nbsp;
&lt;/p&gt;</summary>
    
    
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>我艹，这么多良心软件都在 GitHub 上，你却打都打不开？</title>
    <link href="https://www.leo2011.eu.org/2024/01/25/wo-cao-zhe-me-duo-liang-xin-ruan-jian-du-zai-github-shang-ni-que-da-du-da-bu-kai/"/>
    <id>https://www.leo2011.eu.org/2024/01/25/wo-cao-zhe-me-duo-liang-xin-ruan-jian-du-zai-github-shang-ni-que-da-du-da-bu-kai/</id>
    <published>2024-01-25T04:54:47.000Z</published>
    <updated>2024-12-22T12:37:13.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="github为何物">GitHub 为何物？</h1><p>Git 是一个代码管理工具。GitHub 上自带 Git，可以上传代码，上面囤积了不少高质量开源项目，比如<a class="link" href="https://github.com/luogu-dev/cyaron">你谷的 CYaRon<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。</p><span id="more"></span><h1 id="有啥缺点不">有啥缺点不？</h1><p>有啊，国内裸网打不开…… <del>设计墙这东西的那个 S13 出来挨打！！！</del></p><h1 id="咋办呢">咋办呢？</h1><h2 id="挂梯子">挂梯子</h2><p>愁，是一堵矮矮的墙。我在这头，GitHub 在那头（doge</p><p>那你架个梯子把墙翻过去不就得了？</p><h3 id="优点">优点</h3><p>简单粗暴，能够访问其它站点</p><h3 id="缺点">缺点</h3><ol type="1"><li>大部分梯子都要付钱</li><li>免费的梯子不好找，一般还不太稳定</li><li><strong>外挂梯子是违法行为</strong></li></ol><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/l4ZNXhWIinYKFdz.png"></p><h2 id="watt-toolkit">Watt Toolkit</h2><p><a class="link" href="https://steampp.net/">在这里～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><h3 id="优点-1">优点</h3><ol type="1"><li>服务比较稳定</li><li>免费</li><li>由正规公司开发，通过了微软的审核，不会逝</li><li>能加速部分其他站点，但像谷歌全家桶这样的就算了……</li></ol><h3 id="缺点-1">缺点</h3><ol type="1"><li>还是可能会崩</li></ol><details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>讲点别的 ——Watt Toolkit 什么能加速？ </summary>              <div class="content">              <p>Watt Toolkit 什么能加速？</p><p>这得说到 GitHub 为什么访问慢。其实 GitHub 在日本、韩国这些地方有服务器，离咱们近，自然访问快。但 GitHub 配置的 DNS（有多个服务器时帮你选择服务器的服务）比较奇葩，会把你导到美国的服务器去，很容易就 TLE 了。</p><p>而另一个关键是 Hosts 文件，你可以在此修改一些网络配置。比如以<code>站点地址 服务器IP</code> 的格式让所有访问这个地址的请求在本机上转移到你指定的服务器。所以我们拿到日韩的服务器 IP 地址，再修改 Hosts 就可以实现加速了。</p><p>WattToolkit 其实就是实现这个过程的自动化脚本，但有图形化界面。<del>不会的可以看<a class="link" href="https://www.cnblogs.com/leo2011/p/17938779">这篇简介<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。</del></p>              </div>            </details><h2 id="steamcommunity-302">Steamcommunity 302</h2><p><a class="link" href="https://www.dogfight360.com/blog/knowledge-base/steamcommunity_302_manual/">这里～<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。</p><h3 id="优点-2">优点</h3><ol type="1"><li>比较稳定 2. 免费</li><li>能加速一些别的</li></ol><h3 id="缺点-2">缺点</h3><ol type="1"><li>Watt Toolkit 与这个互相不兼容，即不能同时开启两个</li><li><del>我个人认为</del> UI 有那么亿点点简陋……</li></ol><h2 id="fastgithub">FastGitHub</h2><p><del>原 GitHub 库已消失，只能在<a class="link" href="https://github.com/ylong52/fastgithub_win">这里找到<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></del></p><h3 id="优点-3">优点</h3><ol type="1"><li>纯粹</li><li>如果加速不成功能显示报错信息</li><li>与上面两个兼容</li></ol><h3 id="缺点-3">缺点</h3><ol type="1"><li>名字就能看出只加速 GitHub</li><li> 这项目本身就 TM 托管在 GitHub 上…… <del>这作者有脑子，但不多。</del></li></ol><h1 id="总结">总结</h1><p>一张表，拿走：</p><table><colgroup><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"><col style="width: 25%"></colgroup><thead><tr><th style="text-align: center;">方式</th><th style="text-align: center;">网址</th><th style="text-align: center;">优点</th><th style="text-align: center;">缺点</th></tr></thead><tbody><tr><td style="text-align: center;">挂梯子</td><td style="text-align: center;"> -</td><td style="text-align: center;"> 能访问所有外国站点，简单粗暴</td><td style="text-align: center;"><strong>违法</strong>、付费、免费的不稳定、有些加速器的 “智能路由模式” 非常智障</td></tr><tr><td style="text-align: center;"> Watt Toolkit</td><td style="text-align: center;"><a class="link" href="https://steampp.net/">https://steampp.net/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td><td style="text-align: center;">能加速一些别的、稳定、安全</td><td style="text-align: center;">还是可能会崩</td></tr><tr><td style="text-align: center;"> Steamcommunity 302</td><td style="text-align: center;"><a class="link" href="https://www.dogfight360.com/blog/knowledge-base/steamcommunity_302_manual/">https://www.dogfight360.com/blog/knowledge-base/steamcommunity_302_manual/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td><td style="text-align: center;">同 Watt Toolkit</td><td style="text-align: center;"> 与 Watt Toolkit 不兼容、UI 比较丑</td></tr><tr><td style="text-align: center;"> FastGitHub</td><td style="text-align: center;"> 已消失，但可以在 <a class="link" href="https://github.com/ylong52/fastgithub_win">https://github.com/ylong52/fastgithub_win<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>下载</td><td style="text-align: center;">纯粹、能显示报错信息，与上面两个兼容</td><td style="text-align: center;">只能加速 GitHub、原 GitHub 项目已消失</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;github为何物&quot;&gt;GitHub 为何物？&lt;/h1&gt;
&lt;p&gt;Git 是一个代码管理工具。GitHub 上自带 Git，可以上传代码，上面囤积了不少高质量开源项目，比如&lt;a class=&quot;link&quot; href=&quot;https://github.com/luogu-dev/cyaron&quot;&gt;你谷的 CYaRon&lt;i class=&quot;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&quot;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ABC 串讲 ——332（A~C）</title>
    <link href="https://www.leo2011.eu.org/2024/01/19/abc-chuan-jiang-332-a-c/"/>
    <id>https://www.leo2011.eu.org/2024/01/19/abc-chuan-jiang-332-a-c/</id>
    <published>2024-01-19T13:35:04.000Z</published>
    <updated>2024-08-21T14:56:10.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a-online-shopping">A Online Shopping</h1><p>模拟计算就得了。</p><span id="more"></span><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> n, s, k, p[N], q[N], sum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;s, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;p[i], &amp;q[i]), sum += p[i] * q[i];</span><br><span class="line"><span class="keyword">if</span> (sum &lt; s) sum += k;</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/140465002">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><h1 id="b-glass-and-mug">B Glass and Mug</h1><p>还是模拟，建俩变量模拟一遍得了。</p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> k, g, m, gls, mug;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;k, &amp;g, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; k;i++) {</span><br><span class="line">        <span class="keyword">if</span> (gls == g) gls = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> (mug == <span class="number">0</span>) mug = m;</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line"><span class="type">int</span> mug_can = mug, gls_need = g - gls;</span><br><span class="line"><span class="keyword">if</span> (mug_can &gt; gls_need) gls = g, mug -= gls_need;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (mug_can &lt; gls_need) mug = <span class="number">0</span>, gls += mug_can;</span><br><span class="line">                <span class="keyword">else</span> gls += gls_need, mug -= mug_can;</span><br><span class="line">}</span><br><span class="line">    }</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%d %d\n"</span>, gls, mug);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/140465914">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><h1 id="c-t-shirts">C T-shirts</h1><p>又双叒叕是模拟。</p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m, n, plain, logo, logo_have;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">plain = m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'0'</span>) {</span><br><span class="line">plain = m;</span><br><span class="line">logo_have = logo;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'1'</span>) {</span><br><span class="line"><span class="keyword">if</span> (plain &gt; <span class="number">0</span>)</span><br><span class="line">plain--;</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (logo_have &gt; <span class="number">0</span>)</span><br><span class="line">logo_have--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">logo++;</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (logo_have &gt; <span class="number">0</span>)</span><br><span class="line">logo_have--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">logo++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%d\n"</span>, logo);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><del>讲了跟没讲一样。</del></p><p><a class="link" href="https://www.luogu.com.cn/record/140466860">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a-online-shopping&quot;&gt;A Online Shopping&lt;/h1&gt;
&lt;p&gt;模拟计算就得了。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="AT-ABC串讲" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/AT-ABC%E4%B8%B2%E8%AE%B2/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>ABC 串讲 ——328（A~C）</title>
    <link href="https://www.leo2011.eu.org/2024/01/19/abc-chuan-jiang-328-a-c/"/>
    <id>https://www.leo2011.eu.org/2024/01/19/abc-chuan-jiang-328-a-c/</id>
    <published>2024-01-19T13:18:04.000Z</published>
    <updated>2024-12-22T12:37:13.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a-not-too-hard">A Not Too Hard</h1><p><span class="math inline"><em>N</em> ≤ 8</span>也是醉了，循环枚举就得了呗？ 遍历一遍数组就可以 AC 了。</p><span id="more"></span><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, x, a[N], sum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;x);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) {</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt;= x)</span><br><span class="line">sum += a[i];</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https：//www.luogu.com.cn/record/135867122">AC 记录</a></p><h1 id="b-1111">B 11/11</h1><p><del>我生日哎。</del></p><p>数位最多两位，这个数位分解很简单。这里有一种简单粗暴的办法：如果十位是 0 就让它等于个位就好了，反正不影响结果。</p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n, d[N], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) {</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;d[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j &lt;= d[i];j++) {</span><br><span class="line"><span class="type">int</span> ge = j % <span class="number">10</span>, shi = j / <span class="number">10</span>, gei = i % <span class="number">10</span>, shii = i /<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (shi == <span class="number">0</span>)</span><br><span class="line">shi = ge;</span><br><span class="line"><span class="keyword">if</span> (shii == <span class="number">0</span>)</span><br><span class="line">shii = gei;</span><br><span class="line"><span class="keyword">if</span> (ge == shi &amp;&amp; shi == gei &amp;&amp; gei == shii)</span><br><span class="line">ans++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https：//www.luogu.com.cn/record/135867314">AC 记录</a></p><h1 id="c-consecutive">C Consecutive</h1>  <div class="note p-4 mb-4 rounded-small success">    <p>Tips：区间求答案，就想前缀和。</p>  </div><p>如果相等，就在答案数组上 + 1，否则就不加</p><p>ACCode with 注释：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, q, l, r, cnt[N];</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;q);</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    s = <span class="string">' '</span> + s;  <span class="comment">// 前缀和从1开始</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">if</span> (s[i] == s[i + <span class="number">1</span>])  <span class="comment">// 相等</span></span><br><span class="line">            cnt[i] = cnt[i - <span class="number">1</span>] + <span class="number">1</span>;  <span class="comment">// 记录</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cnt[i] = cnt[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= q;i++) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,  cnt[r - <span class="number">1</span>] - cnt[l - <span class="number">1</span>]);</span><br><span class="line">        <span class="comment">/*因为上面是s[i + 1]与s[i]相同就记录了，</span></span><br><span class="line"><span class="comment">        所以要用cnt[r - 1]以防在最后一组相同的区间内只有其中一个字符，</span></span><br><span class="line"><span class="comment">        即避免如aabb中的bb在筛查1~3的时候被计算*/</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><del>什么蹩脚英语。</del></p><p><a href="https：//www.luogu.com.cn/record/135867500">AC 记录</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a-not-too-hard&quot;&gt;A Not Too Hard&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;N&lt;/em&gt; ≤ 8&lt;/span&gt;
也是醉了，循环枚举就得了呗？ 遍历一遍数组就可以 AC 了。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="AT-ABC串讲" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/AT-ABC%E4%B8%B2%E8%AE%B2/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>ABC 串讲 ——327（A~C）</title>
    <link href="https://www.leo2011.eu.org/2024/01/18/abc-chuan-jiang-327-a-c/"/>
    <id>https://www.leo2011.eu.org/2024/01/18/abc-chuan-jiang-327-a-c/</id>
    <published>2024-01-18T14:21:04.000Z</published>
    <updated>2024-08-21T14:53:49.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a-ab">A ab</h1><p><span class="math inline"><em>S</em></span> 长度不超过100，随便搞～</p><p>遍历一遍，如果一个是 “a” 且下一个字符是 “b” 就有，否则没有。</p><span id="more"></span><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, len;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line"><span class="keyword">if</span> ((s[i] == <span class="string">'a'</span> &amp;&amp; s[i + <span class="number">1</span>] == <span class="string">'b'</span>) || (s[i + <span class="number">1</span>] == <span class="string">'a'</span> &amp;&amp; s[i] == <span class="string">'b'</span>)) {</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"No\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https：//www.luogu.com.cn/record/133471689" title="AC记录">AC 记录</a></p><h1 id="b-aa">B A^A</h1><p><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.25ex;" xmlns="http://www.w3.org/2000/svg" width="8.341ex" height="2.398ex" role="img" focusable="false" viewBox="0 -949.5 3686.6 1060"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msqrt"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(500,0)"></path></g></g><g data-mml-node="mo" transform="translate(0,89.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="1000" height="60" x="853" y="829.5"></rect></g><g data-mml-node="mo" transform="translate(2130.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3186.6,0)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container></span>，枚举到 <span class="math inline">10<sup>5</sup></span> 最多了。</p><p>枚举就完事儿了，连快速幂都不需要的。</p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;b);</span><br><span class="line"><span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= (<span class="type">int</span>) <span class="number">1e5</span>; i++) {</span><br><span class="line">ll tmp = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (ll j = <span class="number">1</span>;j &lt;= i;j++)</span><br><span class="line">tmp *= i;</span><br><span class="line"><span class="keyword">if</span> (tmp == b) {</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"%lld\n"</span>, i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (tmp &gt; b) {</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">log</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https：//www.luogu.com.cn/record/133471890" title="AC记录">AC 记录</a></p><h1 id="c-number-place">C Number Place</h1><p>数独 <span class="math inline"> = 9 × 9</span>的矩阵，枚举就完事儿了。</p><p>ACCode：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="type">bool</span> cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (!cnt[a[x][y]])</span><br><span class="line">        cnt[a[x][y]] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">log</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// 读入，固定是九宫格</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) {</span><br><span class="line">        <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">            <span class="built_in">add</span>(i, j);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//  列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) {</span><br><span class="line">        <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">            <span class="built_in">add</span>(j, i);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">2</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">3</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">4</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">5</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">6</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">6</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="literal">false</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">7</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">8</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">9</span>, <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">log</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><del>三道题全是枚举。</del></p><p><a href="https：//www.luogu.com.cn/record/133417678" title="AC记录">AC 记录</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a-ab&quot;&gt;A ab&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&lt;em&gt;S&lt;/em&gt;&lt;/span&gt; 长度不超过
100，随便搞～&lt;/p&gt;
&lt;p&gt;遍历一遍，如果一个是 “a” 且下一个字符是 “b” 就有，否则没有。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="AT-ABC串讲" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/AT-ABC%E4%B8%B2%E8%AE%B2/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>P2580 于是他错误的点名开始了 题解</title>
    <link href="https://www.leo2011.eu.org/2024/01/18/p2580-yu-shi-ta-cuo-wu-de-dian-ming-kai-shi-liao-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/01/18/p2580-yu-shi-ta-cuo-wu-de-dian-ming-kai-shi-liao-ti-jie/</id>
    <published>2024-01-18T14:01:38.000Z</published>
    <updated>2024-08-21T14:38:16.002Z</updated>
    
    <content type="html"><![CDATA[<p>“普及 / <strong>提高 -</strong>” 这个难度很有意思。</p><p>说明这题可能需要用到提高组当中比较基础的内容。</p><span id="more"></span><p>它的名字叫做 map。</p><hr><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; a;</span><br><span class="line">a[<span class="number">7</span>] = <span class="number">5</span>;</span><br><span class="line">map&lt;string, <span class="type">int</span>&gt; score;</span><br><span class="line">score[<span class="string">"Leo2011"</span>] = <span class="number">400</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>map，其实相当于一个超大数组，但它真实的作用是：映射。比如<code>a[7] = 5;</code> 就是用 a 数组把 7 和 5关联了起来，这个操作就叫映射。</p><p>map 这东西 NB的地方在于，它能这么写：<code>score["Leo2011"] = 400;</code>。哎对，这个类似下标的玩意儿就是个字符串！</p><p>有了这不好办了？</p><hr><p>ACCode:</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">unordered_map&lt;string, <span class="type">int</span>&gt; mp;  <span class="comment">// map会自动排序，此时访问时间复杂度为O(logn)，unordered_map不排序，时间复杂度O(1)</span></span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) {</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">mp[s] = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m;i++) {</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">if</span> (mp[s] == <span class="number">1</span>) {</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"OK\n"</span>);</span><br><span class="line">mp[s] = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> (!mp[s])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"WRONG\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"REPEAT\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/129964488" title="AC记录">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;“普及 / &lt;strong&gt;提高 -&lt;/strong&gt;” 这个难度很有意思。&lt;/p&gt;
&lt;p&gt;说明这题可能需要用到提高组当中比较基础的内容。&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>P9012 [USACO23JAN] Moo Operations B 题解</title>
    <link href="https://www.leo2011.eu.org/2024/01/18/p9012-usaco23jan-moo-operations-b-ti-jie/"/>
    <id>https://www.leo2011.eu.org/2024/01/18/p9012-usaco23jan-moo-operations-b-ti-jie/</id>
    <published>2024-01-18T13:33:35.000Z</published>
    <updated>2024-12-22T12:37:13.336Z</updated>
    
    <content type="html"><![CDATA[<p><del>第 1 道赛场 AC 的题，必须发篇题解记录一下。</del></p><span id="more"></span>  <div class="note p-4 mb-4 rounded-small success">    <p>Tips: <span class="math inline">1 ≤ |<em>S</em>| ≤ 100</span>—— 题目</p>  </div><p>才 100，这就可以随便整活了。</p><hr><p>如果你稍微懂点英语，就会知道第 <span class="math inline">2 ∼ 4</span>个点的 <span class="math inline"><em>S</em></span> 都最多只有 <span class="math inline">3</span> 个字符，而目标 “MOO” 也是 <span class="math inline">3</span> 个字符，所以只需要模拟就可以了。</p><p>于是你迅速写出了下面的 check 函数，并用它 AC 了前几个点：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(string a)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (a.<span class="built_in">size</span>() &lt; <span class="number">3</span>)  <span class="comment">// 不让加字符，小于 3 的肯定就废了</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> step = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">"MOO"</span>)  <span class="comment">// 都一样了你还变它干啥，浪费表情(</span></span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line">string tmp1 = a;</span><br><span class="line">step++;</span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">0</span>] == <span class="string">'M'</span>)  <span class="comment">// 胡乱尝试</span></span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'M'</span>;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>) {</span><br><span class="line">step++;</span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">2</span>] == <span class="string">'M'</span>)</span><br><span class="line">tmp1[<span class="number">2</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">2</span>] = <span class="string">'M'</span>;</span><br><span class="line">} <span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>) {</span><br><span class="line">step--;  <span class="comment">// 撤销第 1 步操作，所以是--</span></span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">0</span>] == <span class="string">'M'</span>)</span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'M'</span>;</span><br><span class="line">} <span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>这样你就能顺利的 AC 前三个点了。</p><p>那剩下的咋整？</p><p>“MOO” 就仨字符，那你把它砍成只有仨字符的形式不就得了？反正 <span class="math inline">100</span>的数据量随便折腾。所以，你只需要把仨字符能组成的 8个字符串都枚举出来，挨个判断子串，如果仨字符的是子串，那么就是子串所需步数 + 原字符串长度 - 3。</p><hr><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string str;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? b : a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkSubString</span><span class="params">(string a, string b)</span> </span>{</span><br><span class="line"><span class="type">int</span> x = a.<span class="built_in">size</span>(), y = b.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span> (x &lt;= y) {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; y; i++) {</span><br><span class="line"><span class="keyword">if</span> (b[i] == a[<span class="number">0</span>]) {</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; x; j++)</span><br><span class="line"><span class="keyword">if</span> (b[i + j] == a[j])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(string a)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (a.<span class="built_in">size</span>() &lt; <span class="number">3</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> step = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">"MOO"</span>)</span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line">string tmp1 = a;</span><br><span class="line">step++;</span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">0</span>] == <span class="string">'M'</span>)</span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'M'</span>;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>) {</span><br><span class="line">step++;</span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">2</span>] == <span class="string">'M'</span>)</span><br><span class="line">tmp1[<span class="number">2</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">2</span>] = <span class="string">'M'</span>;</span><br><span class="line">} <span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>) {</span><br><span class="line">step--;</span><br><span class="line"><span class="keyword">if</span> (tmp1[<span class="number">0</span>] == <span class="string">'M'</span>)</span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp1[<span class="number">0</span>] = <span class="string">'M'</span>;</span><br><span class="line">} <span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line"><span class="keyword">if</span> (tmp1 != <span class="string">"MOO"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> step;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">checker</span><span class="params">(string x)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (x.<span class="built_in">size</span>() &lt;= <span class="number">3</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">check</span>(x);</span><br><span class="line"><span class="type">int</span> mn = <span class="number">10000</span>;</span><br><span class="line">string a[] = {<span class="string">"OOO"</span>, <span class="string">"OOM"</span>, <span class="string">"OMO"</span>, <span class="string">"OMM"</span>, <span class="string">"MOO"</span>, <span class="string">"MOM"</span>, <span class="string">"MMO"</span>, <span class="string">"MMM"</span>};</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) {</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">checkSubString</span>(a[i], x)) {</span><br><span class="line"><span class="type">int</span> tmp = <span class="built_in">check</span>(a[i]);</span><br><span class="line"><span class="keyword">if</span> (tmp != <span class="number">-1</span>)</span><br><span class="line">mn = <span class="built_in">min</span>(mn, (tmp + x.<span class="built_in">size</span>() - <span class="number">3</span>));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (mn == <span class="number">10000</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> mn;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">checker</span>(str));</span><br><span class="line">str = <span class="string">""</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><a class="link" href="https://www.luogu.com.cn/record/102461763" title="AC记录">AC 记录<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;第 1 道赛场 AC 的题，必须发篇题解记录一下。&lt;/del&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="题解" scheme="https://www.leo2011.eu.org/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>Python 环境安装与配置</title>
    <link href="https://www.leo2011.eu.org/2023/12/31/python-huan-jing-an-zhuang-yu-pei-zhi/"/>
    <id>https://www.leo2011.eu.org/2023/12/31/python-huan-jing-an-zhuang-yu-pei-zhi/</id>
    <published>2023-12-31T12:22:52.000Z</published>
    <updated>2024-11-17T04:02:49.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装python">安装 Python</h1><h2 id="下载安装python">下载安装 Python</h2><p>要用 Python，那肯定得先装个 Python 呐！</p><span id="more"></span><p>先把 <a class="link" href="https://www.python.org/">Python 官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>扒出来。访问速度一般不咋滴，请耐心等待～</p><p>如果正常，应该能出来个这个：<img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/W9Tymr7q8dbDJhG.png"></p><p><del>TMD 我等了半天出来个我不认识的全英版本？</del></p><p><del>是的，就是这样的。</del></p><p>没事，我帮你翻译。选 Downloads，鼠标在上面停留一会，会出现一个列表。直接选你用的系统（Win 就选 Windows，macOS 就是 macOS，Linux 的…… <del>自己找教程去吧，官方大概率没有</del>可以去 OtherPlatforms 瞅一瞅，没有就去问度娘吧），然后如下操作（macOS 的会有一个 <code>universal2 installer</code>，下载后打开，按指示操作就可以了）。</p><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/2TkyOsvB81NAdC3.png"></p><p>看图操作就好。下载可能比（fei）较（chang）慢，导入迅雷之类的下载器下载就好。</p><p>下载下来当然要打开啦（废话），正常情况下如图：</p><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/VWM1I6DTZEJoOvs.png"></p><p>勾了 <code>Add python.exe to PATH</code> 选项后一键安装就可以了。</p><p>然后静静地等着它安装。</p><p>安装的同时，可以去隔壁 <a class="link" href="https://www.jetbrains.com.cn">JetBrains 官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>看看，这理由待会要用的 IDE——Pycharm。</p><p>安装完后，按 win +r，输入 cmd，在弹出的窗口中输入 python（如果是 Linux/macOS，因为这两者系统中内置一个 Python 的 2.x 版本，你需要做的是在终端中输入 python3，相应地，后面的 pip 也要替换成 pip3)，如果结果如图，那么恭喜你，Python 安装成功（请注意！如果你没勾<code>Add python.exe to PATH</code> 这个选项，那么你电脑是查不到的！这种情况下需要你配置一下环境变量，每个版本的 Win 都不太一样，自己度娘去，实在不行重装吧……）！</p><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/2nbAXYyZe1FsqQC.png"></p><h2 id="配置pip">配置 pip</h2><p>下一步，是配置 pip。pip 是用来管理外部库的，类似应用宝。pip 默认的下载地址在国外，链接可能会 TLE，需要配置一下。</p><h3 id="linuxmacos用户">Linux/macOS 用户：</h3><p>打开配置文件 <code>~/.pip/pip.conf</code>（不存在就创建），修改如下：</p><div class="code-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span> = https://pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>这里，<code>https://pypi.tuna.tsinghua.edu.cn/simple</code> 是清华的镜像站，除了清华的，常用的还有：</p><table><colgroup><col style="width: 11%"><col style="width: 88%"></colgroup><thead><tr><th style="text-align: center;">名称</th><th style="text-align: center;">网站</th></tr></thead><tbody><tr><td style="text-align: center;">南科大镜像源 </td><td style="text-align: center;"><a class="link" href="https://mirrors.sustech.edu.cn/pypi/web/simple">https://mirrors.sustech.edu.cn/pypi/web/simple<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td></tr><tr><td style="text-align: center;">阿里云镜像站 </td><td style="text-align: center;"><a class="link" href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td></tr><tr><td style="text-align: center;">豆瓣镜像站 </td><td style="text-align: center;"><a class="link" href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td></tr><tr><td style="text-align: center;">中科大镜像站 </td><td style="text-align: center;"><a class="link" href="https://pypi.mirrors.ustc.edu.cn/simple">https://pypi.mirrors.ustc.edu.cn/simple<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td></tr></tbody></table><h3 id="windows用户">Windows 用户</h3><p>conf 文件在 <code>C:\Users\xx\pip</code>（xx 是你用户名），其它的照抄 Linux/macOS 的即可。</p><h2 id="升级turtle库">升级 turtle 库</h2><p>这个步骤不是必须的，但很推荐操作。</p><p>现在你终端中跑一下这行代码：</p><div class="code-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install turtle --upgrade turtle</span><br></pre></td></tr></tbody></table></figure></div><p>肯定会炸。翻到上面以 <code>Using cached xxx (xxkB)</code> 开头的那玩意，中间的部分是一个链接，用浏览器打开，会自动下载下来。</p><p>跑到下载目录，解压压缩包，找到 setup.py，用记事本或者其它任何能编辑文本的东西打开（如果你装了下面的 PyCharm，也可以用它）。找到第 40 行，更改成下面的样子：</p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">except</span> (ValueError, ve):</span><br></pre></td></tr></tbody></table></figure></div><p>保存，在终端中切到这个目录，运行以下代码：</p><div class="code-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -e turtle-0.0.2</span><br></pre></td></tr></tbody></table></figure></div><p>现在应该就成功啦！</p><h1 id="安装pycharm">安装 PyCharm</h1><p>这样 Python 就整完了，安装 PyCharm 去（当然，如果你愿意用 VSCode、Sublime 之类的其它工具写代码，我也不拦着你，但切记不要用自带的 IDLE 写，原因嘛<a class="link" href="https://leo2011.eu.org/2023/12/29/pythongui-tu-xing-hua-jie-mian-xiang-jie/">这里<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>有讲）。</p><p><a class="link" href="https://www.jetbrains.com.cn/pycharm/download/?section=windows">到这里<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，把页面拉到底部，下载 CommunityEdition 就可以了（ProfessionalEdition 是付费的，而 Community 是免费的）。这次安装包是中文的，按指示操作就好。</p><p>打开 PyCharm，会出来一个 <code>JETBRAINS COMMUNITY EDITION TERMS</code>，直接点下面的勾后 continue 就好。</p><p>然后的界面中，点击 <code>New Project</code>（新建一个项目，不建就没法使 PyCharm），在新的窗口中如图配置，配置好后点 Create 就好了。<img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/xavIFTyDdik6ABb.png"></p><p>配置好后，就可以愉快的享受被誉为 “宇宙最强 PythonIDE” 的 PyCharm 了！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;安装python&quot;&gt;安装 Python&lt;/h1&gt;
&lt;h2 id=&quot;下载安装python&quot;&gt;下载安装 Python&lt;/h2&gt;
&lt;p&gt;要用 Python，那肯定得先装个 Python 呐！&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://www.leo2011.eu.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PythonGUI 图形化界面详解</title>
    <link href="https://www.leo2011.eu.org/2023/12/29/pythongui-tu-xing-hua-jie-mian-xiang-jie/"/>
    <id>https://www.leo2011.eu.org/2023/12/29/pythongui-tu-xing-hua-jie-mian-xiang-jie/</id>
    <published>2023-12-29T15:07:10.000Z</published>
    <updated>2024-12-22T12:28:16.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><p>话说你看到的软件是不是都是用图形化界面（Graphical User Interface,GUI）整出来的？</p><span id="more"></span><p>比如这个：</p><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/iqI5jMRU7QHYdAk.png"></p><p>然鹅，再看看咱的 “图形化界面”：</p><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/eTdCoirSXB2gl17.png"></p><p>upd：这里的命令行界面连图形化界面都不是，应该叫文本用户界面（TextUser Interface, TUI），不可以混淆！</p><p>根本不是一个等级的啊！于是，我们来用 Python 整一个真正的 GUI 吧！</p><h1 id="安装环境">安装环境</h1>{% note info %}如果您已安装Python和一个另外的IDE，可以忽略此步骤。但如果后续发现有模块运行不了且代码、模块等正常，可以按照此步骤重新安装。{% endnote %}<p>见<a class="link" href="https://leo2011.eu.org/2023/12/31/python-huan-jing-an-zhuang-yu-pei-zhi/">这里<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><h1 id="easygui">easygui</h1><div class="code-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install easygui</span><br></pre></td></tr></tbody></table></figure></div><p>在你的终端中运行这段代码。如果出现了下面的东西，那么就说明安装 easygui 成功啦（以后我介绍的模块除了特殊说明外，都要用类似的方法安装，就不在提了）</p><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Looking in indexes: https://mirrors.sustech.edu.cn/pypi/simple</span><br><span class="line">Collecting easygui</span><br><span class="line">  Using cached https://mirrors.sustech.edu.cn/pypi/packages/8e/a7/b276ff776533b423710a285c8168b52551cb2ab0855443131fdc7fd8c16f/easygui-0.98.3-py2.py3-none-any.whl (92 kB)</span><br><span class="line">Installing collected packages: easygui</span><br><span class="line">Successfully installed easygui-0.98.3</span><br></pre></td></tr></tbody></table></figure></div><p></p><p>然后，在你的 IDE 中新建个<code>.py</code> 文件，输入这段代码，如果出现了下面这幅图，就算成功啦！</p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> eg</span><br><span class="line">eg.msgbox(<span class="string">"Hello World!"</span>)</span><br></pre></td></tr></tbody></table></figure></div><p><img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/oQdXu1b6DlRIhfw.png"></p><p>点掉下面的 <code>OK</code>，窗口就会消失。</p><p>如果有问题，请核实一下下面的东西：</p>{% note warning %}easygui 是运行在 tkinter 上并拥有自身的事件循环，而 IDLE 也是 tkinter 写的一个应用程序并也拥有自身的事件循环。因此当两者同时运行的时候，有可能会发生冲突，且带来不可预测的结果。因此如果你发现你的 easygui 程序有这样的问题，请尝试在 IDLE 外去运行你的程序。{% endnote %}<p>其实就 3 句话：</p><p>不要用自带的 IDLE！！！</p><p>不要用自带的 IDLE！！！</p><p>不要用自带的 IDLE！！！</p><p>如果没问题，那么，恭喜你，再次打开了新世界的大门！</p><p>接下来，就是对它的一顿研究了</p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eg.msgbox(msg=<span class="string">"A + B Problem"</span>, title=<span class="string">"Leo2011"</span>, ok_button=<span class="string">"I AK IOI!"</span>)</span><br></pre></td></tr></tbody></table></figure></div><p>不出所料的话，应该是这样的： <img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/Qbj1ciY2xNgSA4J.png"></p><p>看，我们用 <code>title="Leo2011"</code> 把标题改成了”Leo2011”，用 <code>ok_button="I AK IOI!"</code> 把下面的按钮改成了”IAK IOI!“。</p><p>这就 msgbox 能干的事了。</p><p>下面，咱来看另外的几个家伙：</p><ul><li><p>enterbox</p><p></p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = eg.enterbox(<span class="string">"欢迎您随便输入一堆东西"</span>, title=tit)</span><br><span class="line">eg.msgbox(msg=<span class="string">"您刚才输入了\n"</span>+s, title=tit, ok_button=<span class="string">"我知道了。"</span>)</span><br></pre></td></tr></tbody></table></figure></div> 能弹出这么个框： <img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/TxeWsutGwj2pnEg.png"><p></p></li></ul><p>框中可以随便输东西（只要你打得出来），输完了按回车或点 <code>OK</code>（这个不能改）结束。如果你点了 <code>Cancel</code> 或直接关掉了这个框，会返回 <code>None</code>（这不是一个字符串，是 <code>Nonetype</code>，意思就是啥也没有）</p><ul><li><p>multenterbox</p><p>有一堆 enterbox 在一个窗口里。</p></li><li><p>passwordbox</p><p>跟 enterbox 一样，只不过用户视角中输入的字符只能看到 “*”，跟输密码似的。</p></li><li><p>multpasswordbox</p><p>有一堆 passwordbox 在一个窗口里。</p></li><li><p>ccbox</p><p></p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = eg.ccbox(<span class="string">"欢迎您随便选东西"</span>, title=tit, choices=[<span class="string">"[D]ebug"</span>, <span class="string">"C[t]j"</span>])</span><br><span class="line">eg.msgbox(msg=<span class="string">"您刚才输入了\n"</span>+<span class="built_in">str</span>(s), title=tit, ok_button=<span class="string">"我知道了。"</span>)</span><br></pre></td></tr></tbody></table></figure></div>[] 里的字符相当于快捷键，你按下这个键就会认为你选了这个选项。ccbox 只能有两个选项（否则解释器会炸）。<p></p></li><li><p>boolbox/ynbox</p><p>同 ccbox，不讲。</p></li><li><p>choicebox</p><p></p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = eg.choicebox(<span class="string">"欢迎您随便选东西"</span>, title=tit, choices=[<span class="string">"Debug"</span>, <span class="string">"Ctj"</span>, <span class="string">"AC!"</span>])</span><br></pre></td></tr></tbody></table></figure></div> UI 会变成这样： <img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/IUa9WBrsV3ktwCS.png">刚才的快捷键就只能是首字母了。choicebox 可以有多个选项，但只能选一个（默认是第一个）。<p></p></li><li><p>buttonbox</p><p>同 choicebox，不讲。</p></li><li><p>indexbox</p><p>跟 choicebox 一样，只不过 choicebox 会返回你选中的文本，而 indexbox 会返回你选中的那货在你的选项列表里的下标。</p></li><li><p>multchoicebox</p><p><del>有一堆 choicebox 在一个窗口里？</del>这次 easygui 不按套路出牌了，界面长这样： <img lazyload="" src="/images/loading.svg" data-src="https://s2.loli.net/2024/07/23/8x2hM7pPnuZAdGy.png"><code>Select All</code> 就是全选，<code>Clear All</code> 就是全不选，剩下两个老朋友了。返回值是这样的 <code>['Debug', 'AC!']</code>。它会按你选中的选项在选项列表里的相对位置排成一个新列表。</p></li><li><p>integerbox</p><p></p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = eg.integerbox(msg=<span class="string">"请输入一个数"</span>, title=tit, default=<span class="number">5</span>, lowerbound=<span class="number">3</span>, upperbound=<span class="number">7</span>)</span><br></pre></td></tr></tbody></table></figure></div>指定你输入一个在 <code>lowerbound</code> 和 <code>upperbound</code> 之间的整数，默认为 <code>default</code>。如果不在区间内了会让你重新输入。<p></p></li><li><p>egdemo</p><p>easygui 所有函数的效果演示。</p></li></ul><p>eaysgui 确实很 easy！</p><h1 id="turtle">turtle</h1>{% note info %}Tips:实测Python turtle的不同版本在不同平台上可能会有所不同，本文以Windows 11 + Python 3.12.1为准。{% endnote %}<p>turtle 库（人送绰号 “海龟绘图”）是 Python 的内置库，安装了 Python 就可以直接用。</p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.write(<span class="string">"Hello World!"</span>)</span><br><span class="line">t.done()  <span class="comment"># 这一行必须要有，否则你是看不见你的效果的</span></span><br></pre></td></tr></tbody></table></figure></div><p></p><p>这就是你的第一个 turtle 程序了！</p><p>下面，还是来介绍几个基本函数的使用：</p><ul><li><p>home</p><p>木有参数。回到原点 (0,0)，也就是屏幕正中央的起始位置（这在你画图画懵 13 的时候很有用）。</p></li><li><p>forward/fd</p><p>1 个参数 <span class="math inline"><em>k</em></span>，表示你想要让这个画笔沿笔头方向前进<span class="math inline"><em>k</em></span>个像素。如 <code>fd(1000)</code> 即让画笔从当前位置前进 1000 个像素。</p></li><li><p>backward/bk/back</p><p>1 个参数 <span class="math inline"><em>k</em></span>，相当于 <code>fd(-k)</code>，即沿笔头方向后退<span class="math inline"><em>k</em></span> 步。</p></li><li><p>left/lt</p><p>1 个参数 <span class="math inline"><em>k</em></span>，表示你想让画笔左转 <span class="math inline"><em>k</em><sup>∘</sup></span>。</p></li><li><p>right/rt</p><p>1 个参数 <span class="math inline"><em>k</em></span>，表示你想让画笔右转 <span class="math inline"><em>k</em><sup>∘</sup></span>。</p></li><li><p>goto</p><p>2 个参数 <span class="math inline"><em>x</em>, <em>y</em></span>，表示将画笔直线移动到<span class="math inline">(<em>x</em>, <em>y</em>)</span> 的位置。如果画笔还没被抬起来，就会把轨迹画下来。</p></li><li><p>circle</p><p>用来画圆的（这是空心的）。参数最多 3 个：<span class="math inline"><em>r</em>, <em>e</em>, <em>s</em></span>， <span class="math inline"><em>r</em></span>表示要画的圆的半径（必须要写），<span class="math inline"><em>e</em></span>表示圆心角度数（默认为整个圆），<span class="math inline"><em>s</em></span>表示要画的正多边形边数（不写会自动确定）。这里解释一下，电脑上画圆不太现实，都是用正<span class="math inline"><em>n</em></span> 边形（这个 <span class="math inline"><em>n</em></span>一般不小）模拟出来的，所以这个函数即可用来画圆也可以用来画正多边形。</p></li><li><p>dot</p><p>也是画一个圆。最多两个参数：<span class="math inline"><em>d</em></span> 和 color。 <span class="math inline"><em>d</em></span>指要画的圆的直径，color 是一个字符串，表示要画的圆的颜色。与 circle 不同，dot 画的圆是实心的，而 circle 默认情况下是空心的。</p></li><li><p>penup/up/pu</p><p>抬起笔，此后在落下笔之前所有的操作都不会留下痕迹。</p></li><li><p>pendown/pd/down</p><p>落下笔。一般可以这么使： </p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">x, y</span>):</span><br><span class="line">    t.pu()</span><br><span class="line">    t.goto(x, y)</span><br><span class="line">    t.pd()</span><br></pre></td></tr></tbody></table></figure></div><p></p></li><li><p>speed</p><p>设置速度的，有一个参数 <span class="math inline"><em>v</em></span>。你在用的时候，应保证 <span class="math inline">0 ≤ <em>v</em> ≤ 10</span>。一般情况下，<span class="math inline"><em>v</em></span>是个整数，且越大代表越快，但也有例外：</p><table><thead><tr><th style="text-align: center;"><span class="math inline"><em>v</em></span> 的值</th><th style="text-align: center;">速度</th></tr></thead><tbody><tr><td style="text-align: center;"> 0 或”fastest”</td><td style="text-align: center;"> 最快</td></tr><tr><td style="text-align: center;"> 10 或”fast”</td><td style="text-align: center;"> 快</td></tr><tr><td style="text-align: center;"> 6 或”normal”</td><td style="text-align: center;"> 正常（默认）</td></tr><tr><td style="text-align: center;">3 或”slow”</td><td style="text-align: center;"> 慢</td></tr><tr><td style="text-align: center;"> 1 或”slowest”</td><td style="text-align: center;"> 最慢</td></tr></tbody></table></li><li><p> pensize/width</p><p>一个参数 <span class="math inline"><em>w</em></span>，表示画笔粗细。</p></li><li><p>pencolor</p><p>可以没有参数，此时返回画笔颜色（默认是黑色），也可以给出参数，此时是设置颜色。</p><p>有以下几种设置模式： </p><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t.pencolor(<span class="string">"red"</span>)  <span class="comment"># 设置为红色</span></span><br><span class="line">t.pencolor(<span class="string">"#abcde"</span>)  <span class="comment"># 设置为十六进制编码为“abcde”的颜色</span></span><br><span class="line">t.pencolor((<span class="number">1</span>, <span class="number">255</span>, <span class="number">255</span>))  <span class="comment"># 设置为青色。三个数值表示RGB编码</span></span><br><span class="line">t.pencolor(<span class="number">1</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 同上，只不过上面传过去的是一个元组。</span></span><br></pre></td></tr></tbody></table></figure></div><p></p></li><li><p>fiilcolor</p><p>填充颜色，同上。</p></li><li><p>color</p><p>两个都设置了，可以填写 1~2 组参数。1 组就是设置成一样的，两组就是先 pencolor 再 fillcolor。</p></li><li><p>bgcolor</p><p>背景颜色，参数同 pencolor。</p></li><li><p>bgpic</p><p>背景图片，需要给一个字符串表示背景图片位置。如果是”nopic” 就是删除背景图片。</p></li><li><p>begin_fill</p><p>记录一下，准备填充。</p></li><li><p>end_fill</p><p>把上次 begin_fill 以后画的东西填充成 fillcolor。</p></li><li><p>write</p><p>主要有 2 个参数，文字和设置。可以把文字设置成属性后写上去，如开头的例子。</p></li><li><p>hideturtle/ht</p><p>隐藏画笔，能加速。</p></li><li><p>showturtle/st</p><p>显示画笔。</p></li><li><p>shape</p><p>海龟绘图，海龟在哪儿呢？</p><p>就是这么设置的。</p><p>给定一个参数，它会自动把海龟调整成对应的形状。</p><p>支持以下形状：</p><ul><li>“arrow”</li><li>“turtle”</li><li>“square”</li><li>“triangle”</li><li>“classic”</li></ul><p>可以自己去试一试～</p></li><li><p>stamp</p><p>把画笔印在当前位置，即在那个位置留下海龟的形状。</p></li></ul><p>turtle 库就先介绍这些，不少了。自个儿试着画几张图去吧！</p><p>老规矩，有问题的欢迎私信联系我。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;简介&lt;/h1&gt;
&lt;p&gt;话说你看到的软件是不是都是用图形化界面（Graphical User Interface,
GUI）整出来的？&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://www.leo2011.eu.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>关于三目运算符，你需要知道的一切</title>
    <link href="https://www.leo2011.eu.org/2023/11/25/guan-yu-san-mu-yun-suan-fu-ni-xu-yao-zhi-dao-de-yi-qie/"/>
    <id>https://www.leo2011.eu.org/2023/11/25/guan-yu-san-mu-yun-suan-fu-ni-xu-yao-zhi-dao-de-yi-qie/</id>
    <published>2023-11-25T06:35:08.000Z</published>
    <updated>2024-08-21T14:27:54.265Z</updated>
    
    <content type="html"><![CDATA[<p>if…else 语句常写吧？</p><span id="more"></span><p>But，你会不会觉得：</p><p>写 if…else？ 烦死了！</p><p>写 switch？就俩我写啥……</p><p>于是，又一个 C 艹利器 —— 三目运算符诞生啦！</p><p>先上代码：</p><p><code>mn = (a &lt; b) ? a : b; /* 其中，? :为三目运算符，一般为“结果保存值 = 条件 ? 结果A : 结果B*/</code></p><p>意思即：如果 a &lt; b，那么 mn = a，否则 mn = b</p><p>那不就是 if…else 吗！</p><p>不，如果你用 if…else，那么代码会变成这样：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &lt; b)</span><br><span class="line">mn = a;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mn = b;</span><br></pre></td></tr></tbody></table></figure></div><p>不仅变长了，而且，三目运算符是个运算符，它可以被塞进别的语句（写 DFS或 DP 的时候可能会用到）里面！</p><p>最后，说一下性能排名。三目运算符作为运算，速度最快，但也有很大的限制（必须要有 1 个变量给赋值）。而 switch 和 if…else 不相上下，但是 3 个以上语句时，switch 不仅更方便，还更快哟。</p><p>但 if…else 也不是一无是处，像浮点数这种你还真得用 if…else 是不？</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;if…else 语句常写吧？&lt;/p&gt;</summary>
    
    
    
    <category term="“你需要知道的一切”系列" scheme="https://www.leo2011.eu.org/categories/%E2%80%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%B8%80%E5%88%87%E2%80%9D%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>关于__int128 和 short，你需要知道的一切</title>
    <link href="https://www.leo2011.eu.org/2023/11/25/guan-yu-int128-he-short-ni-xu-yao-zhi-dao-de-yi-qie/"/>
    <id>https://www.leo2011.eu.org/2023/11/25/guan-yu-int128-he-short-ni-xu-yao-zhi-dao-de-yi-qie/</id>
    <published>2023-11-25T06:34:49.000Z</published>
    <updated>2024-12-22T11:58:49.772Z</updated>
    
    <content type="html"><![CDATA[<p>高精度大家都认识吧？</p><p>但是，高精度这货是真滴长……</p><span id="more"></span><p>于是，人们又发明出了一个东西 __int128！</p><p>__int128（注意前面有 2 个下划线）嘛，把特点写脸上了：占用 128 位，也就是 16 个字节。储存范围，自然也是占用 64 位的 longlong 的 2 倍。换算一下，能存三十多近四十位。基本上可以代替部分高精度了。</p><p>那__int128 这么 NB，咋就不能被广泛使用呢（好多教材没教这个对不）？</p><p>因为它缺陷也很多：</p><ol type="1"><li>不通用。__int128 并没有在任何一个 C 艹标准中严格定义，所以目前它只是 GCC 系列编译器的专属（NOILinux 恰好也用的是 GCC，所以__int128 可用。然鹅，使用 VisualStudio 的同志们，你们用的编译器一般是 MSVC，是不支持的。）。</li><li>不方便。__int128 目前看来是不支持直接读入、输出的。管你是 cin、cout、scanf 还是 printf，都甭想输入一个__int128 类型的数据。于是它需要通过<a href="https://www.leo2011.eu.org/2024/07/29/ti-jie-p10815-mo-ban-kuai-su-du-ru/">快读（快写）</a>来读入 / 输出。</li><li>空间大，速度慢。__int128 占用了 16 个字节来存，MLE 的风险显著增加。空间大速度还慢。你想啊，人家 int 才 32 位，64 位的 CPU 一次处理俩；你 128 位，64 位的 CPU 两次处理 1 个，不得慢死（TLE 风险增加）……</li></ol><p>不过，为了让大家多掌握（pian）亿点东（fen）西，下面给出使用__int128 时的基本框架。</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> log printf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">__int128 n;</span><br><span class="line"></span><br><span class="line"><span class="function">__int128 <span class="title">reader</span><span class="params">()</span> </span>{</span><br><span class="line">__int128 x = <span class="number">0</span>; <span class="comment">// 虽然限制那么多，但咱赋个值总还是可以的吧…… </span></span><br><span class="line">    <span class="type">int</span> w = <span class="number">0</span>; </span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) { </span><br><span class="line">    w |= ch == <span class="string">'-'</span>; ch = <span class="built_in">getchar</span>(); </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) </span><br><span class="line">    x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (ch ^ <span class="number">48</span>), ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> w ? -x : x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(__int128 x)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        x *= <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">9</span>)</span><br><span class="line"><span class="built_in">output</span>(x / <span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);  <span class="comment">// 众所周知这货只能搞四则运算，输出还请数位分解一下（其实就是快读快写）</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{  <span class="comment">// 你变量全用__int128我也不拦着你，但永远记住main函数不开int（好吧用signed也行，因为这货本来就是signed int）会CE的哈 </span></span><br><span class="line">n = <span class="built_in">reader</span>();</span><br><span class="line"><span class="comment">// 请自行操作</span></span><br><span class="line"><span class="built_in">output</span>(n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><hr><p>说了这么半天慢的太吓人的__int128，那有木有一个特快的，比如说 16 位 2 个字节的哪种？还真有，而且这个槽点就没那么多了。它就是 ——short！</p><p>short 这玩意儿可比__int128 强多了。它是通用的，也是可以直接读入、输出的（scanf和 printf 统一用 “% hd”）。</p><p>那为啥它用的也不多呢？</p><p>因为它太省内存了，你说它就 <span class="math inline">2<sup>15</sup> − 1</span>(不到 4万）的存储范围能存个啥？</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;高精度大家都认识吧？&lt;/p&gt;
&lt;p&gt;但是，高精度这货是真滴长……&lt;/p&gt;</summary>
    
    
    
    <category term="“你需要知道的一切”系列" scheme="https://www.leo2011.eu.org/categories/%E2%80%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%B8%80%E5%88%87%E2%80%9D%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>关于 switch，你需要知道的一切</title>
    <link href="https://www.leo2011.eu.org/2023/11/25/guan-yu-switch-ni-xu-yao-zhi-dao-de-yi-qie/"/>
    <id>https://www.leo2011.eu.org/2023/11/25/guan-yu-switch-ni-xu-yao-zhi-dao-de-yi-qie/</id>
    <published>2023-11-25T06:03:51.000Z</published>
    <updated>2024-08-21T14:24:27.285Z</updated>
    
    <content type="html"><![CDATA[<p>话说写代码时要写 1 吨 if 的题你们有木有遇到？</p><span id="more"></span><p>比如<a class="link" href="https://wonderland.run/p/T1347">这道题<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>。6 个操作要写6 个 if！那么你的代码可能会成这德行：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>) {</span><br><span class="line"><span class="comment">// 一顿操作猛如虎</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">2</span>) {</span><br><span class="line"><span class="comment">// 一顿操作猛如虎</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">3</span>) {</span><br><span class="line"><span class="comment">// 一顿操作猛如虎</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">4</span>) {</span><br><span class="line"><span class="comment">// 一顿操作猛如虎</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">5</span>) {</span><br><span class="line"><span class="comment">// 一顿操作猛如虎</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="comment">//一顿操作猛如虎</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>坑 * 啊！一个这写 20 多行……</p><p>于是，人们发明了这个东西：switch！</p><p>switch 这玩意儿需要你给它 1 个数，它会自己判断。</p><p>格式大概是这样：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (op) {</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line">......</span><br><span class="line"><span class="keyword">case</span> <span class="number">10086</span>: <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span> : <span class="comment">/*一顿操作猛如虎*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>咱来解读一下这货咋跑的：</p><p>先进去，op 是几就进哪个 case（与位置无关），执行里面的操作。注意 case语句后面的操作无论有几个语句都不用像 if或循环那样写个花括号括起来。最后，如果你认为到此为止了，那么写个 “break” 结束。如果你不写 “break”，那么它会自动执行下一个语句（可以是case，也可以是 default）</p><p>如果哪个 case 都不对应呢？那么这个时候就进了 default。default已经是默认一波操作了，不需要 break 了。</p><p>明白了不？</p><p>那么用 switch 语句改写上面那段代码就会变成这德行：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (op) {</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span> :  <span class="comment">/*一顿操作猛如虎*/</span> <span class="keyword">break</span>;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>是不是清爽了好多？</p><hr><p>Q &amp; A:</p><ol type="1"><li><p>case 里的 break; 还能结束循环吗？</p><p>不能，只能结束该 switch 语句。</p></li><li><p>你最后的那段代码没有 default 哎……</p><p>这货本来就是默认操作，可写可不写。就像你也写过 1 吨不带 else 的 if一样……</p></li><li><p>default 只能写在最后嘛？</p><p>你爱写哪儿写哪儿，反正能走 case 的都先走 case了。只不过一般会写在最后。</p></li><li><p>switch (op) 中的 op 可以是哪几种类型呢？</p><p>一般都是整数，有时也会用char。但你千万别用浮点数（浮点数都敢枚举，疯了？这得枚举到猴年马月去…… 为了给你续命，正常的编译器都会直接 CE）。</p></li><li><p>case 里的东西只能写在 1 行里弄得我码风都乱了……</p><p>不是，这 TM 谁告诉你只能写在 1 行里的？你要是愿意可以写 10086w行，反正都不用加花括号。写在 1 行里只是为了方便阅读……</p></li><li><p> 能嵌套吗？</p><p>当然可以，switch= 特殊的 if 语句，你 if 能嵌套 switch咋就不行了？</p></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;话说写代码时要写 1 吨 if 的题你们有木有遇到？&lt;/p&gt;</summary>
    
    
    
    <category term="“你需要知道的一切”系列" scheme="https://www.leo2011.eu.org/categories/%E2%80%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%B8%80%E5%88%87%E2%80%9D%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
  <entry>
    <title>关于 auto，你需要知道的一切</title>
    <link href="https://www.leo2011.eu.org/2023/09/24/guan-yu-auto-ni-xu-yao-zhi-dao-de-yi-qie/"/>
    <id>https://www.leo2011.eu.org/2023/09/24/guan-yu-auto-ni-xu-yao-zhi-dao-de-yi-qie/</id>
    <published>2023-09-24T09:35:39.000Z</published>
    <updated>2024-12-22T12:00:33.906Z</updated>
    
    <content type="html"><![CDATA[<p>话说咱写 STL 的时候经常会要写迭代器，大概是这么一大串东西：<span id="more"></span></p><p><code>vector&lt;int&gt;::iterator iter = data.begin();</code></p><p>好烦啊！而且，iterator 这个单词容易写错（CE：走好不送）……</p><p>于是，在 C 艹 11 标准中，C 艹开发者发明了一个超级好用的东西：auto!</p><p>auto 这货类似于 Python 定义变量，会自动确定它的类型！</p><p>如：</p><p><code>auto a = 3; // a为int类型</code></p><p><code>auto b = a + 0.1;  // b为double类型</code></p><p>好爽哦有木有！</p><p>于是，开头的那段代码就可以写成这德行：</p><p><code>auto iter = data.begin();</code></p><p>你以为这就结束了？不，还有！</p><p>咱还能这么玩：</p><div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : data) {  <span class="comment">// 不用auto写也行，只不过auto较简便</span></span><br><span class="line">    <span class="comment">// 正常写，i是普通的迭代器</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>不过需要注意几点：</p><ol type="1"><li><p>auto 和 for 里用冒号的写法和 to_string 函数一样，都是 C 艹11 的新特性，在 Dev-C 艹中需要单独设置（否则直接炸裂）</p></li><li><p>比赛时采用 C 艹 14 标准，可放心使用</p></li><li><p> auto因为要自动判断类型，运行速度会略慢一丁点，不过差距大概就是 scanf 和cin 那点，一般 €€£ 不会在这点上卡常的 (ps：据说 €€£在敛财将评测机由 “老爷机” 置换为 “少爷机”，传闻新评测机能够在 1 秒内AC (<span class="math inline">10<sup>5</sup> × 10<sup>5</sup></span>) 的数据。但只是传言！现在还没有那么快！老老实实把代码时间复杂度降下来吧)……</p></li><li><p> 别尝试在不赋初值的情况下 auto 变量，否则大概是这个场景：</p><p>你： <code>auto arr[10086], x;  // 应该是两个 int</code></p><p>编译器：<code>这踏马谁知道arr这货是啥类型啊……这个x又是个啥？？？</code></p><p>Python ：<code>我咋可以呢？</code></p><p>编译器：<code>废话你啥都能存进去……</code></p><p>评测组件：<code>Compile Error！</code></p><p>€€£ 砖家组：<code>唉，又一个爆0了的……</code></p><p>到时候别怪我没提醒你啊……</p></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">&lt;p&gt;话说咱写 STL 的时候经常会要写迭代器，大概是这么一大串东西：&lt;/p&gt;</summary>
    
    
    
    <category term="“你需要知道的一切”系列" scheme="https://www.leo2011.eu.org/categories/%E2%80%9C%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%B8%80%E5%88%87%E2%80%9D%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="C艹" scheme="https://www.leo2011.eu.org/tags/C%E8%89%B9/"/>
    
  </entry>
  
</feed>
